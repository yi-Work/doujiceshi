{"version":3,"file":"js/80.827dfa15.js","mappings":"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","sources":["webpack://doujimall/../src/Layout.ts","webpack://doujimall/./node_modules/@solana/buffer-layout/node_modules/buffer/index.js","webpack://doujimall/./node_modules/@solana/web3.js/node_modules/buffer/index.js","webpack://doujimall/./node_modules/base-x/src/index.js","webpack://doujimall/./node_modules/bigint-buffer/dist/browser.js","webpack://doujimall/./node_modules/borsh/lib/index.js","webpack://doujimall/./node_modules/bs58/index.js","webpack://doujimall/./node_modules/jayson/lib/client/browser/index.js","webpack://doujimall/./node_modules/jayson/lib/generateRequest.js","webpack://doujimall/./node_modules/rpc-websockets/dist/lib/client.js","webpack://doujimall/./node_modules/rpc-websockets/dist/lib/client/websocket.browser.js","webpack://doujimall/./node_modules/@babel/runtime/helpers/assertThisInitialized.js","webpack://doujimall/./node_modules/@babel/runtime/helpers/asyncToGenerator.js","webpack://doujimall/./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack://doujimall/./node_modules/@babel/runtime/helpers/createClass.js","webpack://doujimall/./node_modules/@babel/runtime/helpers/getPrototypeOf.js","webpack://doujimall/./node_modules/@babel/runtime/helpers/inherits.js","webpack://doujimall/./node_modules/@babel/runtime/helpers/interopRequireDefault.js","webpack://doujimall/./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","webpack://doujimall/./node_modules/@babel/runtime/helpers/regeneratorRuntime.js","webpack://doujimall/./node_modules/@babel/runtime/helpers/setPrototypeOf.js","webpack://doujimall/./node_modules/@babel/runtime/helpers/toPrimitive.js","webpack://doujimall/./node_modules/@babel/runtime/helpers/toPropertyKey.js","webpack://doujimall/./node_modules/@babel/runtime/helpers/typeof.js","webpack://doujimall/./node_modules/@babel/runtime/regenerator/index.js","webpack://doujimall/../src/_assert.ts","webpack://doujimall/../src/crypto.ts","webpack://doujimall/../src/utils.ts","webpack://doujimall/../src/_sha2.ts","webpack://doujimall/../src/_u64.ts","webpack://doujimall/../src/sha512.ts","webpack://doujimall/../../src/abstract/utils.ts","webpack://doujimall/../../src/abstract/modular.ts","webpack://doujimall/../../src/abstract/curve.ts","webpack://doujimall/../../src/abstract/edwards.ts","webpack://doujimall/../src/ed25519.ts","webpack://doujimall/./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack://doujimall/../src/sha256.ts","webpack://doujimall/./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack://doujimall/./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack://doujimall/./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack://doujimall/./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","webpack://doujimall/../src/error.ts","webpack://doujimall/../src/struct.ts","webpack://doujimall/../src/structs/utilities.ts","webpack://doujimall/../src/structs/types.ts","webpack://doujimall/../src/structs/coercions.ts","webpack://doujimall/./node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","webpack://doujimall/./node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","webpack://doujimall/./node_modules/@babel/runtime/helpers/esm/construct.js","webpack://doujimall/./node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","webpack://doujimall/./node_modules/@babel/runtime/helpers/esm/superPropBase.js","webpack://doujimall/./node_modules/@babel/runtime/helpers/esm/get.js","webpack://doujimall/../src/sha3.ts","webpack://doujimall/../src/hmac.ts","webpack://doujimall/../../src/abstract/weierstrass.ts","webpack://doujimall/../src/_shortw_utils.ts","webpack://doujimall/../src/secp256k1.ts","webpack://doujimall/../src/utils/ed25519.ts","webpack://doujimall/../src/utils/to-buffer.ts","webpack://doujimall/../src/utils/borsh-schema.ts","webpack://doujimall/../src/publickey.ts","webpack://doujimall/../src/bpf-loader-deprecated.ts","webpack://doujimall/../src/account.ts","webpack://doujimall/../src/transaction/constants.ts","webpack://doujimall/../src/transaction/expiry-custom-errors.ts","webpack://doujimall/../src/message/account-keys.ts","webpack://doujimall/../src/layout.ts","webpack://doujimall/../src/utils/shortvec-encoding.ts","webpack://doujimall/../src/utils/assert.ts","webpack://doujimall/../src/message/compiled-keys.ts","webpack://doujimall/../src/message/legacy.ts","webpack://doujimall/../src/message/v0.ts","webpack://doujimall/../src/transaction/legacy.ts","webpack://doujimall/../src/transaction/versioned.ts","webpack://doujimall/../src/timing.ts","webpack://doujimall/../src/sysvar.ts","webpack://doujimall/../src/utils/send-and-confirm-transaction.ts","webpack://doujimall/../src/utils/sleep.ts","webpack://doujimall/../src/instruction.ts","webpack://doujimall/../src/fee-calculator.ts","webpack://doujimall/../src/nonce-account.ts","webpack://doujimall/../src/utils/bigint.ts","webpack://doujimall/../src/programs/system.ts","webpack://doujimall/../src/loader.ts","webpack://doujimall/../src/bpf-loader.ts","webpack://doujimall/../../../node_modules/.pnpm/fast-stable-stringify@1.0.0/node_modules/fast-stable-stringify/index.js","webpack://doujimall/../src/epoch-schedule.ts","webpack://doujimall/../src/errors.ts","webpack://doujimall/../src/__forks__/browser/fetch-impl.ts","webpack://doujimall/../src/rpc-websocket.ts","webpack://doujimall/../src/account-data.ts","webpack://doujimall/../src/programs/address-lookup-table/state.ts","webpack://doujimall/../src/utils/makeWebsocketUrl.ts","webpack://doujimall/../src/connection.ts","webpack://doujimall/../src/keypair.ts","webpack://doujimall/../src/programs/address-lookup-table/index.ts","webpack://doujimall/../src/programs/compute-budget.ts","webpack://doujimall/../src/programs/ed25519.ts","webpack://doujimall/../src/utils/secp256k1.ts","webpack://doujimall/../src/programs/secp256k1.ts","webpack://doujimall/../src/programs/stake.ts","webpack://doujimall/../src/programs/vote.ts","webpack://doujimall/../src/validator-info.ts","webpack://doujimall/../src/vote-account.ts","webpack://doujimall/../src/index.ts","webpack://doujimall/../src/solana-wallet.ts","webpack://doujimall/./node_modules/text-encoding-utf-8/lib/encoding.lib.mjs"],"sourcesContent":[null,"/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet converter;\n/**\n * Convert a little-endian buffer into a BigInt.\n * @param buf The little-endian buffer to convert\n * @returns A BigInt with the little-endian representation of buf.\n */\nfunction toBigIntLE(buf) {\n    {\n        const reversed = Buffer.from(buf);\n        reversed.reverse();\n        const hex = reversed.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, false);\n}\nexports.toBigIntLE = toBigIntLE;\n/**\n * Convert a big-endian buffer into a BigInt\n * @param buf The big-endian buffer to convert.\n * @returns A BigInt with the big-endian representation of buf.\n */\nfunction toBigIntBE(buf) {\n    {\n        const hex = buf.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, true);\n}\nexports.toBigIntBE = toBigIntBE;\n/**\n * Convert a BigInt to a little-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A little-endian buffer representation of num.\n */\nfunction toBufferLE(num, width) {\n    {\n        const hex = num.toString(16);\n        const buffer = Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n        buffer.reverse();\n        return buffer;\n    }\n    // Allocation is done here, since it is slower using napi in C\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), false);\n}\nexports.toBufferLE = toBufferLE;\n/**\n * Convert a BigInt to a big-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A big-endian buffer representation of num.\n */\nfunction toBufferBE(num, width) {\n    {\n        const hex = num.toString(16);\n        return Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n    }\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), true);\n}\nexports.toBufferBE = toBufferBE;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeUnchecked = exports.deserialize = exports.serialize = exports.BinaryReader = exports.BinaryWriter = exports.BorshError = exports.baseDecode = exports.baseEncode = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst bs58_1 = __importDefault(require(\"bs58\"));\n// TODO: Make sure this polyfill not included when not required\nconst encoding = __importStar(require(\"text-encoding-utf-8\"));\nconst ResolvedTextDecoder = typeof TextDecoder !== \"function\" ? encoding.TextDecoder : TextDecoder;\nconst textDecoder = new ResolvedTextDecoder(\"utf-8\", { fatal: true });\nfunction baseEncode(value) {\n    if (typeof value === \"string\") {\n        value = Buffer.from(value, \"utf8\");\n    }\n    return bs58_1.default.encode(Buffer.from(value));\n}\nexports.baseEncode = baseEncode;\nfunction baseDecode(value) {\n    return Buffer.from(bs58_1.default.decode(value));\n}\nexports.baseDecode = baseDecode;\nconst INITIAL_LENGTH = 1024;\nclass BorshError extends Error {\n    constructor(message) {\n        super(message);\n        this.fieldPath = [];\n        this.originalMessage = message;\n    }\n    addToFieldPath(fieldName) {\n        this.fieldPath.splice(0, 0, fieldName);\n        // NOTE: Modifying message directly as jest doesn't use .toString()\n        this.message = this.originalMessage + \": \" + this.fieldPath.join(\".\");\n    }\n}\nexports.BorshError = BorshError;\n/// Binary encoder.\nclass BinaryWriter {\n    constructor() {\n        this.buf = Buffer.alloc(INITIAL_LENGTH);\n        this.length = 0;\n    }\n    maybeResize() {\n        if (this.buf.length < 16 + this.length) {\n            this.buf = Buffer.concat([this.buf, Buffer.alloc(INITIAL_LENGTH)]);\n        }\n    }\n    writeU8(value) {\n        this.maybeResize();\n        this.buf.writeUInt8(value, this.length);\n        this.length += 1;\n    }\n    writeU16(value) {\n        this.maybeResize();\n        this.buf.writeUInt16LE(value, this.length);\n        this.length += 2;\n    }\n    writeU32(value) {\n        this.maybeResize();\n        this.buf.writeUInt32LE(value, this.length);\n        this.length += 4;\n    }\n    writeU64(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 8)));\n    }\n    writeU128(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 16)));\n    }\n    writeU256(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 32)));\n    }\n    writeU512(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 64)));\n    }\n    writeBuffer(buffer) {\n        // Buffer.from is needed as this.buf.subarray can return plain Uint8Array in browser\n        this.buf = Buffer.concat([\n            Buffer.from(this.buf.subarray(0, this.length)),\n            buffer,\n            Buffer.alloc(INITIAL_LENGTH),\n        ]);\n        this.length += buffer.length;\n    }\n    writeString(str) {\n        this.maybeResize();\n        const b = Buffer.from(str, \"utf8\");\n        this.writeU32(b.length);\n        this.writeBuffer(b);\n    }\n    writeFixedArray(array) {\n        this.writeBuffer(Buffer.from(array));\n    }\n    writeArray(array, fn) {\n        this.maybeResize();\n        this.writeU32(array.length);\n        for (const elem of array) {\n            this.maybeResize();\n            fn(elem);\n        }\n    }\n    toArray() {\n        return this.buf.subarray(0, this.length);\n    }\n}\nexports.BinaryWriter = BinaryWriter;\nfunction handlingRangeError(target, propertyKey, propertyDescriptor) {\n    const originalMethod = propertyDescriptor.value;\n    propertyDescriptor.value = function (...args) {\n        try {\n            return originalMethod.apply(this, args);\n        }\n        catch (e) {\n            if (e instanceof RangeError) {\n                const code = e.code;\n                if ([\"ERR_BUFFER_OUT_OF_BOUNDS\", \"ERR_OUT_OF_RANGE\"].indexOf(code) >= 0) {\n                    throw new BorshError(\"Reached the end of buffer when deserializing\");\n                }\n            }\n            throw e;\n        }\n    };\n}\nclass BinaryReader {\n    constructor(buf) {\n        this.buf = buf;\n        this.offset = 0;\n    }\n    readU8() {\n        const value = this.buf.readUInt8(this.offset);\n        this.offset += 1;\n        return value;\n    }\n    readU16() {\n        const value = this.buf.readUInt16LE(this.offset);\n        this.offset += 2;\n        return value;\n    }\n    readU32() {\n        const value = this.buf.readUInt32LE(this.offset);\n        this.offset += 4;\n        return value;\n    }\n    readU64() {\n        const buf = this.readBuffer(8);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU128() {\n        const buf = this.readBuffer(16);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU256() {\n        const buf = this.readBuffer(32);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU512() {\n        const buf = this.readBuffer(64);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readBuffer(len) {\n        if (this.offset + len > this.buf.length) {\n            throw new BorshError(`Expected buffer length ${len} isn't within bounds`);\n        }\n        const result = this.buf.slice(this.offset, this.offset + len);\n        this.offset += len;\n        return result;\n    }\n    readString() {\n        const len = this.readU32();\n        const buf = this.readBuffer(len);\n        try {\n            // NOTE: Using TextDecoder to fail on invalid UTF-8\n            return textDecoder.decode(buf);\n        }\n        catch (e) {\n            throw new BorshError(`Error decoding UTF-8 string: ${e}`);\n        }\n    }\n    readFixedArray(len) {\n        return new Uint8Array(this.readBuffer(len));\n    }\n    readArray(fn) {\n        const len = this.readU32();\n        const result = Array();\n        for (let i = 0; i < len; ++i) {\n            result.push(fn());\n        }\n        return result;\n    }\n}\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU8\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU16\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU32\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU64\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU128\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU256\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU512\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readString\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readFixedArray\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readArray\", null);\nexports.BinaryReader = BinaryReader;\nfunction capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\nfunction serializeField(schema, fieldName, value, fieldType, writer) {\n    try {\n        // TODO: Handle missing values properly (make sure they never result in just skipped write)\n        if (typeof fieldType === \"string\") {\n            writer[`write${capitalizeFirstLetter(fieldType)}`](value);\n        }\n        else if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                if (value.length !== fieldType[0]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[0]}, but got ${value.length} bytes`);\n                }\n                writer.writeFixedArray(value);\n            }\n            else if (fieldType.length === 2 && typeof fieldType[1] === \"number\") {\n                if (value.length !== fieldType[1]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[1]}, but got ${value.length} bytes`);\n                }\n                for (let i = 0; i < fieldType[1]; i++) {\n                    serializeField(schema, null, value[i], fieldType[0], writer);\n                }\n            }\n            else {\n                writer.writeArray(value, (item) => {\n                    serializeField(schema, fieldName, item, fieldType[0], writer);\n                });\n            }\n        }\n        else if (fieldType.kind !== undefined) {\n            switch (fieldType.kind) {\n                case \"option\": {\n                    if (value === null || value === undefined) {\n                        writer.writeU8(0);\n                    }\n                    else {\n                        writer.writeU8(1);\n                        serializeField(schema, fieldName, value, fieldType.type, writer);\n                    }\n                    break;\n                }\n                case \"map\": {\n                    writer.writeU32(value.size);\n                    value.forEach((val, key) => {\n                        serializeField(schema, fieldName, key, fieldType.key, writer);\n                        serializeField(schema, fieldName, val, fieldType.value, writer);\n                    });\n                    break;\n                }\n                default:\n                    throw new BorshError(`FieldType ${fieldType} unrecognized`);\n            }\n        }\n        else {\n            serializeStruct(schema, value, writer);\n        }\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction serializeStruct(schema, obj, writer) {\n    if (typeof obj.borshSerialize === \"function\") {\n        obj.borshSerialize(writer);\n        return;\n    }\n    const structSchema = schema.get(obj.constructor);\n    if (!structSchema) {\n        throw new BorshError(`Class ${obj.constructor.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        structSchema.fields.map(([fieldName, fieldType]) => {\n            serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n        });\n    }\n    else if (structSchema.kind === \"enum\") {\n        const name = obj[structSchema.field];\n        for (let idx = 0; idx < structSchema.values.length; ++idx) {\n            const [fieldName, fieldType] = structSchema.values[idx];\n            if (fieldName === name) {\n                writer.writeU8(idx);\n                serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n                break;\n            }\n        }\n    }\n    else {\n        throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${obj.constructor.name}`);\n    }\n}\n/// Serialize given object using schema of the form:\n/// { class_name -> [ [field_name, field_type], .. ], .. }\nfunction serialize(schema, obj, Writer = BinaryWriter) {\n    const writer = new Writer();\n    serializeStruct(schema, obj, writer);\n    return writer.toArray();\n}\nexports.serialize = serialize;\nfunction deserializeField(schema, fieldName, fieldType, reader) {\n    try {\n        if (typeof fieldType === \"string\") {\n            return reader[`read${capitalizeFirstLetter(fieldType)}`]();\n        }\n        if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                return reader.readFixedArray(fieldType[0]);\n            }\n            else if (typeof fieldType[1] === \"number\") {\n                const arr = [];\n                for (let i = 0; i < fieldType[1]; i++) {\n                    arr.push(deserializeField(schema, null, fieldType[0], reader));\n                }\n                return arr;\n            }\n            else {\n                return reader.readArray(() => deserializeField(schema, fieldName, fieldType[0], reader));\n            }\n        }\n        if (fieldType.kind === \"option\") {\n            const option = reader.readU8();\n            if (option) {\n                return deserializeField(schema, fieldName, fieldType.type, reader);\n            }\n            return undefined;\n        }\n        if (fieldType.kind === \"map\") {\n            let map = new Map();\n            const length = reader.readU32();\n            for (let i = 0; i < length; i++) {\n                const key = deserializeField(schema, fieldName, fieldType.key, reader);\n                const val = deserializeField(schema, fieldName, fieldType.value, reader);\n                map.set(key, val);\n            }\n            return map;\n        }\n        return deserializeStruct(schema, fieldType, reader);\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction deserializeStruct(schema, classType, reader) {\n    if (typeof classType.borshDeserialize === \"function\") {\n        return classType.borshDeserialize(reader);\n    }\n    const structSchema = schema.get(classType);\n    if (!structSchema) {\n        throw new BorshError(`Class ${classType.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        const result = {};\n        for (const [fieldName, fieldType] of schema.get(classType).fields) {\n            result[fieldName] = deserializeField(schema, fieldName, fieldType, reader);\n        }\n        return new classType(result);\n    }\n    if (structSchema.kind === \"enum\") {\n        const idx = reader.readU8();\n        if (idx >= structSchema.values.length) {\n            throw new BorshError(`Enum index: ${idx} is out of range`);\n        }\n        const [fieldName, fieldType] = structSchema.values[idx];\n        const fieldValue = deserializeField(schema, fieldName, fieldType, reader);\n        return new classType({ [fieldName]: fieldValue });\n    }\n    throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${classType.constructor.name}`);\n}\n/// Deserializes object from bytes using schema.\nfunction deserialize(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    const result = deserializeStruct(schema, classType, reader);\n    if (reader.offset < buffer.length) {\n        throw new BorshError(`Unexpected ${buffer.length - reader.offset} bytes after deserialized data`);\n    }\n    return result;\n}\nexports.deserialize = deserialize;\n/// Deserializes object from bytes using schema, without checking the length read\nfunction deserializeUnchecked(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    return deserializeStruct(schema, classType, reader);\n}\nexports.deserializeUnchecked = deserializeUnchecked;\n","var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","'use strict';\n\nconst uuid = require('uuid').v4;\nconst generateRequest = require('../../generateRequest');\n\n/**\n * Constructor for a Jayson Browser Client that does not depend any node.js core libraries\n * @class ClientBrowser\n * @param {Function} callServer Method that calls the server, receives the stringified request and a regular node-style callback\n * @param {Object} [options]\n * @param {Function} [options.reviver] Reviver function for JSON\n * @param {Function} [options.replacer] Replacer function for JSON\n * @param {Number} [options.version=2] JSON-RPC version to use (1|2)\n * @param {Function} [options.generator] Function to use for generating request IDs\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n * @return {ClientBrowser}\n */\nconst ClientBrowser = function(callServer, options) {\n  if(!(this instanceof ClientBrowser)) {\n    return new ClientBrowser(callServer, options);\n  }\n\n  if (!options) {\n    options = {};\n  }\n\n  this.options = {\n    reviver: typeof options.reviver !== 'undefined' ? options.reviver : null,\n    replacer: typeof options.replacer !== 'undefined' ? options.replacer : null,\n    generator: typeof options.generator !== 'undefined' ? options.generator : function() { return uuid(); },\n    version: typeof options.version !== 'undefined' ? options.version : 2,\n    notificationIdNull: typeof options.notificationIdNull === 'boolean' ? options.notificationIdNull : false,\n  };\n\n  this.callServer = callServer;\n};\n\nmodule.exports = ClientBrowser;\n\n/**\n *  Creates a request and dispatches it if given a callback.\n *  @param {String|Array} method A batch request if passed an Array, or a method name if passed a String\n *  @param {Array|Object} [params] Parameters for the method\n *  @param {String|Number} [id] Optional id. If undefined an id will be generated. If null it creates a notification request\n *  @param {Function} [callback] Request callback. If specified, executes the request rather than only returning it.\n *  @throws {TypeError} Invalid parameters\n *  @return {Object} JSON-RPC 1.0 or 2.0 compatible request\n */\nClientBrowser.prototype.request = function(method, params, id, callback) {\n  const self = this;\n  let request = null;\n\n  // is this a batch request?\n  const isBatch = Array.isArray(method) && typeof params === 'function';\n\n  if (this.options.version === 1 && isBatch) {\n    throw new TypeError('JSON-RPC 1.0 does not support batching');\n  }\n\n  // is this a raw request?\n  const isRaw = !isBatch && method && typeof method === 'object' && typeof params === 'function';\n\n  if(isBatch || isRaw) {\n    callback = params;\n    request = method;\n  } else {\n    if(typeof id === 'function') {\n      callback = id;\n      // specifically undefined because \"null\" is a notification request\n      id = undefined;\n    }\n\n    const hasCallback = typeof callback === 'function';\n\n    try {\n      request = generateRequest(method, params, id, {\n        generator: this.options.generator,\n        version: this.options.version,\n        notificationIdNull: this.options.notificationIdNull,\n      });\n    } catch(err) {\n      if(hasCallback) {\n        return callback(err);\n      }\n      throw err;\n    }\n\n    // no callback means we should just return a raw request\n    if(!hasCallback) {\n      return request;\n    }\n\n  }\n\n  let message;\n  try {\n    message = JSON.stringify(request, this.options.replacer);\n  } catch(err) {\n    return callback(err);\n  }\n\n  this.callServer(message, function(err, response) {\n    self._parseResponse(err, response, callback);\n  });\n\n  // always return the raw request\n  return request;\n};\n\n/**\n * Parses a response from a server\n * @param {Object} err Error to pass on that is unrelated to the actual response\n * @param {String} responseText JSON-RPC 1.0 or 2.0 response\n * @param {Function} callback Callback that will receive different arguments depending on the amount of parameters\n * @private\n */\nClientBrowser.prototype._parseResponse = function(err, responseText, callback) {\n  if(err) {\n    callback(err);\n    return;\n  }\n\n  if(!responseText) {\n    // empty response text, assume that is correct because it could be a\n    // notification which jayson does not give any body for\n    return callback();\n  }\n\n  let response;\n  try {\n    response = JSON.parse(responseText, this.options.reviver);\n  } catch(err) {\n    return callback(err);\n  }\n\n  if(callback.length === 3) {\n    // if callback length is 3, we split callback arguments on error and response\n\n    // is batch response?\n    if(Array.isArray(response)) {\n\n      // neccesary to split strictly on validity according to spec here\n      const isError = function(res) {\n        return typeof res.error !== 'undefined';\n      };\n\n      const isNotError = function (res) {\n        return !isError(res);\n      };\n\n      return callback(null, response.filter(isError), response.filter(isNotError));\n    \n    } else {\n\n      // split regardless of validity\n      return callback(null, response.error, response.result);\n    \n    }\n  \n  }\n\n  callback(null, response);\n};\n","'use strict';\n\nconst uuid = require('uuid').v4;\n\n/**\n *  Generates a JSON-RPC 1.0 or 2.0 request\n *  @param {String} method Name of method to call\n *  @param {Array|Object} params Array of parameters passed to the method as specified, or an object of parameter names and corresponding value\n *  @param {String|Number|null} [id] Request ID can be a string, number, null for explicit notification or left out for automatic generation\n *  @param {Object} [options]\n *  @param {Number} [options.version=2] JSON-RPC version to use (1 or 2)\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n *  @param {Function} [options.generator] Passed the request, and the options object and is expected to return a request ID\n *  @throws {TypeError} If any of the parameters are invalid\n *  @return {Object} A JSON-RPC 1.0 or 2.0 request\n *  @memberOf Utils\n */\nconst generateRequest = function(method, params, id, options) {\n  if(typeof method !== 'string') {\n    throw new TypeError(method + ' must be a string');\n  }\n\n  options = options || {};\n\n  // check valid version provided\n  const version = typeof options.version === 'number' ? options.version : 2;\n  if (version !== 1 && version !== 2) {\n    throw new TypeError(version + ' must be 1 or 2');\n  }\n\n  const request = {\n    method: method\n  };\n\n  if(version === 2) {\n    request.jsonrpc = '2.0';\n  }\n\n  if(params) {\n    // params given, but invalid?\n    if(typeof params !== 'object' && !Array.isArray(params)) {\n      throw new TypeError(params + ' must be an object, array or omitted');\n    }\n    request.params = params;\n  }\n\n  // if id was left out, generate one (null means explicit notification)\n  if(typeof(id) === 'undefined') {\n    const generator = typeof options.generator === 'function' ? options.generator : function() { return uuid(); };\n    request.id = generator(request, options);\n  } else if (version === 2 && id === null) {\n    // we have a version 2 notification\n    if (options.notificationIdNull) {\n      request.id = null; // id will not be set at all unless option provided\n    }\n  } else {\n    request.id = id;\n  }\n\n  return request;\n};\n\nmodule.exports = generateRequest;\n","/**\n * \"Client\" wraps \"ws\" or a browser-implemented \"WebSocket\" library\n * according to the environment providing JSON RPC 2.0 support on top.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _eventemitter = require(\"eventemitter3\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar __rest = void 0 && (void 0).__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}; // @ts-ignore\n\n\nvar CommonClient = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2[\"default\"])(CommonClient, _EventEmitter);\n\n  var _super = _createSuper(CommonClient);\n\n  /**\n   * Instantiate a Client class.\n   * @constructor\n   * @param {webSocketFactory} webSocketFactory - factory method for WebSocket\n   * @param {String} address - url to a websocket server\n   * @param {Object} options - ws options object with reconnect parameters\n   * @param {Function} generate_request_id - custom generation request Id\n   * @return {CommonClient}\n   */\n  function CommonClient(webSocketFactory) {\n    var _this;\n\n    var address = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"ws://localhost:8080\";\n\n    var _a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    var generate_request_id = arguments.length > 3 ? arguments[3] : undefined;\n    (0, _classCallCheck2[\"default\"])(this, CommonClient);\n\n    var _a$autoconnect = _a.autoconnect,\n        autoconnect = _a$autoconnect === void 0 ? true : _a$autoconnect,\n        _a$reconnect = _a.reconnect,\n        reconnect = _a$reconnect === void 0 ? true : _a$reconnect,\n        _a$reconnect_interval = _a.reconnect_interval,\n        reconnect_interval = _a$reconnect_interval === void 0 ? 1000 : _a$reconnect_interval,\n        _a$max_reconnects = _a.max_reconnects,\n        max_reconnects = _a$max_reconnects === void 0 ? 5 : _a$max_reconnects,\n        rest_options = __rest(_a, [\"autoconnect\", \"reconnect\", \"reconnect_interval\", \"max_reconnects\"]);\n\n    _this = _super.call(this);\n    _this.webSocketFactory = webSocketFactory;\n    _this.queue = {};\n    _this.rpc_id = 0;\n    _this.address = address;\n    _this.autoconnect = autoconnect;\n    _this.ready = false;\n    _this.reconnect = reconnect;\n    _this.reconnect_timer_id = undefined;\n    _this.reconnect_interval = reconnect_interval;\n    _this.max_reconnects = max_reconnects;\n    _this.rest_options = rest_options;\n    _this.current_reconnects = 0;\n\n    _this.generate_request_id = generate_request_id || function () {\n      return ++_this.rpc_id;\n    };\n\n    if (_this.autoconnect) _this._connect(_this.address, Object.assign({\n      autoconnect: _this.autoconnect,\n      reconnect: _this.reconnect,\n      reconnect_interval: _this.reconnect_interval,\n      max_reconnects: _this.max_reconnects\n    }, _this.rest_options));\n    return _this;\n  }\n  /**\n   * Connects to a defined server if not connected already.\n   * @method\n   * @return {Undefined}\n   */\n\n\n  (0, _createClass2[\"default\"])(CommonClient, [{\n    key: \"connect\",\n    value: function connect() {\n      if (this.socket) return;\n\n      this._connect(this.address, Object.assign({\n        autoconnect: this.autoconnect,\n        reconnect: this.reconnect,\n        reconnect_interval: this.reconnect_interval,\n        max_reconnects: this.max_reconnects\n      }, this.rest_options));\n    }\n    /**\n     * Calls a registered RPC method on server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object|Array} params - optional method parameters\n     * @param {Number} timeout - RPC reply timeout value\n     * @param {Object} ws_opts - options passed to ws\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"call\",\n    value: function call(method, params, timeout, ws_opts) {\n      var _this2 = this;\n\n      if (!ws_opts && \"object\" === (0, _typeof2[\"default\"])(timeout)) {\n        ws_opts = timeout;\n        timeout = null;\n      }\n\n      return new Promise(function (resolve, reject) {\n        if (!_this2.ready) return reject(new Error(\"socket not ready\"));\n\n        var rpc_id = _this2.generate_request_id(method, params);\n\n        var message = {\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params || null,\n          id: rpc_id\n        };\n\n        _this2.socket.send(JSON.stringify(message), ws_opts, function (error) {\n          if (error) return reject(error);\n          _this2.queue[rpc_id] = {\n            promise: [resolve, reject]\n          };\n\n          if (timeout) {\n            _this2.queue[rpc_id].timeout = setTimeout(function () {\n              delete _this2.queue[rpc_id];\n              reject(new Error(\"reply timeout\"));\n            }, timeout);\n          }\n        });\n      });\n    }\n    /**\n     * Logins with the other side of the connection.\n     * @method\n     * @param {Object} params - Login credentials object\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"login\",\n    value: function () {\n      var _login = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(params) {\n        var resp;\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.call(\"rpc.login\", params);\n\n              case 2:\n                resp = _context.sent;\n\n                if (resp) {\n                  _context.next = 5;\n                  break;\n                }\n\n                throw new Error(\"authentication failed\");\n\n              case 5:\n                return _context.abrupt(\"return\", resp);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function login(_x) {\n        return _login.apply(this, arguments);\n      }\n\n      return login;\n    }()\n    /**\n     * Fetches a list of client's methods registered on server.\n     * @method\n     * @return {Array}\n     */\n\n  }, {\n    key: \"listMethods\",\n    value: function () {\n      var _listMethods = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2() {\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.call(\"__listMethods\");\n\n              case 2:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function listMethods() {\n        return _listMethods.apply(this, arguments);\n      }\n\n      return listMethods;\n    }()\n    /**\n     * Sends a JSON-RPC 2.0 notification to server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object} params - optional method parameters\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"notify\",\n    value: function notify(method, params) {\n      var _this3 = this;\n\n      return new Promise(function (resolve, reject) {\n        if (!_this3.ready) return reject(new Error(\"socket not ready\"));\n        var message = {\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params || null\n        };\n\n        _this3.socket.send(JSON.stringify(message), function (error) {\n          if (error) return reject(error);\n          resolve();\n        });\n      });\n    }\n    /**\n     * Subscribes for a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"subscribe\",\n    value: function () {\n      var _subscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(event) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (typeof event === \"string\") event = [event];\n                _context3.next = 3;\n                return this.call(\"rpc.on\", event);\n\n              case 3:\n                result = _context3.sent;\n\n                if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                throw new Error(\"Failed subscribing to an event '\" + event + \"' with: \" + result[event]);\n\n              case 6:\n                return _context3.abrupt(\"return\", result);\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function subscribe(_x2) {\n        return _subscribe.apply(this, arguments);\n      }\n\n      return subscribe;\n    }()\n    /**\n     * Unsubscribes from a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"unsubscribe\",\n    value: function () {\n      var _unsubscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(event) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (typeof event === \"string\") event = [event];\n                _context4.next = 3;\n                return this.call(\"rpc.off\", event);\n\n              case 3:\n                result = _context4.sent;\n\n                if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                  _context4.next = 6;\n                  break;\n                }\n\n                throw new Error(\"Failed unsubscribing from an event with: \" + result);\n\n              case 6:\n                return _context4.abrupt(\"return\", result);\n\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function unsubscribe(_x3) {\n        return _unsubscribe.apply(this, arguments);\n      }\n\n      return unsubscribe;\n    }()\n    /**\n     * Closes a WebSocket connection gracefully.\n     * @method\n     * @param {Number} code - socket close code\n     * @param {String} data - optional data to be sent before closing\n     * @return {Undefined}\n     */\n\n  }, {\n    key: \"close\",\n    value: function close(code, data) {\n      this.socket.close(code || 1000, data);\n    }\n    /**\n     * Connection/Message handler.\n     * @method\n     * @private\n     * @param {String} address - WebSocket API address\n     * @param {Object} options - ws options object\n     * @return {Undefined}\n     */\n\n  }, {\n    key: \"_connect\",\n    value: function _connect(address, options) {\n      var _this4 = this;\n\n      clearTimeout(this.reconnect_timer_id);\n      this.socket = this.webSocketFactory(address, options);\n      this.socket.addEventListener(\"open\", function () {\n        _this4.ready = true;\n\n        _this4.emit(\"open\");\n\n        _this4.current_reconnects = 0;\n      });\n      this.socket.addEventListener(\"message\", function (_ref) {\n        var message = _ref.data;\n        if (message instanceof ArrayBuffer) message = Buffer.from(message).toString();\n\n        try {\n          message = JSON.parse(message);\n        } catch (error) {\n          return;\n        } // check if any listeners are attached and forward event\n\n\n        if (message.notification && _this4.listeners(message.notification).length) {\n          if (!Object.keys(message.params).length) return _this4.emit(message.notification);\n          var args = [message.notification];\n          if (message.params.constructor === Object) args.push(message.params);else // using for-loop instead of unshift/spread because performance is better\n            for (var i = 0; i < message.params.length; i++) {\n              args.push(message.params[i]);\n            } // run as microtask so that pending queue messages are resolved first\n          // eslint-disable-next-line prefer-spread\n\n          return Promise.resolve().then(function () {\n            _this4.emit.apply(_this4, args);\n          });\n        }\n\n        if (!_this4.queue[message.id]) {\n          // general JSON RPC 2.0 events\n          if (message.method && message.params) {\n            // run as microtask so that pending queue messages are resolved first\n            return Promise.resolve().then(function () {\n              _this4.emit(message.method, message.params);\n            });\n          }\n\n          return;\n        } // reject early since server's response is invalid\n\n\n        if (\"error\" in message === \"result\" in message) _this4.queue[message.id].promise[1](new Error(\"Server response malformed. Response must include either \\\"result\\\"\" + \" or \\\"error\\\", but not both.\"));\n        if (_this4.queue[message.id].timeout) clearTimeout(_this4.queue[message.id].timeout);\n        if (message.error) _this4.queue[message.id].promise[1](message.error);else _this4.queue[message.id].promise[0](message.result);\n        delete _this4.queue[message.id];\n      });\n      this.socket.addEventListener(\"error\", function (error) {\n        return _this4.emit(\"error\", error);\n      });\n      this.socket.addEventListener(\"close\", function (_ref2) {\n        var code = _ref2.code,\n            reason = _ref2.reason;\n        if (_this4.ready) // Delay close event until internal state is updated\n          setTimeout(function () {\n            return _this4.emit(\"close\", code, reason);\n          }, 0);\n        _this4.ready = false;\n        _this4.socket = undefined;\n        if (code === 1000) return;\n        _this4.current_reconnects++;\n        if (_this4.reconnect && (_this4.max_reconnects > _this4.current_reconnects || _this4.max_reconnects === 0)) _this4.reconnect_timer_id = setTimeout(function () {\n          return _this4._connect(address, options);\n        }, _this4.reconnect_interval);\n      });\n    }\n  }]);\n  return CommonClient;\n}(_eventemitter.EventEmitter);\n\nexports[\"default\"] = CommonClient;","/**\n * WebSocket implements a browser-side WebSocket specification.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = _default;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _eventemitter = require(\"eventemitter3\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar WebSocketBrowserImpl = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2[\"default\"])(WebSocketBrowserImpl, _EventEmitter);\n\n  var _super = _createSuper(WebSocketBrowserImpl);\n\n  /** Instantiate a WebSocket class\n   * @constructor\n   * @param {String} address - url to a websocket server\n   * @param {(Object)} options - websocket options\n   * @param {(String|Array)} protocols - a list of protocols\n   * @return {WebSocketBrowserImpl} - returns a WebSocket instance\n   */\n  function WebSocketBrowserImpl(address, options, protocols) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, WebSocketBrowserImpl);\n    _this = _super.call(this);\n    _this.socket = new window.WebSocket(address, protocols);\n\n    _this.socket.onopen = function () {\n      return _this.emit(\"open\");\n    };\n\n    _this.socket.onmessage = function (event) {\n      return _this.emit(\"message\", event.data);\n    };\n\n    _this.socket.onerror = function (error) {\n      return _this.emit(\"error\", error);\n    };\n\n    _this.socket.onclose = function (event) {\n      _this.emit(\"close\", event.code, event.reason);\n    };\n\n    return _this;\n  }\n  /**\n   * Sends data through a websocket connection\n   * @method\n   * @param {(String|Object)} data - data to be sent via websocket\n   * @param {Object} optionsOrCallback - ws options\n   * @param {Function} callback - a callback called once the data is sent\n   * @return {Undefined}\n   */\n\n\n  (0, _createClass2[\"default\"])(WebSocketBrowserImpl, [{\n    key: \"send\",\n    value: function send(data, optionsOrCallback, callback) {\n      var cb = callback || optionsOrCallback;\n\n      try {\n        this.socket.send(data);\n        cb();\n      } catch (error) {\n        cb(error);\n      }\n    }\n    /**\n     * Closes an underlying socket\n     * @method\n     * @param {Number} code - status code explaining why the connection is being closed\n     * @param {String} reason - a description why the connection is closing\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"close\",\n    value: function close(code, reason) {\n      this.socket.close(code, reason);\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(type, listener, options) {\n      this.socket.addEventListener(type, listener, options);\n    }\n  }]);\n  return WebSocketBrowserImpl;\n}(_eventemitter.EventEmitter);\n/**\n * factory method for common WebSocket instance\n * @method\n * @param {String} address - url to a websocket server\n * @param {(Object)} options - websocket options\n * @return {Undefined}\n */\n\n\nfunction _default(address, options) {\n  return new WebSocketBrowserImpl(address, options);\n}","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nmodule.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}\nmodule.exports = _asyncToGenerator, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _getPrototypeOf(o);\n}\nmodule.exports = _getPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\nmodule.exports = _inherits, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\nmodule.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar assertThisInitialized = require(\"./assertThisInitialized.js\");\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}\nmodule.exports = _possibleConstructorReturn, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  var exports = {},\n    Op = Object.prototype,\n    hasOwn = Op.hasOwnProperty,\n    defineProperty = Object.defineProperty || function (obj, key, desc) {\n      obj[key] = desc.value;\n    },\n    $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n    iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n    asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n    toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n      generator = Object.create(protoGenerator.prototype),\n      context = new Context(tryLocsList || []);\n    return defineProperty(generator, \"_invoke\", {\n      value: makeInvokeMethod(innerFn, self, context)\n    }), generator;\n  }\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n    NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n          value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n      reject(record.arg);\n    }\n    var previousPromise;\n    defineProperty(this, \"_invoke\", {\n      value: function value(method, arg) {\n        function callInvokeWithMethodAndArg() {\n          return new PromiseImpl(function (resolve, reject) {\n            invoke(method, arg, resolve, reject);\n          });\n        }\n        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = \"suspendedStart\";\n    return function (method, arg) {\n      if (\"executing\" === state) throw new Error(\"Generator is already running\");\n      if (\"completed\" === state) {\n        if (\"throw\" === method) throw arg;\n        return {\n          value: void 0,\n          done: !0\n        };\n      }\n      for (context.method = method, context.arg = arg;;) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n        if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n          if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n          context.dispatchException(context.arg);\n        } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n        state = \"executing\";\n        var record = tryCatch(innerFn, self, context);\n        if (\"normal\" === record.type) {\n          if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        }\n        \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(delegate, context) {\n    var methodName = context.method,\n      method = delegate.iterator[methodName];\n    if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel;\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(iterable) {\n    if (iterable || \"\" === iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n          next = function next() {\n            for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n            return next.value = undefined, next.done = !0, next;\n          };\n        return next.next = next;\n      }\n    }\n    throw new TypeError(_typeof(iterable) + \" is not iterable\");\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), defineProperty(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (val) {\n    var object = Object(val),\n      keys = [];\n    for (var key in object) keys.push(key);\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n          record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n            hasFinally = hasOwn.call(entry, \"finallyLoc\");\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _setPrototypeOf(o, p);\n}\nmodule.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nmodule.exports = _toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nmodule.exports = _toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","// TODO(Babel 8): Remove this file.\n\nvar runtime = require(\"../helpers/regeneratorRuntime\")();\nmodule.exports = runtime;\n\n// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n",null,null,null,null,null,null,null,null,null,null,null,"function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}",null,"import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","/**\n * A `StructFailure` represents a single specific failure in validation.\n */\n\nexport type Failure = {\n  value: any\n  key: any\n  type: string\n  refinement: string | undefined\n  message: string\n  branch: Array<any>\n  path: Array<any>\n}\n\n/**\n * `StructError` objects are thrown (or returned) when validation fails.\n *\n * Validation logic is design to exit early for maximum performance. The error\n * represents the first error encountered during validation. For more detail,\n * the `error.failures` property is a generator function that can be run to\n * continue validation and receive all the failures in the data.\n */\n\nexport class StructError extends TypeError {\n  value: any\n  key!: any\n  type!: string\n  refinement!: string | undefined\n  path!: Array<any>\n  branch!: Array<any>\n  failures: () => Array<Failure>;\n  [x: string]: any\n\n  constructor(failure: Failure, failures: () => Generator<Failure>) {\n    let cached: Array<Failure> | undefined\n    const { message, ...rest } = failure\n    const { path } = failure\n    const msg =\n      path.length === 0 ? message : `At path: ${path.join('.')} -- ${message}`\n    super(msg)\n    Object.assign(this, rest)\n    this.name = this.constructor.name\n    this.failures = () => {\n      return (cached ??= [failure, ...failures()])\n    }\n  }\n}\n","import { toFailures, shiftIterator, StructSchema, run } from './utils'\nimport { StructError, Failure } from './error'\n\n/**\n * `Struct` objects encapsulate the validation logic for a specific type of\n * values. Once constructed, you use the `assert`, `is` or `validate` helpers to\n * validate unknown input data against the struct.\n */\n\nexport class Struct<T = unknown, S = unknown> {\n  readonly TYPE!: T\n  type: string\n  schema: S\n  coercer: (value: unknown, context: Context) => unknown\n  validator: (value: unknown, context: Context) => Iterable<Failure>\n  refiner: (value: T, context: Context) => Iterable<Failure>\n  entries: (\n    value: unknown,\n    context: Context\n  ) => Iterable<[string | number, unknown, Struct<any> | Struct<never>]>\n\n  constructor(props: {\n    type: string\n    schema: S\n    coercer?: Coercer\n    validator?: Validator\n    refiner?: Refiner<T>\n    entries?: Struct<T, S>['entries']\n  }) {\n    const {\n      type,\n      schema,\n      validator,\n      refiner,\n      coercer = (value: unknown) => value,\n      entries = function* () {},\n    } = props\n\n    this.type = type\n    this.schema = schema\n    this.entries = entries\n    this.coercer = coercer\n\n    if (validator) {\n      this.validator = (value, context) => {\n        const result = validator(value, context)\n        return toFailures(result, context, this, value)\n      }\n    } else {\n      this.validator = () => []\n    }\n\n    if (refiner) {\n      this.refiner = (value, context) => {\n        const result = refiner(value, context)\n        return toFailures(result, context, this, value)\n      }\n    } else {\n      this.refiner = () => []\n    }\n  }\n\n  /**\n   * Assert that a value passes the struct's validation, throwing if it doesn't.\n   */\n\n  assert(value: unknown): asserts value is T {\n    return assert(value, this)\n  }\n\n  /**\n   * Create a value with the struct's coercion logic, then validate it.\n   */\n\n  create(value: unknown): T {\n    return create(value, this)\n  }\n\n  /**\n   * Check if a value passes the struct's validation.\n   */\n\n  is(value: unknown): value is T {\n    return is(value, this)\n  }\n\n  /**\n   * Mask a value, coercing and validating it, but returning only the subset of\n   * properties defined by the struct's schema.\n   */\n\n  mask(value: unknown): T {\n    return mask(value, this)\n  }\n\n  /**\n   * Validate a value with the struct's validation logic, returning a tuple\n   * representing the result.\n   *\n   * You may optionally pass `true` for the `withCoercion` argument to coerce\n   * the value before attempting to validate it. If you do, the result will\n   * contain the coerced result when successful.\n   */\n\n  validate(\n    value: unknown,\n    options: {\n      coerce?: boolean\n    } = {}\n  ): [StructError, undefined] | [undefined, T] {\n    return validate(value, this, options)\n  }\n}\n\n/**\n * Assert that a value passes a struct, throwing if it doesn't.\n */\n\nexport function assert<T, S>(\n  value: unknown,\n  struct: Struct<T, S>\n): asserts value is T {\n  const result = validate(value, struct)\n\n  if (result[0]) {\n    throw result[0]\n  }\n}\n\n/**\n * Create a value with the coercion logic of struct and validate it.\n */\n\nexport function create<T, S>(value: unknown, struct: Struct<T, S>): T {\n  const result = validate(value, struct, { coerce: true })\n\n  if (result[0]) {\n    throw result[0]\n  } else {\n    return result[1]\n  }\n}\n\n/**\n * Mask a value, returning only the subset of properties defined by a struct.\n */\n\nexport function mask<T, S>(value: unknown, struct: Struct<T, S>): T {\n  const result = validate(value, struct, { coerce: true, mask: true })\n\n  if (result[0]) {\n    throw result[0]\n  } else {\n    return result[1]\n  }\n}\n\n/**\n * Check if a value passes a struct.\n */\n\nexport function is<T, S>(value: unknown, struct: Struct<T, S>): value is T {\n  const result = validate(value, struct)\n  return !result[0]\n}\n\n/**\n * Validate a value against a struct, returning an error if invalid, or the\n * value (with potential coercion) if valid.\n */\n\nexport function validate<T, S>(\n  value: unknown,\n  struct: Struct<T, S>,\n  options: {\n    coerce?: boolean\n    mask?: boolean\n  } = {}\n): [StructError, undefined] | [undefined, T] {\n  const tuples = run(value, struct, options)\n  const tuple = shiftIterator(tuples)!\n\n  if (tuple[0]) {\n    const error = new StructError(tuple[0], function* () {\n      for (const t of tuples) {\n        if (t[0]) {\n          yield t[0]\n        }\n      }\n    })\n\n    return [error, undefined]\n  } else {\n    const v = tuple[1]\n    return [undefined, v]\n  }\n}\n\n/**\n * A `Context` contains information about the current location of the\n * validation inside the initial input value.\n */\n\nexport type Context = {\n  branch: Array<any>\n  path: Array<any>\n}\n\n/**\n * A type utility to extract the type from a `Struct` class.\n */\n\nexport type Infer<T extends Struct<any, any>> = T['TYPE']\n\n/**\n * A type utility to describe that a struct represents a TypeScript type.\n */\n\nexport type Describe<T> = Struct<T, StructSchema<T>>\n\n/**\n * A `Result` is returned from validation functions.\n */\n\nexport type Result =\n  | boolean\n  | string\n  | Partial<Failure>\n  | Iterable<boolean | string | Partial<Failure>>\n\n/**\n * A `Coercer` takes an unknown value and optionally coerces it.\n */\n\nexport type Coercer<T = unknown> = (value: T, context: Context) => unknown\n\n/**\n * A `Validator` takes an unknown value and validates it.\n */\n\nexport type Validator = (value: unknown, context: Context) => Result\n\n/**\n * A `Refiner` takes a value of a known type and validates it against a further\n * constraint.\n */\n\nexport type Refiner<T> = (value: T, context: Context) => Result\n","import { Struct, Context, Validator } from '../struct'\nimport { object, optional } from './types'\nimport { ObjectSchema, Assign, ObjectType, PartialObjectSchema } from '../utils'\n\n/**\n * Create a new struct that combines the properties properties from multiple\n * object structs.\n *\n * Like JavaScript's `Object.assign` utility.\n */\n\nexport function assign<A extends ObjectSchema, B extends ObjectSchema>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>\n): Struct<ObjectType<Assign<A, B>>, Assign<A, B>>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>\n): Struct<ObjectType<Assign<Assign<A, B>, C>>, Assign<Assign<A, B>, C>>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema,\n  D extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>,\n  D: Struct<ObjectType<D>, D>\n): Struct<\n  ObjectType<Assign<Assign<Assign<A, B>, C>, D>>,\n  Assign<Assign<Assign<A, B>, C>, D>\n>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema,\n  D extends ObjectSchema,\n  E extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>,\n  D: Struct<ObjectType<D>, D>,\n  E: Struct<ObjectType<E>, E>\n): Struct<\n  ObjectType<Assign<Assign<Assign<Assign<A, B>, C>, D>, E>>,\n  Assign<Assign<Assign<Assign<A, B>, C>, D>, E>\n>\nexport function assign(...Structs: Struct<any>[]): any {\n  const schemas = Structs.map((s) => s.schema)\n  const schema = Object.assign({}, ...schemas)\n  return object(schema)\n}\n\n/**\n * Define a new struct type with a custom validation function.\n */\n\nexport function define<T>(name: string, validator: Validator): Struct<T, null> {\n  return new Struct({ type: name, schema: null, validator })\n}\n\n/**\n * Create a new struct based on an existing struct, but the value is allowed to\n * be `undefined`. `log` will be called if the value is not `undefined`.\n */\n\nexport function deprecated<T>(\n  struct: Struct<T>,\n  log: (value: unknown, ctx: Context) => void\n): Struct<T> {\n  return new Struct({\n    ...struct,\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n    validator(value, ctx) {\n      if (value === undefined) {\n        return true\n      } else {\n        log(value, ctx)\n        return struct.validator(value, ctx)\n      }\n    },\n  })\n}\n\n/**\n * Create a struct with dynamic validation logic.\n *\n * The callback will receive the value currently being validated, and must\n * return a struct object to validate it with. This can be useful to model\n * validation logic that changes based on its input.\n */\n\nexport function dynamic<T>(\n  fn: (value: unknown, ctx: Context) => Struct<T, any>\n): Struct<T, null> {\n  return new Struct({\n    type: 'dynamic',\n    schema: null,\n    *entries(value, ctx) {\n      const struct = fn(value, ctx)\n      yield* struct.entries(value, ctx)\n    },\n    validator(value, ctx) {\n      const struct = fn(value, ctx)\n      return struct.validator(value, ctx)\n    },\n    coercer(value, ctx) {\n      const struct = fn(value, ctx)\n      return struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Create a struct with lazily evaluated validation logic.\n *\n * The first time validation is run with the struct, the callback will be called\n * and must return a struct object to use. This is useful for cases where you\n * want to have self-referential structs for nested data structures to avoid a\n * circular definition problem.\n */\n\nexport function lazy<T>(fn: () => Struct<T, any>): Struct<T, null> {\n  let struct: Struct<T, any> | undefined\n  return new Struct({\n    type: 'lazy',\n    schema: null,\n    *entries(value, ctx) {\n      struct ??= fn()\n      yield* struct.entries(value, ctx)\n    },\n    validator(value, ctx) {\n      struct ??= fn()\n      return struct.validator(value, ctx)\n    },\n    coercer(value, ctx) {\n      struct ??= fn()\n      return struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Create a new struct based on an existing object struct, but excluding\n * specific properties.\n *\n * Like TypeScript's `Omit` utility.\n */\n\nexport function omit<S extends ObjectSchema, K extends keyof S>(\n  struct: Struct<ObjectType<S>, S>,\n  keys: K[]\n): Struct<ObjectType<Omit<S, K>>, Omit<S, K>> {\n  const { schema } = struct\n  const subschema: any = { ...schema }\n\n  for (const key of keys) {\n    delete subschema[key]\n  }\n\n  return object(subschema as Omit<S, K>)\n}\n\n/**\n * Create a new struct based on an existing object struct, but with all of its\n * properties allowed to be `undefined`.\n *\n * Like TypeScript's `Partial` utility.\n */\n\nexport function partial<S extends ObjectSchema>(\n  struct: Struct<ObjectType<S>, S> | S\n): Struct<ObjectType<PartialObjectSchema<S>>, PartialObjectSchema<S>> {\n  const schema: any =\n    struct instanceof Struct ? { ...struct.schema } : { ...struct }\n\n  for (const key in schema) {\n    schema[key] = optional(schema[key])\n  }\n\n  return object(schema) as any\n}\n\n/**\n * Create a new struct based on an existing object struct, but only including\n * specific properties.\n *\n * Like TypeScript's `Pick` utility.\n */\n\nexport function pick<S extends ObjectSchema, K extends keyof S>(\n  struct: Struct<ObjectType<S>, S>,\n  keys: K[]\n): Struct<ObjectType<Pick<S, K>>, Pick<S, K>> {\n  const { schema } = struct\n  const subschema: any = {}\n\n  for (const key of keys) {\n    subschema[key] = schema[key]\n  }\n\n  return object(subschema as Pick<S, K>)\n}\n\n/**\n * Define a new struct type with a custom validation function.\n *\n * @deprecated This function has been renamed to `define`.\n */\n\nexport function struct<T>(name: string, validator: Validator): Struct<T, null> {\n  console.warn(\n    'superstruct@0.11 - The `struct` helper has been renamed to `define`.'\n  )\n\n  return define(name, validator)\n}\n","import { Infer, Struct } from '../struct'\nimport { define } from './utilities'\nimport {\n  TupleSchema,\n  ObjectSchema,\n  ObjectType,\n  print,\n  run,\n  isObject,\n} from '../utils'\n\n/**\n * Ensure that any value passes validation.\n */\n\nexport function any(): Struct<any, null> {\n  return define('any', () => true)\n}\n\n/**\n * Ensure that a value is an array and that its elements are of a specific type.\n *\n * Note: If you omit the element struct, the arrays elements will not be\n * iterated at all. This can be helpful for cases where performance is critical,\n * and it is preferred to using `array(any())`.\n */\n\nexport function array<T extends Struct<any>>(Element: T): Struct<Infer<T>[], T>\nexport function array(): Struct<unknown[], undefined>\nexport function array<T extends Struct<any>>(Element?: T): any {\n  return new Struct({\n    type: 'array',\n    schema: Element,\n    *entries(value) {\n      if (Element && Array.isArray(value)) {\n        for (const [i, v] of value.entries()) {\n          yield [i, v, Element]\n        }\n      }\n    },\n    coercer(value) {\n      return Array.isArray(value) ? value.slice() : value\n    },\n    validator(value) {\n      return (\n        Array.isArray(value) ||\n        `Expected an array value, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a boolean.\n */\n\nexport function boolean(): Struct<boolean, null> {\n  return define('boolean', (value) => {\n    return typeof value === 'boolean'\n  })\n}\n\n/**\n * Ensure that a value is a valid `Date`.\n *\n * Note: this also ensures that the value is *not* an invalid `Date` object,\n * which can occur when parsing a date fails but still returns a `Date`.\n */\n\nexport function date(): Struct<Date, null> {\n  return define('date', (value) => {\n    return (\n      (value instanceof Date && !isNaN(value.getTime())) ||\n      `Expected a valid \\`Date\\` object, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is one of a set of potential values.\n *\n * Note: after creating the struct, you can access the definition of the\n * potential values as `struct.schema`.\n */\n\nexport function enums<T extends number>(\n  values: readonly T[]\n): Struct<T, { [K in T[][number]]: K }>\nexport function enums<T extends string>(\n  values: readonly T[]\n): Struct<T, { [K in T[][number]]: K }>\nexport function enums<T extends number | string>(values: readonly T[]): any {\n  const schema: any = {}\n  const description = values.map((v) => print(v)).join()\n\n  for (const key of values) {\n    schema[key] = key\n  }\n\n  return new Struct({\n    type: 'enums',\n    schema,\n    validator(value) {\n      return (\n        values.includes(value as any) ||\n        `Expected one of \\`${description}\\`, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a function.\n */\n\nexport function func(): Struct<Function, null> {\n  return define('func', (value) => {\n    return (\n      typeof value === 'function' ||\n      `Expected a function, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an instance of a specific class.\n */\n\nexport function instance<T extends { new (...args: any): any }>(\n  Class: T\n): Struct<InstanceType<T>, null> {\n  return define('instance', (value) => {\n    return (\n      value instanceof Class ||\n      `Expected a \\`${Class.name}\\` instance, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an integer.\n */\n\nexport function integer(): Struct<number, null> {\n  return define('integer', (value) => {\n    return (\n      (typeof value === 'number' && !isNaN(value) && Number.isInteger(value)) ||\n      `Expected an integer, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value matches all of a set of types.\n */\n\nexport function intersection<A>(Structs: TupleSchema<[A]>): Struct<A, null>\nexport function intersection<A, B>(\n  Structs: TupleSchema<[A, B]>\n): Struct<A & B, null>\nexport function intersection<A, B, C>(\n  Structs: TupleSchema<[A, B, C]>\n): Struct<A & B & C, null>\nexport function intersection<A, B, C, D>(\n  Structs: TupleSchema<[A, B, C, D]>\n): Struct<A & B & C & D, null>\nexport function intersection<A, B, C, D, E>(\n  Structs: TupleSchema<[A, B, C, D, E]>\n): Struct<A & B & C & D & E, null>\nexport function intersection<A, B, C, D, E, F>(\n  Structs: TupleSchema<[A, B, C, D, E, F]>\n): Struct<A & B & C & D & E & F, null>\nexport function intersection<A, B, C, D, E, F, G>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G]>\n): Struct<A & B & C & D & E & F & G, null>\nexport function intersection<A, B, C, D, E, F, G, H>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H]>\n): Struct<A & B & C & D & E & F & G & H, null>\nexport function intersection<A, B, C, D, E, F, G, H, I>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I]>\n): Struct<A & B & C & D & E & F & G & H & I, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J]>\n): Struct<A & B & C & D & E & F & G & H & I & J, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M & N, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M & N & O, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M & N & O & P, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]>\n): Struct<\n  A & B & C & D & E & F & G & H & I & J & K & L & M & N & O & P & Q,\n  null\n>\nexport function intersection(Structs: Array<Struct<any, any>>): any {\n  return new Struct({\n    type: 'intersection',\n    schema: null,\n    *entries(value, ctx) {\n      for (const S of Structs) {\n        yield* S.entries(value, ctx)\n      }\n    },\n    *validator(value, ctx) {\n      for (const S of Structs) {\n        yield* S.validator(value, ctx)\n      }\n    },\n    *refiner(value, ctx) {\n      for (const S of Structs) {\n        yield* S.refiner(value, ctx)\n      }\n    },\n  })\n}\n\n/**\n * Ensure that a value is an exact value, using `===` for comparison.\n */\n\nexport function literal<T extends boolean>(constant: T): Struct<T, T>\nexport function literal<T extends number>(constant: T): Struct<T, T>\nexport function literal<T extends string>(constant: T): Struct<T, T>\nexport function literal<T>(constant: T): Struct<T, null>\nexport function literal<T>(constant: T): any {\n  const description = print(constant)\n  const t = typeof constant\n  return new Struct({\n    type: 'literal',\n    schema:\n      t === 'string' || t === 'number' || t === 'boolean' ? constant : null,\n    validator(value) {\n      return (\n        value === constant ||\n        `Expected the literal \\`${description}\\`, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a `Map` object, and that its keys and values are of\n * specific types.\n */\n\nexport function map(): Struct<Map<unknown, unknown>, null>\nexport function map<K, V>(\n  Key: Struct<K>,\n  Value: Struct<V>\n): Struct<Map<K, V>, null>\nexport function map<K, V>(Key?: Struct<K>, Value?: Struct<V>): any {\n  return new Struct({\n    type: 'map',\n    schema: null,\n    *entries(value) {\n      if (Key && Value && value instanceof Map) {\n        for (const [k, v] of value.entries()) {\n          yield [k as string, k, Key]\n          yield [k as string, v, Value]\n        }\n      }\n    },\n    coercer(value) {\n      return value instanceof Map ? new Map(value) : value\n    },\n    validator(value) {\n      return (\n        value instanceof Map ||\n        `Expected a \\`Map\\` object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that no value ever passes validation.\n */\n\nexport function never(): Struct<never, null> {\n  return define('never', () => false)\n}\n\n/**\n * Augment an existing struct to allow `null` values.\n */\n\nexport function nullable<T, S>(struct: Struct<T, S>): Struct<T | null, S> {\n  return new Struct({\n    ...struct,\n    validator: (value, ctx) => value === null || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === null || struct.refiner(value, ctx),\n  })\n}\n\n/**\n * Ensure that a value is a number.\n */\n\nexport function number(): Struct<number, null> {\n  return define('number', (value) => {\n    return (\n      (typeof value === 'number' && !isNaN(value)) ||\n      `Expected a number, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an object, that is has a known set of properties,\n * and that its properties are of specific types.\n *\n * Note: Unrecognized properties will fail validation.\n */\n\nexport function object(): Struct<Record<string, unknown>, null>\nexport function object<S extends ObjectSchema>(\n  schema: S\n): Struct<ObjectType<S>, S>\nexport function object<S extends ObjectSchema>(schema?: S): any {\n  const knowns = schema ? Object.keys(schema) : []\n  const Never = never()\n  return new Struct({\n    type: 'object',\n    schema: schema ? schema : null,\n    *entries(value) {\n      if (schema && isObject(value)) {\n        const unknowns = new Set(Object.keys(value))\n\n        for (const key of knowns) {\n          unknowns.delete(key)\n          yield [key, value[key], schema[key]]\n        }\n\n        for (const key of unknowns) {\n          yield [key, value[key], Never]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n    coercer(value) {\n      return isObject(value) ? { ...value } : value\n    },\n  })\n}\n\n/**\n * Augment a struct to allow `undefined` values.\n */\n\nexport function optional<T, S>(struct: Struct<T, S>): Struct<T | undefined, S> {\n  return new Struct({\n    ...struct,\n    validator: (value, ctx) =>\n      value === undefined || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n  })\n}\n\n/**\n * Ensure that a value is an object with keys and values of specific types, but\n * without ensuring any specific shape of properties.\n *\n * Like TypeScript's `Record` utility.\n */\n\nexport function record<K extends string, V>(\n  Key: Struct<K>,\n  Value: Struct<V>\n): Struct<Record<K, V>, null> {\n  return new Struct({\n    type: 'record',\n    schema: null,\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k in value) {\n          const v = value[k]\n          yield [k, k, Key]\n          yield [k, v, Value]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a `RegExp`.\n *\n * Note: this does not test the value against the regular expression! For that\n * you need to use the `pattern()` refinement.\n */\n\nexport function regexp(): Struct<RegExp, null> {\n  return define('regexp', (value) => {\n    return value instanceof RegExp\n  })\n}\n\n/**\n * Ensure that a value is a `Set` object, and that its elements are of a\n * specific type.\n */\n\nexport function set(): Struct<Set<unknown>, null>\nexport function set<T>(Element: Struct<T>): Struct<Set<T>, null>\nexport function set<T>(Element?: Struct<T>): any {\n  return new Struct({\n    type: 'set',\n    schema: null,\n    *entries(value) {\n      if (Element && value instanceof Set) {\n        for (const v of value) {\n          yield [v as string, v, Element]\n        }\n      }\n    },\n    coercer(value) {\n      return value instanceof Set ? new Set(value) : value\n    },\n    validator(value) {\n      return (\n        value instanceof Set ||\n        `Expected a \\`Set\\` object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a string.\n */\n\nexport function string(): Struct<string, null> {\n  return define('string', (value) => {\n    return (\n      typeof value === 'string' ||\n      `Expected a string, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is a tuple of a specific length, and that each of its\n * elements is of a specific type.\n */\n\nexport function tuple<A>(Structs: TupleSchema<[A]>): Struct<[A], null>\nexport function tuple<A, B>(Structs: TupleSchema<[A, B]>): Struct<[A, B], null>\nexport function tuple<A, B, C>(\n  Structs: TupleSchema<[A, B, C]>\n): Struct<[A, B, C], null>\nexport function tuple<A, B, C, D>(\n  Structs: TupleSchema<[A, B, C, D]>\n): Struct<[A, B, C, D], null>\nexport function tuple<A, B, C, D, E>(\n  Structs: TupleSchema<[A, B, C, D, E]>\n): Struct<[A, B, C, D, E], null>\nexport function tuple<A, B, C, D, E, F>(\n  Structs: TupleSchema<[A, B, C, D, E, F]>\n): Struct<[A, B, C, D, E, F], null>\nexport function tuple<A, B, C, D, E, F, G>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G]>\n): Struct<[A, B, C, D, E, F, G], null>\nexport function tuple<A, B, C, D, E, F, G, H>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H]>\n): Struct<[A, B, C, D, E, F, G, H], null>\nexport function tuple<A, B, C, D, E, F, G, H, I>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I]>\n): Struct<[A, B, C, D, E, F, G, H, I], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J]>\n): Struct<[A, B, C, D, E, F, G, H, I, J], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q], null>\nexport function tuple(Elements: Struct<any>[]): any {\n  const Never = never()\n\n  return new Struct({\n    type: 'tuple',\n    schema: null,\n    *entries(value) {\n      if (Array.isArray(value)) {\n        const length = Math.max(Elements.length, value.length)\n\n        for (let i = 0; i < length; i++) {\n          yield [i, value[i], Elements[i] || Never]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        Array.isArray(value) ||\n        `Expected an array, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value has a set of known properties of specific types.\n *\n * Note: Unrecognized properties are allowed and untouched. This is similar to\n * how TypeScript's structural typing works.\n */\n\nexport function type<S extends ObjectSchema>(\n  schema: S\n): Struct<ObjectType<S>, S> {\n  const keys = Object.keys(schema)\n  return new Struct({\n    type: 'type',\n    schema,\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k of keys) {\n          yield [k, value[k], schema[k]]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value matches one of a set of types.\n */\n\nexport function union<A>(Structs: TupleSchema<[A]>): Struct<A, null>\nexport function union<A, B>(Structs: TupleSchema<[A, B]>): Struct<A | B, null>\nexport function union<A, B, C>(\n  Structs: TupleSchema<[A, B, C]>\n): Struct<A | B | C, null>\nexport function union<A, B, C, D>(\n  Structs: TupleSchema<[A, B, C, D]>\n): Struct<A | B | C | D, null>\nexport function union<A, B, C, D, E>(\n  Structs: TupleSchema<[A, B, C, D, E]>\n): Struct<A | B | C | D | E, null>\nexport function union<A, B, C, D, E, F>(\n  Structs: TupleSchema<[A, B, C, D, E, F]>\n): Struct<A | B | C | D | E | F, null>\nexport function union<A, B, C, D, E, F, G>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G]>\n): Struct<A | B | C | D | E | F | G, null>\nexport function union<A, B, C, D, E, F, G, H>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H]>\n): Struct<A | B | C | D | E | F | G | H, null>\nexport function union<A, B, C, D, E, F, G, H, I>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I]>\n): Struct<A | B | C | D | E | F | G | H | I, null>\nexport function union<A, B, C, D, E, F, G, H, I, J>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J]>\n): Struct<A | B | C | D | E | F | G | H | I | J, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M | N, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M | N | O, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]>\n): Struct<\n  A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P | Q,\n  null\n>\nexport function union(Structs: Struct<any>[]): any {\n  const description = Structs.map((s) => s.type).join(' | ')\n  return new Struct({\n    type: 'union',\n    schema: null,\n    validator(value, ctx) {\n      const failures = []\n\n      for (const S of Structs) {\n        const [...tuples] = run(value, S, ctx)\n        const [first] = tuples\n\n        if (!first[0]) {\n          return []\n        } else {\n          for (const [failure] of tuples) {\n            if (failure) {\n              failures.push(failure)\n            }\n          }\n        }\n      }\n\n      return [\n        `Expected the value to satisfy a union of \\`${description}\\`, but received: ${print(\n          value\n        )}`,\n        ...failures,\n      ]\n    },\n  })\n}\n\n/**\n * Ensure that any value passes validation, without widening its type to `any`.\n */\n\nexport function unknown(): Struct<unknown, null> {\n  return define('unknown', () => true)\n}\n","import { Struct, is, Coercer } from '../struct'\nimport { isPlainObject } from '../utils'\nimport { string, unknown } from './types'\n\n/**\n * Augment a `Struct` to add an additional coercion step to its input.\n *\n * This allows you to transform input data before validating it, to increase the\n * likelihood that it passes validation—for example for default values, parsing\n * different formats, etc.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function coerce<T, S, C>(\n  struct: Struct<T, S>,\n  condition: Struct<C, any>,\n  coercer: Coercer<C>\n): Struct<T, S> {\n  return new Struct({\n    ...struct,\n    coercer: (value, ctx) => {\n      return is(value, condition)\n        ? struct.coercer(coercer(value, ctx), ctx)\n        : struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Augment a struct to replace `undefined` values with a default.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function defaulted<T, S>(\n  struct: Struct<T, S>,\n  fallback: any,\n  options: {\n    strict?: boolean\n  } = {}\n): Struct<T, S> {\n  return coerce(struct, unknown(), (x) => {\n    const f = typeof fallback === 'function' ? fallback() : fallback\n\n    if (x === undefined) {\n      return f\n    }\n\n    if (!options.strict && isPlainObject(x) && isPlainObject(f)) {\n      const ret = { ...x }\n      let changed = false\n\n      for (const key in f) {\n        if (ret[key] === undefined) {\n          ret[key] = f[key]\n          changed = true\n        }\n      }\n\n      if (changed) {\n        return ret\n      }\n    }\n\n    return x\n  })\n}\n\n/**\n * Augment a struct to trim string inputs.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function trimmed<T, S>(struct: Struct<T, S>): Struct<T, S> {\n  return coerce(struct, string(), (x) => x.trim())\n}\n","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct.bind();\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n      _cache.set(Class, Wrapper);\n    }\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n  return _wrapNativeSuper(Class);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}",null,null,null,null,null,"import {ed25519} from '@noble/curves/ed25519';\n\n/**\n * A 64 byte secret key, the first 32 bytes of which is the\n * private scalar and the last 32 bytes is the public key.\n * Read more: https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n */\ntype Ed25519SecretKey = Uint8Array;\n\n/**\n * Ed25519 Keypair\n */\nexport interface Ed25519Keypair {\n  publicKey: Uint8Array;\n  secretKey: Ed25519SecretKey;\n}\n\nexport const generatePrivateKey = ed25519.utils.randomPrivateKey;\nexport const generateKeypair = (): Ed25519Keypair => {\n  const privateScalar = ed25519.utils.randomPrivateKey();\n  const publicKey = getPublicKey(privateScalar);\n  const secretKey = new Uint8Array(64);\n  secretKey.set(privateScalar);\n  secretKey.set(publicKey, 32);\n  return {\n    publicKey,\n    secretKey,\n  };\n};\nexport const getPublicKey = ed25519.getPublicKey;\nexport function isOnCurve(publicKey: Uint8Array): boolean {\n  try {\n    ed25519.ExtendedPoint.fromHex(publicKey);\n    return true;\n  } catch {\n    return false;\n  }\n}\nexport const sign = (\n  message: Parameters<typeof ed25519.sign>[0],\n  secretKey: Ed25519SecretKey,\n) => ed25519.sign(message, secretKey.slice(0, 32));\nexport const verify = ed25519.verify;\n","import {Buffer} from 'buffer';\n\nexport const toBuffer = (arr: Buffer | Uint8Array | Array<number>): Buffer => {\n  if (Buffer.isBuffer(arr)) {\n    return arr;\n  } else if (arr instanceof Uint8Array) {\n    return Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength);\n  } else {\n    return Buffer.from(arr);\n  }\n};\n","import {Buffer} from 'buffer';\nimport {serialize, deserialize, deserializeUnchecked} from 'borsh';\n\n// Class wrapping a plain object\nexport class Struct {\n  constructor(properties: any) {\n    Object.assign(this, properties);\n  }\n\n  encode(): Buffer {\n    return Buffer.from(serialize(SOLANA_SCHEMA, this));\n  }\n\n  static decode(data: Buffer): any {\n    return deserialize(SOLANA_SCHEMA, this, data);\n  }\n\n  static decodeUnchecked(data: Buffer): any {\n    return deserializeUnchecked(SOLANA_SCHEMA, this, data);\n  }\n}\n\n// Class representing a Rust-compatible enum, since enums are only strings or\n// numbers in pure JS\nexport class Enum extends Struct {\n  enum: string = '';\n  constructor(properties: any) {\n    super(properties);\n    if (Object.keys(properties).length !== 1) {\n      throw new Error('Enum can only take single value');\n    }\n    Object.keys(properties).map(key => {\n      this.enum = key;\n    });\n  }\n}\n\nexport const SOLANA_SCHEMA: Map<Function, any> = new Map();\n","import BN from 'bn.js';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport {sha256} from '@noble/hashes/sha256';\n\nimport {isOnCurve} from './utils/ed25519';\nimport {Struct, SOLANA_SCHEMA} from './utils/borsh-schema';\nimport {toBuffer} from './utils/to-buffer';\n\n/**\n * Maximum length of derived pubkey seed\n */\nexport const MAX_SEED_LENGTH = 32;\n\n/**\n * Size of public key in bytes\n */\nexport const PUBLIC_KEY_LENGTH = 32;\n\n/**\n * Value to be converted into public key\n */\nexport type PublicKeyInitData =\n  | number\n  | string\n  | Uint8Array\n  | Array<number>\n  | PublicKeyData;\n\n/**\n * JSON object representation of PublicKey class\n */\nexport type PublicKeyData = {\n  /** @internal */\n  _bn: BN;\n};\n\nfunction isPublicKeyData(value: PublicKeyInitData): value is PublicKeyData {\n  return (value as PublicKeyData)._bn !== undefined;\n}\n\n// local counter used by PublicKey.unique()\nlet uniquePublicKeyCounter = 1;\n\n/**\n * A public key\n */\nexport class PublicKey extends Struct {\n  /** @internal */\n  _bn: BN;\n\n  /**\n   * Create a new PublicKey object\n   * @param value ed25519 public key as buffer or base-58 encoded string\n   */\n  constructor(value: PublicKeyInitData) {\n    super({});\n    if (isPublicKeyData(value)) {\n      this._bn = value._bn;\n    } else {\n      if (typeof value === 'string') {\n        // assume base 58 encoding by default\n        const decoded = bs58.decode(value);\n        if (decoded.length != PUBLIC_KEY_LENGTH) {\n          throw new Error(`Invalid public key input`);\n        }\n        this._bn = new BN(decoded);\n      } else {\n        this._bn = new BN(value);\n      }\n\n      if (this._bn.byteLength() > PUBLIC_KEY_LENGTH) {\n        throw new Error(`Invalid public key input`);\n      }\n    }\n  }\n\n  /**\n   * Returns a unique PublicKey for tests and benchmarks using a counter\n   */\n  static unique(): PublicKey {\n    const key = new PublicKey(uniquePublicKeyCounter);\n    uniquePublicKeyCounter += 1;\n    return new PublicKey(key.toBuffer());\n  }\n\n  /**\n   * Default public key value. The base58-encoded string representation is all ones (as seen below)\n   * The underlying BN number is 32 bytes that are all zeros\n   */\n  static default: PublicKey = new PublicKey('11111111111111111111111111111111');\n\n  /**\n   * Checks if two publicKeys are equal\n   */\n  equals(publicKey: PublicKey): boolean {\n    return this._bn.eq(publicKey._bn);\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toBase58(): string {\n    return bs58.encode(this.toBytes());\n  }\n\n  toJSON(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Return the byte array representation of the public key in big endian\n   */\n  toBytes(): Uint8Array {\n    const buf = this.toBuffer();\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n  }\n\n  /**\n   * Return the Buffer representation of the public key in big endian\n   */\n  toBuffer(): Buffer {\n    const b = this._bn.toArrayLike(Buffer);\n    if (b.length === PUBLIC_KEY_LENGTH) {\n      return b;\n    }\n\n    const zeroPad = Buffer.alloc(32);\n    b.copy(zeroPad, 32 - b.length);\n    return zeroPad;\n  }\n\n  get [Symbol.toStringTag](): string {\n    return `PublicKey(${this.toString()})`;\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toString(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Derive a public key from another key, a seed, and a program ID.\n   * The program ID will also serve as the owner of the public key, giving\n   * it permission to write data to the account.\n   */\n  /* eslint-disable require-await */\n  static async createWithSeed(\n    fromPublicKey: PublicKey,\n    seed: string,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    const buffer = Buffer.concat([\n      fromPublicKey.toBuffer(),\n      Buffer.from(seed),\n      programId.toBuffer(),\n    ]);\n    const publicKeyBytes = sha256(buffer);\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Derive a program address from seeds and a program ID.\n   */\n  /* eslint-disable require-await */\n  static createProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): PublicKey {\n    let buffer = Buffer.alloc(0);\n    seeds.forEach(function (seed) {\n      if (seed.length > MAX_SEED_LENGTH) {\n        throw new TypeError(`Max seed length exceeded`);\n      }\n      buffer = Buffer.concat([buffer, toBuffer(seed)]);\n    });\n    buffer = Buffer.concat([\n      buffer,\n      programId.toBuffer(),\n      Buffer.from('ProgramDerivedAddress'),\n    ]);\n    const publicKeyBytes = sha256(buffer);\n    if (isOnCurve(publicKeyBytes)) {\n      throw new Error(`Invalid seeds, address must fall off the curve`);\n    }\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Async version of createProgramAddressSync\n   * For backwards compatibility\n   *\n   * @deprecated Use {@link createProgramAddressSync} instead\n   */\n  /* eslint-disable require-await */\n  static async createProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    return this.createProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Find a valid program address\n   *\n   * Valid program addresses must fall off the ed25519 curve.  This function\n   * iterates a nonce until it finds one that when combined with the seeds\n   * results in a valid program address.\n   */\n  static findProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): [PublicKey, number] {\n    let nonce = 255;\n    let address;\n    while (nonce != 0) {\n      try {\n        const seedsWithNonce = seeds.concat(Buffer.from([nonce]));\n        address = this.createProgramAddressSync(seedsWithNonce, programId);\n      } catch (err) {\n        if (err instanceof TypeError) {\n          throw err;\n        }\n        nonce--;\n        continue;\n      }\n      return [address, nonce];\n    }\n    throw new Error(`Unable to find a viable program address nonce`);\n  }\n\n  /**\n   * Async version of findProgramAddressSync\n   * For backwards compatibility\n   *\n   * @deprecated Use {@link findProgramAddressSync} instead\n   */\n  static async findProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<[PublicKey, number]> {\n    return this.findProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Check that a pubkey is on the ed25519 curve.\n   */\n  static isOnCurve(pubkeyData: PublicKeyInitData): boolean {\n    const pubkey = new PublicKey(pubkeyData);\n    return isOnCurve(pubkey.toBytes());\n  }\n}\n\nSOLANA_SCHEMA.set(PublicKey, {\n  kind: 'struct',\n  fields: [['_bn', 'u256']],\n});\n","import {PublicKey} from './publickey';\n\nexport const BPF_LOADER_DEPRECATED_PROGRAM_ID = new PublicKey(\n  'BPFLoader1111111111111111111111111111111111',\n);\n","import {Buffer} from 'buffer';\n\nimport {generatePrivateKey, getPublicKey} from './utils/ed25519';\nimport {toBuffer} from './utils/to-buffer';\nimport {PublicKey} from './publickey';\n\n/**\n * An account key pair (public and secret keys).\n *\n * @deprecated since v1.10.0, please use {@link Keypair} instead.\n */\nexport class Account {\n  /** @internal */\n  private _publicKey: Buffer;\n  /** @internal */\n  private _secretKey: Buffer;\n\n  /**\n   * Create a new Account object\n   *\n   * If the secretKey parameter is not provided a new key pair is randomly\n   * created for the account\n   *\n   * @param secretKey Secret key for the account\n   */\n  constructor(secretKey?: Uint8Array | Array<number>) {\n    if (secretKey) {\n      const secretKeyBuffer = toBuffer(secretKey);\n      if (secretKey.length !== 64) {\n        throw new Error('bad secret key size');\n      }\n      this._publicKey = secretKeyBuffer.slice(32, 64);\n      this._secretKey = secretKeyBuffer.slice(0, 32);\n    } else {\n      this._secretKey = toBuffer(generatePrivateKey());\n      this._publicKey = toBuffer(getPublicKey(this._secretKey));\n    }\n  }\n\n  /**\n   * The public key for this account\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._publicKey);\n  }\n\n  /**\n   * The **unencrypted** secret key for this account. The first 32 bytes\n   * is the private scalar and the last 32 bytes is the public key.\n   * Read more: https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n   */\n  get secretKey(): Buffer {\n    return Buffer.concat([this._secretKey, this._publicKey], 64);\n  }\n}\n","/**\n * Maximum over-the-wire size of a Transaction\n *\n * 1280 is IPv6 minimum MTU\n * 40 bytes is the size of the IPv6 header\n * 8 bytes is the size of the fragment header\n */\nexport const PACKET_DATA_SIZE = 1280 - 40 - 8;\n\nexport const VERSION_PREFIX_MASK = 0x7f;\n\nexport const SIGNATURE_LENGTH_IN_BYTES = 64;\n","export class TransactionExpiredBlockheightExceededError extends Error {\n  signature: string;\n\n  constructor(signature: string) {\n    super(`Signature ${signature} has expired: block height exceeded.`);\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(\n  TransactionExpiredBlockheightExceededError.prototype,\n  'name',\n  {\n    value: 'TransactionExpiredBlockheightExceededError',\n  },\n);\n\nexport class TransactionExpiredTimeoutError extends Error {\n  signature: string;\n\n  constructor(signature: string, timeoutSeconds: number) {\n    super(\n      `Transaction was not confirmed in ${timeoutSeconds.toFixed(\n        2,\n      )} seconds. It is ` +\n        'unknown if it succeeded or failed. Check signature ' +\n        `${signature} using the Solana Explorer or CLI tools.`,\n    );\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(TransactionExpiredTimeoutError.prototype, 'name', {\n  value: 'TransactionExpiredTimeoutError',\n});\n\nexport class TransactionExpiredNonceInvalidError extends Error {\n  signature: string;\n\n  constructor(signature: string) {\n    super(`Signature ${signature} has expired: the nonce is no longer valid.`);\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(TransactionExpiredNonceInvalidError.prototype, 'name', {\n  value: 'TransactionExpiredNonceInvalidError',\n});\n","import {LoadedAddresses} from '../connection';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport {MessageCompiledInstruction} from './index';\n\nexport type AccountKeysFromLookups = LoadedAddresses;\n\nexport class MessageAccountKeys {\n  staticAccountKeys: Array<PublicKey>;\n  accountKeysFromLookups?: AccountKeysFromLookups;\n\n  constructor(\n    staticAccountKeys: Array<PublicKey>,\n    accountKeysFromLookups?: AccountKeysFromLookups,\n  ) {\n    this.staticAccountKeys = staticAccountKeys;\n    this.accountKeysFromLookups = accountKeysFromLookups;\n  }\n\n  keySegments(): Array<Array<PublicKey>> {\n    const keySegments = [this.staticAccountKeys];\n    if (this.accountKeysFromLookups) {\n      keySegments.push(this.accountKeysFromLookups.writable);\n      keySegments.push(this.accountKeysFromLookups.readonly);\n    }\n    return keySegments;\n  }\n\n  get(index: number): PublicKey | undefined {\n    for (const keySegment of this.keySegments()) {\n      if (index < keySegment.length) {\n        return keySegment[index];\n      } else {\n        index -= keySegment.length;\n      }\n    }\n    return;\n  }\n\n  get length(): number {\n    return this.keySegments().flat().length;\n  }\n\n  compileInstructions(\n    instructions: Array<TransactionInstruction>,\n  ): Array<MessageCompiledInstruction> {\n    // Bail early if any account indexes would overflow a u8\n    const U8_MAX = 255;\n    if (this.length > U8_MAX + 1) {\n      throw new Error('Account index overflow encountered during compilation');\n    }\n\n    const keyIndexMap = new Map();\n    this.keySegments()\n      .flat()\n      .forEach((key, index) => {\n        keyIndexMap.set(key.toBase58(), index);\n      });\n\n    const findKeyIndex = (key: PublicKey) => {\n      const keyIndex = keyIndexMap.get(key.toBase58());\n      if (keyIndex === undefined)\n        throw new Error(\n          'Encountered an unknown instruction account key during compilation',\n        );\n      return keyIndex;\n    };\n\n    return instructions.map((instruction): MessageCompiledInstruction => {\n      return {\n        programIdIndex: findKeyIndex(instruction.programId),\n        accountKeyIndexes: instruction.keys.map(meta =>\n          findKeyIndex(meta.pubkey),\n        ),\n        data: instruction.data,\n      };\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {VoteAuthorizeWithSeedArgs} from './programs/vote';\n\n/**\n * Layout for a public key\n */\nexport const publicKey = (property: string = 'publicKey') => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a signature\n */\nexport const signature = (property: string = 'signature') => {\n  return BufferLayout.blob(64, property);\n};\n\n/**\n * Layout for a 64bit unsigned value\n */\nexport const uint64 = (property: string = 'uint64') => {\n  return BufferLayout.blob(8, property);\n};\n\ninterface IRustStringShim\n  extends Omit<\n    BufferLayout.Structure<\n      Readonly<{\n        length: number;\n        lengthPadding: number;\n        chars: Uint8Array;\n      }>\n    >,\n    'decode' | 'encode' | 'replicate'\n  > {\n  alloc: (str: string) => number;\n  decode: (b: Uint8Array, offset?: number) => string;\n  encode: (str: string, b: Uint8Array, offset?: number) => number;\n  replicate: (property: string) => this;\n}\n\n/**\n * Layout for a Rust String type\n */\nexport const rustString = (\n  property: string = 'string',\n): BufferLayout.Layout<string> => {\n  const rsl = BufferLayout.struct<\n    Readonly<{\n      length?: number;\n      lengthPadding?: number;\n      chars: Uint8Array;\n    }>\n  >(\n    [\n      BufferLayout.u32('length'),\n      BufferLayout.u32('lengthPadding'),\n      BufferLayout.blob(BufferLayout.offset(BufferLayout.u32(), -8), 'chars'),\n    ],\n    property,\n  );\n  const _decode = rsl.decode.bind(rsl);\n  const _encode = rsl.encode.bind(rsl);\n\n  const rslShim = rsl as unknown as IRustStringShim;\n\n  rslShim.decode = (b: Uint8Array, offset?: number) => {\n    const data = _decode(b, offset);\n    return data['chars'].toString();\n  };\n\n  rslShim.encode = (str: string, b: Uint8Array, offset?: number) => {\n    const data = {\n      chars: Buffer.from(str, 'utf8'),\n    };\n    return _encode(data, b, offset);\n  };\n\n  rslShim.alloc = (str: string) => {\n    return (\n      BufferLayout.u32().span +\n      BufferLayout.u32().span +\n      Buffer.from(str, 'utf8').length\n    );\n  };\n\n  return rslShim;\n};\n\n/**\n * Layout for an Authorized object\n */\nexport const authorized = (property: string = 'authorized') => {\n  return BufferLayout.struct<\n    Readonly<{\n      staker: Uint8Array;\n      withdrawer: Uint8Array;\n    }>\n  >([publicKey('staker'), publicKey('withdrawer')], property);\n};\n\n/**\n * Layout for a Lockup object\n */\nexport const lockup = (property: string = 'lockup') => {\n  return BufferLayout.struct<\n    Readonly<{\n      custodian: Uint8Array;\n      epoch: number;\n      unixTimestamp: number;\n    }>\n  >(\n    [\n      BufferLayout.ns64('unixTimestamp'),\n      BufferLayout.ns64('epoch'),\n      publicKey('custodian'),\n    ],\n    property,\n  );\n};\n\n/**\n *  Layout for a VoteInit object\n */\nexport const voteInit = (property: string = 'voteInit') => {\n  return BufferLayout.struct<\n    Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>\n  >(\n    [\n      publicKey('nodePubkey'),\n      publicKey('authorizedVoter'),\n      publicKey('authorizedWithdrawer'),\n      BufferLayout.u8('commission'),\n    ],\n    property,\n  );\n};\n\n/**\n *  Layout for a VoteAuthorizeWithSeedArgs object\n */\nexport const voteAuthorizeWithSeedArgs = (\n  property: string = 'voteAuthorizeWithSeedArgs',\n) => {\n  return BufferLayout.struct<VoteAuthorizeWithSeedArgs>(\n    [\n      BufferLayout.u32('voteAuthorizationType'),\n      publicKey('currentAuthorityDerivedKeyOwnerPubkey'),\n      rustString('currentAuthorityDerivedKeySeed'),\n      publicKey('newAuthorized'),\n    ],\n    property,\n  );\n};\n\nexport function getAlloc(type: any, fields: any): number {\n  const getItemAlloc = (item: any): number => {\n    if (item.span >= 0) {\n      return item.span;\n    } else if (typeof item.alloc === 'function') {\n      return item.alloc(fields[item.property]);\n    } else if ('count' in item && 'elementLayout' in item) {\n      const field = fields[item.property];\n      if (Array.isArray(field)) {\n        return field.length * getItemAlloc(item.elementLayout);\n      }\n    } else if ('fields' in item) {\n      // This is a `Structure` whose size needs to be recursively measured.\n      return getAlloc({layout: item}, fields[item.property]);\n    }\n    // Couldn't determine allocated size of layout\n    return 0;\n  };\n\n  let alloc = 0;\n  type.layout.fields.forEach((item: any) => {\n    alloc += getItemAlloc(item);\n  });\n\n  return alloc;\n}\n","export function decodeLength(bytes: Array<number>): number {\n  let len = 0;\n  let size = 0;\n  for (;;) {\n    let elem = bytes.shift() as number;\n    len |= (elem & 0x7f) << (size * 7);\n    size += 1;\n    if ((elem & 0x80) === 0) {\n      break;\n    }\n  }\n  return len;\n}\n\nexport function encodeLength(bytes: Array<number>, len: number) {\n  let rem_len = len;\n  for (;;) {\n    let elem = rem_len & 0x7f;\n    rem_len >>= 7;\n    if (rem_len == 0) {\n      bytes.push(elem);\n      break;\n    } else {\n      elem |= 0x80;\n      bytes.push(elem);\n    }\n  }\n}\n","export default function (\n  condition: unknown,\n  message?: string,\n): asserts condition {\n  if (!condition) {\n    throw new Error(message || 'Assertion failed');\n  }\n}\n","import {MessageHeader, MessageAddressTableLookup} from './index';\nimport {AccountKeysFromLookups} from './account-keys';\nimport {AddressLookupTableAccount} from '../programs';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {PublicKey} from '../publickey';\n\nexport type CompiledKeyMeta = {\n  isSigner: boolean;\n  isWritable: boolean;\n  isInvoked: boolean;\n};\n\ntype KeyMetaMap = Map<string, CompiledKeyMeta>;\n\nexport class CompiledKeys {\n  payer: PublicKey;\n  keyMetaMap: KeyMetaMap;\n\n  constructor(payer: PublicKey, keyMetaMap: KeyMetaMap) {\n    this.payer = payer;\n    this.keyMetaMap = keyMetaMap;\n  }\n\n  static compile(\n    instructions: Array<TransactionInstruction>,\n    payer: PublicKey,\n  ): CompiledKeys {\n    const keyMetaMap: KeyMetaMap = new Map();\n    const getOrInsertDefault = (pubkey: PublicKey): CompiledKeyMeta => {\n      const address = pubkey.toBase58();\n      let keyMeta = keyMetaMap.get(address);\n      if (keyMeta === undefined) {\n        keyMeta = {\n          isSigner: false,\n          isWritable: false,\n          isInvoked: false,\n        };\n        keyMetaMap.set(address, keyMeta);\n      }\n      return keyMeta;\n    };\n\n    const payerKeyMeta = getOrInsertDefault(payer);\n    payerKeyMeta.isSigner = true;\n    payerKeyMeta.isWritable = true;\n\n    for (const ix of instructions) {\n      getOrInsertDefault(ix.programId).isInvoked = true;\n      for (const accountMeta of ix.keys) {\n        const keyMeta = getOrInsertDefault(accountMeta.pubkey);\n        keyMeta.isSigner ||= accountMeta.isSigner;\n        keyMeta.isWritable ||= accountMeta.isWritable;\n      }\n    }\n\n    return new CompiledKeys(payer, keyMetaMap);\n  }\n\n  getMessageComponents(): [MessageHeader, Array<PublicKey>] {\n    const mapEntries = [...this.keyMetaMap.entries()];\n    assert(mapEntries.length <= 256, 'Max static account keys length exceeded');\n\n    const writableSigners = mapEntries.filter(\n      ([, meta]) => meta.isSigner && meta.isWritable,\n    );\n    const readonlySigners = mapEntries.filter(\n      ([, meta]) => meta.isSigner && !meta.isWritable,\n    );\n    const writableNonSigners = mapEntries.filter(\n      ([, meta]) => !meta.isSigner && meta.isWritable,\n    );\n    const readonlyNonSigners = mapEntries.filter(\n      ([, meta]) => !meta.isSigner && !meta.isWritable,\n    );\n\n    const header: MessageHeader = {\n      numRequiredSignatures: writableSigners.length + readonlySigners.length,\n      numReadonlySignedAccounts: readonlySigners.length,\n      numReadonlyUnsignedAccounts: readonlyNonSigners.length,\n    };\n\n    // sanity checks\n    {\n      assert(\n        writableSigners.length > 0,\n        'Expected at least one writable signer key',\n      );\n      const [payerAddress] = writableSigners[0];\n      assert(\n        payerAddress === this.payer.toBase58(),\n        'Expected first writable signer key to be the fee payer',\n      );\n    }\n\n    const staticAccountKeys = [\n      ...writableSigners.map(([address]) => new PublicKey(address)),\n      ...readonlySigners.map(([address]) => new PublicKey(address)),\n      ...writableNonSigners.map(([address]) => new PublicKey(address)),\n      ...readonlyNonSigners.map(([address]) => new PublicKey(address)),\n    ];\n\n    return [header, staticAccountKeys];\n  }\n\n  extractTableLookup(\n    lookupTable: AddressLookupTableAccount,\n  ): [MessageAddressTableLookup, AccountKeysFromLookups] | undefined {\n    const [writableIndexes, drainedWritableKeys] =\n      this.drainKeysFoundInLookupTable(\n        lookupTable.state.addresses,\n        keyMeta =>\n          !keyMeta.isSigner && !keyMeta.isInvoked && keyMeta.isWritable,\n      );\n    const [readonlyIndexes, drainedReadonlyKeys] =\n      this.drainKeysFoundInLookupTable(\n        lookupTable.state.addresses,\n        keyMeta =>\n          !keyMeta.isSigner && !keyMeta.isInvoked && !keyMeta.isWritable,\n      );\n\n    // Don't extract lookup if no keys were found\n    if (writableIndexes.length === 0 && readonlyIndexes.length === 0) {\n      return;\n    }\n\n    return [\n      {\n        accountKey: lookupTable.key,\n        writableIndexes,\n        readonlyIndexes,\n      },\n      {\n        writable: drainedWritableKeys,\n        readonly: drainedReadonlyKeys,\n      },\n    ];\n  }\n\n  /** @internal */\n  private drainKeysFoundInLookupTable(\n    lookupTableEntries: Array<PublicKey>,\n    keyMetaFilter: (keyMeta: CompiledKeyMeta) => boolean,\n  ): [Array<number>, Array<PublicKey>] {\n    const lookupTableIndexes = new Array();\n    const drainedKeys = new Array();\n\n    for (const [address, keyMeta] of this.keyMetaMap.entries()) {\n      if (keyMetaFilter(keyMeta)) {\n        const key = new PublicKey(address);\n        const lookupTableIndex = lookupTableEntries.findIndex(entry =>\n          entry.equals(key),\n        );\n        if (lookupTableIndex >= 0) {\n          assert(lookupTableIndex < 256, 'Max lookup table index exceeded');\n          lookupTableIndexes.push(lookupTableIndex);\n          drainedKeys.push(key);\n          this.keyMetaMap.delete(address);\n        }\n      }\n    }\n\n    return [lookupTableIndexes, drainedKeys];\n  }\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey, PUBLIC_KEY_LENGTH} from '../publickey';\nimport type {Blockhash} from '../blockhash';\nimport * as Layout from '../layout';\nimport {PACKET_DATA_SIZE, VERSION_PREFIX_MASK} from '../transaction/constants';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport {toBuffer} from '../utils/to-buffer';\nimport {\n  MessageHeader,\n  MessageAddressTableLookup,\n  MessageCompiledInstruction,\n} from './index';\nimport {TransactionInstruction} from '../transaction';\nimport {CompiledKeys} from './compiled-keys';\nimport {MessageAccountKeys} from './account-keys';\n\n/**\n * An instruction to execute by a program\n *\n * @property {number} programIdIndex\n * @property {number[]} accounts\n * @property {string} data\n */\nexport type CompiledInstruction = {\n  /** Index into the transaction keys array indicating the program account that executes this instruction */\n  programIdIndex: number;\n  /** Ordered indices into the transaction keys array indicating which accounts to pass to the program */\n  accounts: number[];\n  /** The program input data encoded as base 58 */\n  data: string;\n};\n\n/**\n * Message constructor arguments\n */\nexport type MessageArgs = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** All the account keys used by this transaction */\n  accountKeys: string[] | PublicKey[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  instructions: CompiledInstruction[];\n};\n\nexport type CompileLegacyArgs = {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n};\n\n/**\n * List of instructions to be processed atomically\n */\nexport class Message {\n  header: MessageHeader;\n  accountKeys: PublicKey[];\n  recentBlockhash: Blockhash;\n  instructions: CompiledInstruction[];\n\n  private indexToProgramIds: Map<number, PublicKey> = new Map<\n    number,\n    PublicKey\n  >();\n\n  constructor(args: MessageArgs) {\n    this.header = args.header;\n    this.accountKeys = args.accountKeys.map(account => new PublicKey(account));\n    this.recentBlockhash = args.recentBlockhash;\n    this.instructions = args.instructions;\n    this.instructions.forEach(ix =>\n      this.indexToProgramIds.set(\n        ix.programIdIndex,\n        this.accountKeys[ix.programIdIndex],\n      ),\n    );\n  }\n\n  get version(): 'legacy' {\n    return 'legacy';\n  }\n\n  get staticAccountKeys(): Array<PublicKey> {\n    return this.accountKeys;\n  }\n\n  get compiledInstructions(): Array<MessageCompiledInstruction> {\n    return this.instructions.map(\n      (ix): MessageCompiledInstruction => ({\n        programIdIndex: ix.programIdIndex,\n        accountKeyIndexes: ix.accounts,\n        data: bs58.decode(ix.data),\n      }),\n    );\n  }\n\n  get addressTableLookups(): Array<MessageAddressTableLookup> {\n    return [];\n  }\n\n  getAccountKeys(): MessageAccountKeys {\n    return new MessageAccountKeys(this.staticAccountKeys);\n  }\n\n  static compile(args: CompileLegacyArgs): Message {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(staticAccountKeys);\n    const instructions = accountKeys.compileInstructions(args.instructions).map(\n      (ix: MessageCompiledInstruction): CompiledInstruction => ({\n        programIdIndex: ix.programIdIndex,\n        accounts: ix.accountKeyIndexes,\n        data: bs58.encode(ix.data),\n      }),\n    );\n    return new Message({\n      header,\n      accountKeys: staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      instructions,\n    });\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = this.accountKeys.length - numSignedAccounts;\n      const numWritableUnsignedAccounts =\n        numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts =\n        numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n\n  isProgramId(index: number): boolean {\n    return this.indexToProgramIds.has(index);\n  }\n\n  programIds(): PublicKey[] {\n    return [...this.indexToProgramIds.values()];\n  }\n\n  nonProgramIds(): PublicKey[] {\n    return this.accountKeys.filter((_, index) => !this.isProgramId(index));\n  }\n\n  serialize(): Buffer {\n    const numKeys = this.accountKeys.length;\n\n    let keyCount: number[] = [];\n    shortvec.encodeLength(keyCount, numKeys);\n\n    const instructions = this.instructions.map(instruction => {\n      const {accounts, programIdIndex} = instruction;\n      const data = Array.from(bs58.decode(instruction.data));\n\n      let keyIndicesCount: number[] = [];\n      shortvec.encodeLength(keyIndicesCount, accounts.length);\n\n      let dataCount: number[] = [];\n      shortvec.encodeLength(dataCount, data.length);\n\n      return {\n        programIdIndex,\n        keyIndicesCount: Buffer.from(keyIndicesCount),\n        keyIndices: accounts,\n        dataLength: Buffer.from(dataCount),\n        data,\n      };\n    });\n\n    let instructionCount: number[] = [];\n    shortvec.encodeLength(instructionCount, instructions.length);\n    let instructionBuffer = Buffer.alloc(PACKET_DATA_SIZE);\n    Buffer.from(instructionCount).copy(instructionBuffer);\n    let instructionBufferLength = instructionCount.length;\n\n    instructions.forEach(instruction => {\n      const instructionLayout = BufferLayout.struct<\n        Readonly<{\n          data: number[];\n          dataLength: Uint8Array;\n          keyIndices: number[];\n          keyIndicesCount: Uint8Array;\n          programIdIndex: number;\n        }>\n      >([\n        BufferLayout.u8('programIdIndex'),\n\n        BufferLayout.blob(\n          instruction.keyIndicesCount.length,\n          'keyIndicesCount',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8('keyIndex'),\n          instruction.keyIndices.length,\n          'keyIndices',\n        ),\n        BufferLayout.blob(instruction.dataLength.length, 'dataLength'),\n        BufferLayout.seq(\n          BufferLayout.u8('userdatum'),\n          instruction.data.length,\n          'data',\n        ),\n      ]);\n      const length = instructionLayout.encode(\n        instruction,\n        instructionBuffer,\n        instructionBufferLength,\n      );\n      instructionBufferLength += length;\n    });\n    instructionBuffer = instructionBuffer.slice(0, instructionBufferLength);\n\n    const signDataLayout = BufferLayout.struct<\n      Readonly<{\n        keyCount: Uint8Array;\n        keys: Uint8Array[];\n        numReadonlySignedAccounts: Uint8Array;\n        numReadonlyUnsignedAccounts: Uint8Array;\n        numRequiredSignatures: Uint8Array;\n        recentBlockhash: Uint8Array;\n      }>\n    >([\n      BufferLayout.blob(1, 'numRequiredSignatures'),\n      BufferLayout.blob(1, 'numReadonlySignedAccounts'),\n      BufferLayout.blob(1, 'numReadonlyUnsignedAccounts'),\n      BufferLayout.blob(keyCount.length, 'keyCount'),\n      BufferLayout.seq(Layout.publicKey('key'), numKeys, 'keys'),\n      Layout.publicKey('recentBlockhash'),\n    ]);\n\n    const transaction = {\n      numRequiredSignatures: Buffer.from([this.header.numRequiredSignatures]),\n      numReadonlySignedAccounts: Buffer.from([\n        this.header.numReadonlySignedAccounts,\n      ]),\n      numReadonlyUnsignedAccounts: Buffer.from([\n        this.header.numReadonlyUnsignedAccounts,\n      ]),\n      keyCount: Buffer.from(keyCount),\n      keys: this.accountKeys.map(key => toBuffer(key.toBytes())),\n      recentBlockhash: bs58.decode(this.recentBlockhash),\n    };\n\n    let signData = Buffer.alloc(2048);\n    const length = signDataLayout.encode(transaction, signData);\n    instructionBuffer.copy(signData, length);\n    return signData.slice(0, length + instructionBuffer.length);\n  }\n\n  /**\n   * Decode a compiled message into a Message object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Message {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const numRequiredSignatures = byteArray.shift()!;\n    if (\n      numRequiredSignatures !==\n      (numRequiredSignatures & VERSION_PREFIX_MASK)\n    ) {\n      throw new Error(\n        'Versioned messages must be deserialized with VersionedMessage.deserialize()',\n      );\n    }\n\n    const numReadonlySignedAccounts = byteArray.shift()!;\n    const numReadonlyUnsignedAccounts = byteArray.shift()!;\n\n    const accountCount = shortvec.decodeLength(byteArray);\n    let accountKeys = [];\n    for (let i = 0; i < accountCount; i++) {\n      const account = byteArray.slice(0, PUBLIC_KEY_LENGTH);\n      byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n      accountKeys.push(new PublicKey(Buffer.from(account)));\n    }\n\n    const recentBlockhash = byteArray.slice(0, PUBLIC_KEY_LENGTH);\n    byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    let instructions: CompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift()!;\n      const accountCount = shortvec.decodeLength(byteArray);\n      const accounts = byteArray.slice(0, accountCount);\n      byteArray = byteArray.slice(accountCount);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const dataSlice = byteArray.slice(0, dataLength);\n      const data = bs58.encode(Buffer.from(dataSlice));\n      byteArray = byteArray.slice(dataLength);\n      instructions.push({\n        programIdIndex,\n        accounts,\n        data,\n      });\n    }\n\n    const messageArgs = {\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      recentBlockhash: bs58.encode(Buffer.from(recentBlockhash)),\n      accountKeys,\n      instructions,\n    };\n\n    return new Message(messageArgs);\n  }\n}\n","import bs58 from 'bs58';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from '../layout';\nimport {Blockhash} from '../blockhash';\nimport {\n  MessageHeader,\n  MessageAddressTableLookup,\n  MessageCompiledInstruction,\n} from './index';\nimport {PublicKey, PUBLIC_KEY_LENGTH} from '../publickey';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport assert from '../utils/assert';\nimport {PACKET_DATA_SIZE, VERSION_PREFIX_MASK} from '../transaction/constants';\nimport {TransactionInstruction} from '../transaction';\nimport {AddressLookupTableAccount} from '../programs';\nimport {CompiledKeys} from './compiled-keys';\nimport {AccountKeysFromLookups, MessageAccountKeys} from './account-keys';\n\n/**\n * Message constructor arguments\n */\nexport type MessageV0Args = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** The static account keys used by this transaction */\n  staticAccountKeys: PublicKey[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  compiledInstructions: MessageCompiledInstruction[];\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  addressTableLookups: MessageAddressTableLookup[];\n};\n\nexport type CompileV0Args = {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n  addressLookupTableAccounts?: Array<AddressLookupTableAccount>;\n};\n\nexport type GetAccountKeysArgs =\n  | {\n      accountKeysFromLookups?: AccountKeysFromLookups | null;\n    }\n  | {\n      addressLookupTableAccounts?: AddressLookupTableAccount[] | null;\n    };\n\nexport class MessageV0 {\n  header: MessageHeader;\n  staticAccountKeys: Array<PublicKey>;\n  recentBlockhash: Blockhash;\n  compiledInstructions: Array<MessageCompiledInstruction>;\n  addressTableLookups: Array<MessageAddressTableLookup>;\n\n  constructor(args: MessageV0Args) {\n    this.header = args.header;\n    this.staticAccountKeys = args.staticAccountKeys;\n    this.recentBlockhash = args.recentBlockhash;\n    this.compiledInstructions = args.compiledInstructions;\n    this.addressTableLookups = args.addressTableLookups;\n  }\n\n  get version(): 0 {\n    return 0;\n  }\n\n  get numAccountKeysFromLookups(): number {\n    let count = 0;\n    for (const lookup of this.addressTableLookups) {\n      count += lookup.readonlyIndexes.length + lookup.writableIndexes.length;\n    }\n    return count;\n  }\n\n  getAccountKeys(args?: GetAccountKeysArgs): MessageAccountKeys {\n    let accountKeysFromLookups: AccountKeysFromLookups | undefined;\n    if (\n      args &&\n      'accountKeysFromLookups' in args &&\n      args.accountKeysFromLookups\n    ) {\n      if (\n        this.numAccountKeysFromLookups !=\n        args.accountKeysFromLookups.writable.length +\n          args.accountKeysFromLookups.readonly.length\n      ) {\n        throw new Error(\n          'Failed to get account keys because of a mismatch in the number of account keys from lookups',\n        );\n      }\n      accountKeysFromLookups = args.accountKeysFromLookups;\n    } else if (\n      args &&\n      'addressLookupTableAccounts' in args &&\n      args.addressLookupTableAccounts\n    ) {\n      accountKeysFromLookups = this.resolveAddressTableLookups(\n        args.addressLookupTableAccounts,\n      );\n    } else if (this.addressTableLookups.length > 0) {\n      throw new Error(\n        'Failed to get account keys because address table lookups were not resolved',\n      );\n    }\n    return new MessageAccountKeys(\n      this.staticAccountKeys,\n      accountKeysFromLookups,\n    );\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    const numStaticAccountKeys = this.staticAccountKeys.length;\n    if (index >= numStaticAccountKeys) {\n      const lookupAccountKeysIndex = index - numStaticAccountKeys;\n      const numWritableLookupAccountKeys = this.addressTableLookups.reduce(\n        (count, lookup) => count + lookup.writableIndexes.length,\n        0,\n      );\n      return lookupAccountKeysIndex < numWritableLookupAccountKeys;\n    } else if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = numStaticAccountKeys - numSignedAccounts;\n      const numWritableUnsignedAccounts =\n        numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts =\n        numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n\n  resolveAddressTableLookups(\n    addressLookupTableAccounts: AddressLookupTableAccount[],\n  ): AccountKeysFromLookups {\n    const accountKeysFromLookups: AccountKeysFromLookups = {\n      writable: [],\n      readonly: [],\n    };\n\n    for (const tableLookup of this.addressTableLookups) {\n      const tableAccount = addressLookupTableAccounts.find(account =>\n        account.key.equals(tableLookup.accountKey),\n      );\n      if (!tableAccount) {\n        throw new Error(\n          `Failed to find address lookup table account for table key ${tableLookup.accountKey.toBase58()}`,\n        );\n      }\n\n      for (const index of tableLookup.writableIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.writable.push(\n            tableAccount.state.addresses[index],\n          );\n        } else {\n          throw new Error(\n            `Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`,\n          );\n        }\n      }\n\n      for (const index of tableLookup.readonlyIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.readonly.push(\n            tableAccount.state.addresses[index],\n          );\n        } else {\n          throw new Error(\n            `Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`,\n          );\n        }\n      }\n    }\n\n    return accountKeysFromLookups;\n  }\n\n  static compile(args: CompileV0Args): MessageV0 {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n\n    const addressTableLookups = new Array<MessageAddressTableLookup>();\n    const accountKeysFromLookups: AccountKeysFromLookups = {\n      writable: new Array(),\n      readonly: new Array(),\n    };\n    const lookupTableAccounts = args.addressLookupTableAccounts || [];\n    for (const lookupTable of lookupTableAccounts) {\n      const extractResult = compiledKeys.extractTableLookup(lookupTable);\n      if (extractResult !== undefined) {\n        const [addressTableLookup, {writable, readonly}] = extractResult;\n        addressTableLookups.push(addressTableLookup);\n        accountKeysFromLookups.writable.push(...writable);\n        accountKeysFromLookups.readonly.push(...readonly);\n      }\n    }\n\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(\n      staticAccountKeys,\n      accountKeysFromLookups,\n    );\n    const compiledInstructions = accountKeys.compileInstructions(\n      args.instructions,\n    );\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      compiledInstructions,\n      addressTableLookups,\n    });\n  }\n\n  serialize(): Uint8Array {\n    const encodedStaticAccountKeysLength = Array<number>();\n    shortvec.encodeLength(\n      encodedStaticAccountKeysLength,\n      this.staticAccountKeys.length,\n    );\n\n    const serializedInstructions = this.serializeInstructions();\n    const encodedInstructionsLength = Array<number>();\n    shortvec.encodeLength(\n      encodedInstructionsLength,\n      this.compiledInstructions.length,\n    );\n\n    const serializedAddressTableLookups = this.serializeAddressTableLookups();\n    const encodedAddressTableLookupsLength = Array<number>();\n    shortvec.encodeLength(\n      encodedAddressTableLookupsLength,\n      this.addressTableLookups.length,\n    );\n\n    const messageLayout = BufferLayout.struct<{\n      prefix: number;\n      header: MessageHeader;\n      staticAccountKeysLength: Uint8Array;\n      staticAccountKeys: Array<Uint8Array>;\n      recentBlockhash: Uint8Array;\n      instructionsLength: Uint8Array;\n      serializedInstructions: Uint8Array;\n      addressTableLookupsLength: Uint8Array;\n      serializedAddressTableLookups: Uint8Array;\n    }>([\n      BufferLayout.u8('prefix'),\n      BufferLayout.struct<MessageHeader>(\n        [\n          BufferLayout.u8('numRequiredSignatures'),\n          BufferLayout.u8('numReadonlySignedAccounts'),\n          BufferLayout.u8('numReadonlyUnsignedAccounts'),\n        ],\n        'header',\n      ),\n      BufferLayout.blob(\n        encodedStaticAccountKeysLength.length,\n        'staticAccountKeysLength',\n      ),\n      BufferLayout.seq(\n        Layout.publicKey(),\n        this.staticAccountKeys.length,\n        'staticAccountKeys',\n      ),\n      Layout.publicKey('recentBlockhash'),\n      BufferLayout.blob(encodedInstructionsLength.length, 'instructionsLength'),\n      BufferLayout.blob(\n        serializedInstructions.length,\n        'serializedInstructions',\n      ),\n      BufferLayout.blob(\n        encodedAddressTableLookupsLength.length,\n        'addressTableLookupsLength',\n      ),\n      BufferLayout.blob(\n        serializedAddressTableLookups.length,\n        'serializedAddressTableLookups',\n      ),\n    ]);\n\n    const serializedMessage = new Uint8Array(PACKET_DATA_SIZE);\n    const MESSAGE_VERSION_0_PREFIX = 1 << 7;\n    const serializedMessageLength = messageLayout.encode(\n      {\n        prefix: MESSAGE_VERSION_0_PREFIX,\n        header: this.header,\n        staticAccountKeysLength: new Uint8Array(encodedStaticAccountKeysLength),\n        staticAccountKeys: this.staticAccountKeys.map(key => key.toBytes()),\n        recentBlockhash: bs58.decode(this.recentBlockhash),\n        instructionsLength: new Uint8Array(encodedInstructionsLength),\n        serializedInstructions,\n        addressTableLookupsLength: new Uint8Array(\n          encodedAddressTableLookupsLength,\n        ),\n        serializedAddressTableLookups,\n      },\n      serializedMessage,\n    );\n    return serializedMessage.slice(0, serializedMessageLength);\n  }\n\n  private serializeInstructions(): Uint8Array {\n    let serializedLength = 0;\n    const serializedInstructions = new Uint8Array(PACKET_DATA_SIZE);\n    for (const instruction of this.compiledInstructions) {\n      const encodedAccountKeyIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedAccountKeyIndexesLength,\n        instruction.accountKeyIndexes.length,\n      );\n\n      const encodedDataLength = Array<number>();\n      shortvec.encodeLength(encodedDataLength, instruction.data.length);\n\n      const instructionLayout = BufferLayout.struct<{\n        programIdIndex: number;\n        encodedAccountKeyIndexesLength: Uint8Array;\n        accountKeyIndexes: number[];\n        encodedDataLength: Uint8Array;\n        data: Uint8Array;\n      }>([\n        BufferLayout.u8('programIdIndex'),\n        BufferLayout.blob(\n          encodedAccountKeyIndexesLength.length,\n          'encodedAccountKeyIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          instruction.accountKeyIndexes.length,\n          'accountKeyIndexes',\n        ),\n        BufferLayout.blob(encodedDataLength.length, 'encodedDataLength'),\n        BufferLayout.blob(instruction.data.length, 'data'),\n      ]);\n\n      serializedLength += instructionLayout.encode(\n        {\n          programIdIndex: instruction.programIdIndex,\n          encodedAccountKeyIndexesLength: new Uint8Array(\n            encodedAccountKeyIndexesLength,\n          ),\n          accountKeyIndexes: instruction.accountKeyIndexes,\n          encodedDataLength: new Uint8Array(encodedDataLength),\n          data: instruction.data,\n        },\n        serializedInstructions,\n        serializedLength,\n      );\n    }\n\n    return serializedInstructions.slice(0, serializedLength);\n  }\n\n  private serializeAddressTableLookups(): Uint8Array {\n    let serializedLength = 0;\n    const serializedAddressTableLookups = new Uint8Array(PACKET_DATA_SIZE);\n    for (const lookup of this.addressTableLookups) {\n      const encodedWritableIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedWritableIndexesLength,\n        lookup.writableIndexes.length,\n      );\n\n      const encodedReadonlyIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedReadonlyIndexesLength,\n        lookup.readonlyIndexes.length,\n      );\n\n      const addressTableLookupLayout = BufferLayout.struct<{\n        accountKey: Uint8Array;\n        encodedWritableIndexesLength: Uint8Array;\n        writableIndexes: number[];\n        encodedReadonlyIndexesLength: Uint8Array;\n        readonlyIndexes: number[];\n      }>([\n        Layout.publicKey('accountKey'),\n        BufferLayout.blob(\n          encodedWritableIndexesLength.length,\n          'encodedWritableIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          lookup.writableIndexes.length,\n          'writableIndexes',\n        ),\n        BufferLayout.blob(\n          encodedReadonlyIndexesLength.length,\n          'encodedReadonlyIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          lookup.readonlyIndexes.length,\n          'readonlyIndexes',\n        ),\n      ]);\n\n      serializedLength += addressTableLookupLayout.encode(\n        {\n          accountKey: lookup.accountKey.toBytes(),\n          encodedWritableIndexesLength: new Uint8Array(\n            encodedWritableIndexesLength,\n          ),\n          writableIndexes: lookup.writableIndexes,\n          encodedReadonlyIndexesLength: new Uint8Array(\n            encodedReadonlyIndexesLength,\n          ),\n          readonlyIndexes: lookup.readonlyIndexes,\n        },\n        serializedAddressTableLookups,\n        serializedLength,\n      );\n    }\n\n    return serializedAddressTableLookups.slice(0, serializedLength);\n  }\n\n  static deserialize(serializedMessage: Uint8Array): MessageV0 {\n    let byteArray = [...serializedMessage];\n\n    const prefix = byteArray.shift() as number;\n    const maskedPrefix = prefix & VERSION_PREFIX_MASK;\n    assert(\n      prefix !== maskedPrefix,\n      `Expected versioned message but received legacy message`,\n    );\n\n    const version = maskedPrefix;\n    assert(\n      version === 0,\n      `Expected versioned message with version 0 but found version ${version}`,\n    );\n\n    const header: MessageHeader = {\n      numRequiredSignatures: byteArray.shift() as number,\n      numReadonlySignedAccounts: byteArray.shift() as number,\n      numReadonlyUnsignedAccounts: byteArray.shift() as number,\n    };\n\n    const staticAccountKeys = [];\n    const staticAccountKeysLength = shortvec.decodeLength(byteArray);\n    for (let i = 0; i < staticAccountKeysLength; i++) {\n      staticAccountKeys.push(\n        new PublicKey(byteArray.splice(0, PUBLIC_KEY_LENGTH)),\n      );\n    }\n\n    const recentBlockhash = bs58.encode(byteArray.splice(0, PUBLIC_KEY_LENGTH));\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    const compiledInstructions: MessageCompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift() as number;\n      const accountKeyIndexesLength = shortvec.decodeLength(byteArray);\n      const accountKeyIndexes = byteArray.splice(0, accountKeyIndexesLength);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const data = new Uint8Array(byteArray.splice(0, dataLength));\n      compiledInstructions.push({\n        programIdIndex,\n        accountKeyIndexes,\n        data,\n      });\n    }\n\n    const addressTableLookupsCount = shortvec.decodeLength(byteArray);\n    const addressTableLookups: MessageAddressTableLookup[] = [];\n    for (let i = 0; i < addressTableLookupsCount; i++) {\n      const accountKey = new PublicKey(byteArray.splice(0, PUBLIC_KEY_LENGTH));\n      const writableIndexesLength = shortvec.decodeLength(byteArray);\n      const writableIndexes = byteArray.splice(0, writableIndexesLength);\n      const readonlyIndexesLength = shortvec.decodeLength(byteArray);\n      const readonlyIndexes = byteArray.splice(0, readonlyIndexesLength);\n      addressTableLookups.push({\n        accountKey,\n        writableIndexes,\n        readonlyIndexes,\n      });\n    }\n\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash,\n      compiledInstructions,\n      addressTableLookups,\n    });\n  }\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n\nimport {PACKET_DATA_SIZE, SIGNATURE_LENGTH_IN_BYTES} from './constants';\nimport {Connection} from '../connection';\nimport {Message} from '../message';\nimport {PublicKey} from '../publickey';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport {toBuffer} from '../utils/to-buffer';\nimport invariant from '../utils/assert';\nimport type {Signer} from '../keypair';\nimport type {Blockhash} from '../blockhash';\nimport type {CompiledInstruction} from '../message';\nimport {sign, verify} from '../utils/ed25519';\n\n/**\n * Transaction signature as base-58 encoded string\n */\nexport type TransactionSignature = string;\n\nexport const enum TransactionStatus {\n  BLOCKHEIGHT_EXCEEDED,\n  PROCESSED,\n  TIMED_OUT,\n  NONCE_INVALID,\n}\n\n/**\n * Default (empty) signature\n */\nconst DEFAULT_SIGNATURE = Buffer.alloc(SIGNATURE_LENGTH_IN_BYTES).fill(0);\n\n/**\n * Account metadata used to define instructions\n */\nexport type AccountMeta = {\n  /** An account's public key */\n  pubkey: PublicKey;\n  /** True if an instruction requires a transaction signature matching `pubkey` */\n  isSigner: boolean;\n  /** True if the `pubkey` can be loaded as a read-write account. */\n  isWritable: boolean;\n};\n\n/**\n * List of TransactionInstruction object fields that may be initialized at construction\n */\nexport type TransactionInstructionCtorFields = {\n  keys: Array<AccountMeta>;\n  programId: PublicKey;\n  data?: Buffer;\n};\n\n/**\n * Configuration object for Transaction.serialize()\n */\nexport type SerializeConfig = {\n  /** Require all transaction signatures be present (default: true) */\n  requireAllSignatures?: boolean;\n  /** Verify provided signatures (default: true) */\n  verifySignatures?: boolean;\n};\n\n/**\n * @internal\n */\nexport interface TransactionInstructionJSON {\n  keys: {\n    pubkey: string;\n    isSigner: boolean;\n    isWritable: boolean;\n  }[];\n  programId: string;\n  data: number[];\n}\n\n/**\n * Transaction Instruction class\n */\nexport class TransactionInstruction {\n  /**\n   * Public keys to include in this transaction\n   * Boolean represents whether this pubkey needs to sign the transaction\n   */\n  keys: Array<AccountMeta>;\n\n  /**\n   * Program Id to execute\n   */\n  programId: PublicKey;\n\n  /**\n   * Program input\n   */\n  data: Buffer = Buffer.alloc(0);\n\n  constructor(opts: TransactionInstructionCtorFields) {\n    this.programId = opts.programId;\n    this.keys = opts.keys;\n    if (opts.data) {\n      this.data = opts.data;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionInstructionJSON {\n    return {\n      keys: this.keys.map(({pubkey, isSigner, isWritable}) => ({\n        pubkey: pubkey.toJSON(),\n        isSigner,\n        isWritable,\n      })),\n      programId: this.programId.toJSON(),\n      data: [...this.data],\n    };\n  }\n}\n\n/**\n * Pair of signature and corresponding public key\n */\nexport type SignaturePubkeyPair = {\n  signature: Buffer | null;\n  publicKey: PublicKey;\n};\n\n/**\n * List of Transaction object fields that may be initialized at construction\n */\nexport type TransactionCtorFields_DEPRECATED = {\n  /** Optional nonce information used for offline nonce'd transactions */\n  nonceInfo?: NonceInformation | null;\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  recentBlockhash?: Blockhash;\n};\n\n// For backward compatibility; an unfortunate consequence of being\n// forced to over-export types by the documentation generator.\n// See https://github.com/solana-labs/solana/pull/25820\nexport type TransactionCtorFields = TransactionCtorFields_DEPRECATED;\n\n/**\n * Blockhash-based transactions have a lifetime that are defined by\n * the blockhash they include. Any transaction whose blockhash is\n * too old will be rejected.\n */\nexport type TransactionBlockhashCtor = {\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  blockhash: Blockhash;\n  /** the last block chain can advance to before tx is declared expired */\n  lastValidBlockHeight: number;\n};\n\n/**\n * Use these options to construct a durable nonce transaction.\n */\nexport type TransactionNonceCtor = {\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  minContextSlot: number;\n  nonceInfo: NonceInformation;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n};\n\n/**\n * Nonce information to be used to build an offline Transaction.\n */\nexport type NonceInformation = {\n  /** The current blockhash stored in the nonce */\n  nonce: Blockhash;\n  /** AdvanceNonceAccount Instruction */\n  nonceInstruction: TransactionInstruction;\n};\n\n/**\n * @internal\n */\nexport interface TransactionJSON {\n  recentBlockhash: string | null;\n  feePayer: string | null;\n  nonceInfo: {\n    nonce: string;\n    nonceInstruction: TransactionInstructionJSON;\n  } | null;\n  instructions: TransactionInstructionJSON[];\n  signers: string[];\n}\n\n/**\n * Transaction class\n */\nexport class Transaction {\n  /**\n   * Signatures for the transaction.  Typically created by invoking the\n   * `sign()` method\n   */\n  signatures: Array<SignaturePubkeyPair> = [];\n\n  /**\n   * The first (payer) Transaction signature\n   *\n   * @returns {Buffer | null} Buffer of payer's signature\n   */\n  get signature(): Buffer | null {\n    if (this.signatures.length > 0) {\n      return this.signatures[0].signature;\n    }\n    return null;\n  }\n\n  /**\n   * The transaction fee payer\n   */\n  feePayer?: PublicKey;\n\n  /**\n   * The instructions to atomically execute\n   */\n  instructions: Array<TransactionInstruction> = [];\n\n  /**\n   * A recent transaction id. Must be populated by the caller\n   */\n  recentBlockhash?: Blockhash;\n\n  /**\n   * the last block chain can advance to before tx is declared expired\n   * */\n  lastValidBlockHeight?: number;\n\n  /**\n   * Optional Nonce information. If populated, transaction will use a durable\n   * Nonce hash instead of a recentBlockhash. Must be populated by the caller\n   */\n  nonceInfo?: NonceInformation;\n\n  /**\n   * If this is a nonce transaction this represents the minimum slot from which\n   * to evaluate if the nonce has advanced when attempting to confirm the\n   * transaction. This protects against a case where the transaction confirmation\n   * logic loads the nonce account from an old slot and assumes the mismatch in\n   * nonce value implies that the nonce has been advanced.\n   */\n  minNonceContextSlot?: number;\n\n  /**\n   * @internal\n   */\n  _message?: Message;\n\n  /**\n   * @internal\n   */\n  _json?: TransactionJSON;\n\n  // Construct a transaction with a blockhash and lastValidBlockHeight\n  constructor(opts?: TransactionBlockhashCtor);\n\n  // Construct a transaction using a durable nonce\n  constructor(opts?: TransactionNonceCtor);\n\n  /**\n   * @deprecated `TransactionCtorFields` has been deprecated and will be removed in a future version.\n   * Please supply a `TransactionBlockhashCtor` instead.\n   */\n  constructor(opts?: TransactionCtorFields_DEPRECATED);\n\n  /**\n   * Construct an empty Transaction\n   */\n  constructor(\n    opts?:\n      | TransactionBlockhashCtor\n      | TransactionNonceCtor\n      | TransactionCtorFields_DEPRECATED,\n  ) {\n    if (!opts) {\n      return;\n    }\n    if (opts.feePayer) {\n      this.feePayer = opts.feePayer;\n    }\n    if (opts.signatures) {\n      this.signatures = opts.signatures;\n    }\n    if (Object.prototype.hasOwnProperty.call(opts, 'nonceInfo')) {\n      const {minContextSlot, nonceInfo} = opts as TransactionNonceCtor;\n      this.minNonceContextSlot = minContextSlot;\n      this.nonceInfo = nonceInfo;\n    } else if (\n      Object.prototype.hasOwnProperty.call(opts, 'lastValidBlockHeight')\n    ) {\n      const {blockhash, lastValidBlockHeight} =\n        opts as TransactionBlockhashCtor;\n      this.recentBlockhash = blockhash;\n      this.lastValidBlockHeight = lastValidBlockHeight;\n    } else {\n      const {recentBlockhash, nonceInfo} =\n        opts as TransactionCtorFields_DEPRECATED;\n      if (nonceInfo) {\n        this.nonceInfo = nonceInfo;\n      }\n      this.recentBlockhash = recentBlockhash;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionJSON {\n    return {\n      recentBlockhash: this.recentBlockhash || null,\n      feePayer: this.feePayer ? this.feePayer.toJSON() : null,\n      nonceInfo: this.nonceInfo\n        ? {\n            nonce: this.nonceInfo.nonce,\n            nonceInstruction: this.nonceInfo.nonceInstruction.toJSON(),\n          }\n        : null,\n      instructions: this.instructions.map(instruction => instruction.toJSON()),\n      signers: this.signatures.map(({publicKey}) => {\n        return publicKey.toJSON();\n      }),\n    };\n  }\n\n  /**\n   * Add one or more instructions to this Transaction\n   *\n   * @param {Array< Transaction | TransactionInstruction | TransactionInstructionCtorFields >} items - Instructions to add to the Transaction\n   */\n  add(\n    ...items: Array<\n      Transaction | TransactionInstruction | TransactionInstructionCtorFields\n    >\n  ): Transaction {\n    if (items.length === 0) {\n      throw new Error('No instructions');\n    }\n\n    items.forEach((item: any) => {\n      if ('instructions' in item) {\n        this.instructions = this.instructions.concat(item.instructions);\n      } else if ('data' in item && 'programId' in item && 'keys' in item) {\n        this.instructions.push(item);\n      } else {\n        this.instructions.push(new TransactionInstruction(item));\n      }\n    });\n    return this;\n  }\n\n  /**\n   * Compile transaction data\n   */\n  compileMessage(): Message {\n    if (\n      this._message &&\n      JSON.stringify(this.toJSON()) === JSON.stringify(this._json)\n    ) {\n      return this._message;\n    }\n\n    let recentBlockhash;\n    let instructions: TransactionInstruction[];\n    if (this.nonceInfo) {\n      recentBlockhash = this.nonceInfo.nonce;\n      if (this.instructions[0] != this.nonceInfo.nonceInstruction) {\n        instructions = [this.nonceInfo.nonceInstruction, ...this.instructions];\n      } else {\n        instructions = this.instructions;\n      }\n    } else {\n      recentBlockhash = this.recentBlockhash;\n      instructions = this.instructions;\n    }\n    if (!recentBlockhash) {\n      throw new Error('Transaction recentBlockhash required');\n    }\n\n    if (instructions.length < 1) {\n      console.warn('No instructions provided');\n    }\n\n    let feePayer: PublicKey;\n    if (this.feePayer) {\n      feePayer = this.feePayer;\n    } else if (this.signatures.length > 0 && this.signatures[0].publicKey) {\n      // Use implicit fee payer\n      feePayer = this.signatures[0].publicKey;\n    } else {\n      throw new Error('Transaction fee payer required');\n    }\n\n    for (let i = 0; i < instructions.length; i++) {\n      if (instructions[i].programId === undefined) {\n        throw new Error(\n          `Transaction instruction index ${i} has undefined program id`,\n        );\n      }\n    }\n\n    const programIds: string[] = [];\n    const accountMetas: AccountMeta[] = [];\n    instructions.forEach(instruction => {\n      instruction.keys.forEach(accountMeta => {\n        accountMetas.push({...accountMeta});\n      });\n\n      const programId = instruction.programId.toString();\n      if (!programIds.includes(programId)) {\n        programIds.push(programId);\n      }\n    });\n\n    // Append programID account metas\n    programIds.forEach(programId => {\n      accountMetas.push({\n        pubkey: new PublicKey(programId),\n        isSigner: false,\n        isWritable: false,\n      });\n    });\n\n    // Cull duplicate account metas\n    const uniqueMetas: AccountMeta[] = [];\n    accountMetas.forEach(accountMeta => {\n      const pubkeyString = accountMeta.pubkey.toString();\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.toString() === pubkeyString;\n      });\n      if (uniqueIndex > -1) {\n        uniqueMetas[uniqueIndex].isWritable =\n          uniqueMetas[uniqueIndex].isWritable || accountMeta.isWritable;\n        uniqueMetas[uniqueIndex].isSigner =\n          uniqueMetas[uniqueIndex].isSigner || accountMeta.isSigner;\n      } else {\n        uniqueMetas.push(accountMeta);\n      }\n    });\n\n    // Sort. Prioritizing first by signer, then by writable\n    uniqueMetas.sort(function (x, y) {\n      if (x.isSigner !== y.isSigner) {\n        // Signers always come before non-signers\n        return x.isSigner ? -1 : 1;\n      }\n      if (x.isWritable !== y.isWritable) {\n        // Writable accounts always come before read-only accounts\n        return x.isWritable ? -1 : 1;\n      }\n      // Otherwise, sort by pubkey, stringwise.\n      const options = {\n        localeMatcher: 'best fit',\n        usage: 'sort',\n        sensitivity: 'variant',\n        ignorePunctuation: false,\n        numeric: false,\n        caseFirst: 'lower',\n      } as Intl.CollatorOptions;\n      return x.pubkey\n        .toBase58()\n        .localeCompare(y.pubkey.toBase58(), 'en', options);\n    });\n\n    // Move fee payer to the front\n    const feePayerIndex = uniqueMetas.findIndex(x => {\n      return x.pubkey.equals(feePayer);\n    });\n    if (feePayerIndex > -1) {\n      const [payerMeta] = uniqueMetas.splice(feePayerIndex, 1);\n      payerMeta.isSigner = true;\n      payerMeta.isWritable = true;\n      uniqueMetas.unshift(payerMeta);\n    } else {\n      uniqueMetas.unshift({\n        pubkey: feePayer,\n        isSigner: true,\n        isWritable: true,\n      });\n    }\n\n    // Disallow unknown signers\n    for (const signature of this.signatures) {\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.equals(signature.publicKey);\n      });\n      if (uniqueIndex > -1) {\n        if (!uniqueMetas[uniqueIndex].isSigner) {\n          uniqueMetas[uniqueIndex].isSigner = true;\n          console.warn(\n            'Transaction references a signature that is unnecessary, ' +\n              'only the fee payer and instruction signer accounts should sign a transaction. ' +\n              'This behavior is deprecated and will throw an error in the next major version release.',\n          );\n        }\n      } else {\n        throw new Error(`unknown signer: ${signature.publicKey.toString()}`);\n      }\n    }\n\n    let numRequiredSignatures = 0;\n    let numReadonlySignedAccounts = 0;\n    let numReadonlyUnsignedAccounts = 0;\n\n    // Split out signing from non-signing keys and count header values\n    const signedKeys: string[] = [];\n    const unsignedKeys: string[] = [];\n    uniqueMetas.forEach(({pubkey, isSigner, isWritable}) => {\n      if (isSigner) {\n        signedKeys.push(pubkey.toString());\n        numRequiredSignatures += 1;\n        if (!isWritable) {\n          numReadonlySignedAccounts += 1;\n        }\n      } else {\n        unsignedKeys.push(pubkey.toString());\n        if (!isWritable) {\n          numReadonlyUnsignedAccounts += 1;\n        }\n      }\n    });\n\n    const accountKeys = signedKeys.concat(unsignedKeys);\n    const compiledInstructions: CompiledInstruction[] = instructions.map(\n      instruction => {\n        const {data, programId} = instruction;\n        return {\n          programIdIndex: accountKeys.indexOf(programId.toString()),\n          accounts: instruction.keys.map(meta =>\n            accountKeys.indexOf(meta.pubkey.toString()),\n          ),\n          data: bs58.encode(data),\n        };\n      },\n    );\n\n    compiledInstructions.forEach(instruction => {\n      invariant(instruction.programIdIndex >= 0);\n      instruction.accounts.forEach(keyIndex => invariant(keyIndex >= 0));\n    });\n\n    return new Message({\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      accountKeys,\n      recentBlockhash,\n      instructions: compiledInstructions,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _compile(): Message {\n    const message = this.compileMessage();\n    const signedKeys = message.accountKeys.slice(\n      0,\n      message.header.numRequiredSignatures,\n    );\n\n    if (this.signatures.length === signedKeys.length) {\n      const valid = this.signatures.every((pair, index) => {\n        return signedKeys[index].equals(pair.publicKey);\n      });\n\n      if (valid) return message;\n    }\n\n    this.signatures = signedKeys.map(publicKey => ({\n      signature: null,\n      publicKey,\n    }));\n\n    return message;\n  }\n\n  /**\n   * Get a buffer of the Transaction data that need to be covered by signatures\n   */\n  serializeMessage(): Buffer {\n    return this._compile().serialize();\n  }\n\n  /**\n   * Get the estimated fee associated with a transaction\n   *\n   * @param {Connection} connection Connection to RPC Endpoint.\n   *\n   * @returns {Promise<number | null>} The estimated fee for the transaction\n   */\n  async getEstimatedFee(connection: Connection): Promise<number | null> {\n    return (await connection.getFeeForMessage(this.compileMessage())).value;\n  }\n\n  /**\n   * Specify the public keys which will be used to sign the Transaction.\n   * The first signer will be used as the transaction fee payer account.\n   *\n   * Signatures can be added with either `partialSign` or `addSignature`\n   *\n   * @deprecated Deprecated since v0.84.0. Only the fee payer needs to be\n   * specified and it can be set in the Transaction constructor or with the\n   * `feePayer` property.\n   */\n  setSigners(...signers: Array<PublicKey>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    const seen = new Set();\n    this.signatures = signers\n      .filter(publicKey => {\n        const key = publicKey.toString();\n        if (seen.has(key)) {\n          return false;\n        } else {\n          seen.add(key);\n          return true;\n        }\n      })\n      .map(publicKey => ({signature: null, publicKey}));\n  }\n\n  /**\n   * Sign the Transaction with the specified signers. Multiple signatures may\n   * be applied to a Transaction. The first signature is considered \"primary\"\n   * and is used identify and confirm transactions.\n   *\n   * If the Transaction `feePayer` is not set, the first signer will be used\n   * as the transaction fee payer account.\n   *\n   * Transaction fields should not be modified after the first call to `sign`,\n   * as doing so may invalidate the signature and cause the Transaction to be\n   * rejected.\n   *\n   * The Transaction must be assigned a valid `recentBlockhash` before invoking this method\n   *\n   * @param {Array<Signer>} signers Array of signers that will sign the transaction\n   */\n  sign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    this.signatures = uniqueSigners.map(signer => ({\n      signature: null,\n      publicKey: signer.publicKey,\n    }));\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * Partially sign a transaction with the specified accounts. All accounts must\n   * correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * All the caveats from the `sign` method apply to `partialSign`\n   *\n   * @param {Array<Signer>} signers Array of signers that will sign the transaction\n   */\n  partialSign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * @internal\n   */\n  _partialSign(message: Message, ...signers: Array<Signer>) {\n    const signData = message.serialize();\n    signers.forEach(signer => {\n      const signature = sign(signData, signer.secretKey);\n      this._addSignature(signer.publicKey, toBuffer(signature));\n    });\n  }\n\n  /**\n   * Add an externally created signature to a transaction. The public key\n   * must correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * @param {PublicKey} pubkey Public key that will be added to the transaction.\n   * @param {Buffer} signature An externally created signature to add to the transaction.\n   */\n  addSignature(pubkey: PublicKey, signature: Buffer) {\n    this._compile(); // Ensure signatures array is populated\n    this._addSignature(pubkey, signature);\n  }\n\n  /**\n   * @internal\n   */\n  _addSignature(pubkey: PublicKey, signature: Buffer) {\n    invariant(signature.length === 64);\n\n    const index = this.signatures.findIndex(sigpair =>\n      pubkey.equals(sigpair.publicKey),\n    );\n    if (index < 0) {\n      throw new Error(`unknown signer: ${pubkey.toString()}`);\n    }\n\n    this.signatures[index].signature = Buffer.from(signature);\n  }\n\n  /**\n   * Verify signatures of a Transaction\n   * Optional parameter specifies if we're expecting a fully signed Transaction or a partially signed one.\n   * If no boolean is provided, we expect a fully signed Transaction by default.\n   *\n   * @param {boolean} [requireAllSignatures=true] Require a fully signed Transaction\n   */\n  verifySignatures(requireAllSignatures?: boolean): boolean {\n    return this._verifySignatures(\n      this.serializeMessage(),\n      requireAllSignatures === undefined ? true : requireAllSignatures,\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _verifySignatures(\n    signData: Uint8Array,\n    requireAllSignatures: boolean,\n  ): boolean {\n    for (const {signature, publicKey} of this.signatures) {\n      if (signature === null) {\n        if (requireAllSignatures) {\n          return false;\n        }\n      } else {\n        if (!verify(signature, signData, publicKey.toBytes())) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Serialize the Transaction in the wire format.\n   *\n   * @param {Buffer} [config] Config of transaction.\n   *\n   * @returns {Buffer} Signature of transaction in wire format.\n   */\n  serialize(config?: SerializeConfig): Buffer {\n    const {requireAllSignatures, verifySignatures} = Object.assign(\n      {requireAllSignatures: true, verifySignatures: true},\n      config,\n    );\n\n    const signData = this.serializeMessage();\n    if (\n      verifySignatures &&\n      !this._verifySignatures(signData, requireAllSignatures)\n    ) {\n      throw new Error('Signature verification failed');\n    }\n\n    return this._serialize(signData);\n  }\n\n  /**\n   * @internal\n   */\n  _serialize(signData: Buffer): Buffer {\n    const {signatures} = this;\n    const signatureCount: number[] = [];\n    shortvec.encodeLength(signatureCount, signatures.length);\n    const transactionLength =\n      signatureCount.length + signatures.length * 64 + signData.length;\n    const wireTransaction = Buffer.alloc(transactionLength);\n    invariant(signatures.length < 256);\n    Buffer.from(signatureCount).copy(wireTransaction, 0);\n    signatures.forEach(({signature}, index) => {\n      if (signature !== null) {\n        invariant(signature.length === 64, `signature has invalid length`);\n        Buffer.from(signature).copy(\n          wireTransaction,\n          signatureCount.length + index * 64,\n        );\n      }\n    });\n    signData.copy(\n      wireTransaction,\n      signatureCount.length + signatures.length * 64,\n    );\n    invariant(\n      wireTransaction.length <= PACKET_DATA_SIZE,\n      `Transaction too large: ${wireTransaction.length} > ${PACKET_DATA_SIZE}`,\n    );\n    return wireTransaction;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get keys(): Array<PublicKey> {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].keys.map(keyObj => keyObj.pubkey);\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get programId(): PublicKey {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].programId;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get data(): Buffer {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].data;\n  }\n\n  /**\n   * Parse a wire transaction into a Transaction object.\n   *\n   * @param {Buffer | Uint8Array | Array<number>} buffer Signature of wire Transaction\n   *\n   * @returns {Transaction} Transaction associated with the signature\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Transaction {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const signatureCount = shortvec.decodeLength(byteArray);\n    let signatures = [];\n    for (let i = 0; i < signatureCount; i++) {\n      const signature = byteArray.slice(0, SIGNATURE_LENGTH_IN_BYTES);\n      byteArray = byteArray.slice(SIGNATURE_LENGTH_IN_BYTES);\n      signatures.push(bs58.encode(Buffer.from(signature)));\n    }\n\n    return Transaction.populate(Message.from(byteArray), signatures);\n  }\n\n  /**\n   * Populate Transaction object from message and signatures\n   *\n   * @param {Message} message Message of transaction\n   * @param {Array<string>} signatures List of signatures to assign to the transaction\n   *\n   * @returns {Transaction} The populated Transaction\n   */\n  static populate(\n    message: Message,\n    signatures: Array<string> = [],\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.recentBlockhash = message.recentBlockhash;\n    if (message.header.numRequiredSignatures > 0) {\n      transaction.feePayer = message.accountKeys[0];\n    }\n    signatures.forEach((signature, index) => {\n      const sigPubkeyPair = {\n        signature:\n          signature == bs58.encode(DEFAULT_SIGNATURE)\n            ? null\n            : bs58.decode(signature),\n        publicKey: message.accountKeys[index],\n      };\n      transaction.signatures.push(sigPubkeyPair);\n    });\n\n    message.instructions.forEach(instruction => {\n      const keys = instruction.accounts.map(account => {\n        const pubkey = message.accountKeys[account];\n        return {\n          pubkey,\n          isSigner:\n            transaction.signatures.some(\n              keyObj => keyObj.publicKey.toString() === pubkey.toString(),\n            ) || message.isAccountSigner(account),\n          isWritable: message.isAccountWritable(account),\n        };\n      });\n\n      transaction.instructions.push(\n        new TransactionInstruction({\n          keys,\n          programId: message.accountKeys[instruction.programIdIndex],\n          data: bs58.decode(instruction.data),\n        }),\n      );\n    });\n\n    transaction._message = message;\n    transaction._json = transaction.toJSON();\n\n    return transaction;\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {Signer} from '../keypair';\nimport assert from '../utils/assert';\nimport {VersionedMessage} from '../message/versioned';\nimport {SIGNATURE_LENGTH_IN_BYTES} from './constants';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport * as Layout from '../layout';\nimport {sign} from '../utils/ed25519';\nimport {PublicKey} from '../publickey';\n\nexport type TransactionVersion = 'legacy' | 0;\n\n/**\n * Versioned transaction class\n */\nexport class VersionedTransaction {\n  signatures: Array<Uint8Array>;\n  message: VersionedMessage;\n\n  get version(): TransactionVersion {\n    return this.message.version;\n  }\n\n  constructor(message: VersionedMessage, signatures?: Array<Uint8Array>) {\n    if (signatures !== undefined) {\n      assert(\n        signatures.length === message.header.numRequiredSignatures,\n        'Expected signatures length to be equal to the number of required signatures',\n      );\n      this.signatures = signatures;\n    } else {\n      const defaultSignatures = [];\n      for (let i = 0; i < message.header.numRequiredSignatures; i++) {\n        defaultSignatures.push(new Uint8Array(SIGNATURE_LENGTH_IN_BYTES));\n      }\n      this.signatures = defaultSignatures;\n    }\n    this.message = message;\n  }\n\n  serialize(): Uint8Array {\n    const serializedMessage = this.message.serialize();\n\n    const encodedSignaturesLength = Array<number>();\n    shortvec.encodeLength(encodedSignaturesLength, this.signatures.length);\n\n    const transactionLayout = BufferLayout.struct<{\n      encodedSignaturesLength: Uint8Array;\n      signatures: Array<Uint8Array>;\n      serializedMessage: Uint8Array;\n    }>([\n      BufferLayout.blob(\n        encodedSignaturesLength.length,\n        'encodedSignaturesLength',\n      ),\n      BufferLayout.seq(\n        Layout.signature(),\n        this.signatures.length,\n        'signatures',\n      ),\n      BufferLayout.blob(serializedMessage.length, 'serializedMessage'),\n    ]);\n\n    const serializedTransaction = new Uint8Array(2048);\n    const serializedTransactionLength = transactionLayout.encode(\n      {\n        encodedSignaturesLength: new Uint8Array(encodedSignaturesLength),\n        signatures: this.signatures,\n        serializedMessage,\n      },\n      serializedTransaction,\n    );\n\n    return serializedTransaction.slice(0, serializedTransactionLength);\n  }\n\n  static deserialize(serializedTransaction: Uint8Array): VersionedTransaction {\n    let byteArray = [...serializedTransaction];\n\n    const signatures = [];\n    const signaturesLength = shortvec.decodeLength(byteArray);\n    for (let i = 0; i < signaturesLength; i++) {\n      signatures.push(\n        new Uint8Array(byteArray.splice(0, SIGNATURE_LENGTH_IN_BYTES)),\n      );\n    }\n\n    const message = VersionedMessage.deserialize(new Uint8Array(byteArray));\n    return new VersionedTransaction(message, signatures);\n  }\n\n  sign(signers: Array<Signer>) {\n    const messageData = this.message.serialize();\n    const signerPubkeys = this.message.staticAccountKeys.slice(\n      0,\n      this.message.header.numRequiredSignatures,\n    );\n    for (const signer of signers) {\n      const signerIndex = signerPubkeys.findIndex(pubkey =>\n        pubkey.equals(signer.publicKey),\n      );\n      assert(\n        signerIndex >= 0,\n        `Cannot sign with non signer key ${signer.publicKey.toBase58()}`,\n      );\n      this.signatures[signerIndex] = sign(messageData, signer.secretKey);\n    }\n  }\n\n  addSignature(publicKey: PublicKey, signature: Uint8Array) {\n    assert(signature.byteLength === 64, 'Signature must be 64 bytes long');\n    const signerPubkeys = this.message.staticAccountKeys.slice(\n      0,\n      this.message.header.numRequiredSignatures,\n    );\n    const signerIndex = signerPubkeys.findIndex(pubkey =>\n      pubkey.equals(publicKey),\n    );\n    assert(\n      signerIndex >= 0,\n      `Can not add signature; \\`${publicKey.toBase58()}\\` is not required to sign this transaction`,\n    );\n    this.signatures[signerIndex] = signature;\n  }\n}\n","// TODO: These constants should be removed in favor of reading them out of a\n// Syscall account\n\n/**\n * @internal\n */\nexport const NUM_TICKS_PER_SECOND = 160;\n\n/**\n * @internal\n */\nexport const DEFAULT_TICKS_PER_SLOT = 64;\n\n/**\n * @internal\n */\nexport const NUM_SLOTS_PER_SECOND =\n  NUM_TICKS_PER_SECOND / DEFAULT_TICKS_PER_SLOT;\n\n/**\n * @internal\n */\nexport const MS_PER_SLOT = 1000 / NUM_SLOTS_PER_SECOND;\n","import {PublicKey} from './publickey';\n\nexport const SYSVAR_CLOCK_PUBKEY = new PublicKey(\n  'SysvarC1ock11111111111111111111111111111111',\n);\n\nexport const SYSVAR_EPOCH_SCHEDULE_PUBKEY = new PublicKey(\n  'SysvarEpochSchedu1e111111111111111111111111',\n);\n\nexport const SYSVAR_INSTRUCTIONS_PUBKEY = new PublicKey(\n  'Sysvar1nstructions1111111111111111111111111',\n);\n\nexport const SYSVAR_RECENT_BLOCKHASHES_PUBKEY = new PublicKey(\n  'SysvarRecentB1ockHashes11111111111111111111',\n);\n\nexport const SYSVAR_RENT_PUBKEY = new PublicKey(\n  'SysvarRent111111111111111111111111111111111',\n);\n\nexport const SYSVAR_REWARDS_PUBKEY = new PublicKey(\n  'SysvarRewards111111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HASHES_PUBKEY = new PublicKey(\n  'SysvarS1otHashes111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HISTORY_PUBKEY = new PublicKey(\n  'SysvarS1otHistory11111111111111111111111111',\n);\n\nexport const SYSVAR_STAKE_HISTORY_PUBKEY = new PublicKey(\n  'SysvarStakeHistory1111111111111111111111111',\n);\n","import {Connection, SignatureResult} from '../connection';\nimport {Transaction} from '../transaction';\nimport type {ConfirmOptions} from '../connection';\nimport type {Signer} from '../keypair';\nimport type {TransactionSignature} from '../transaction';\n\n/**\n * Sign, send and confirm a transaction.\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Transaction} transaction\n * @param {Array<Signer>} signers\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nexport async function sendAndConfirmTransaction(\n  connection: Connection,\n  transaction: Transaction,\n  signers: Array<Signer>,\n  options?: ConfirmOptions &\n    Readonly<{\n      // A signal that, when aborted, cancels any outstanding transaction confirmation operations\n      abortSignal?: AbortSignal;\n    }>,\n): Promise<TransactionSignature> {\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    maxRetries: options.maxRetries,\n    minContextSlot: options.minContextSlot,\n  };\n\n  const signature = await connection.sendTransaction(\n    transaction,\n    signers,\n    sendOptions,\n  );\n\n  let status: SignatureResult;\n  if (\n    transaction.recentBlockhash != null &&\n    transaction.lastValidBlockHeight != null\n  ) {\n    status = (\n      await connection.confirmTransaction(\n        {\n          abortSignal: options?.abortSignal,\n          signature: signature,\n          blockhash: transaction.recentBlockhash,\n          lastValidBlockHeight: transaction.lastValidBlockHeight,\n        },\n        options && options.commitment,\n      )\n    ).value;\n  } else if (\n    transaction.minNonceContextSlot != null &&\n    transaction.nonceInfo != null\n  ) {\n    const {nonceInstruction} = transaction.nonceInfo;\n    const nonceAccountPubkey = nonceInstruction.keys[0].pubkey;\n    status = (\n      await connection.confirmTransaction(\n        {\n          abortSignal: options?.abortSignal,\n          minContextSlot: transaction.minNonceContextSlot,\n          nonceAccountPubkey,\n          nonceValue: transaction.nonceInfo.nonce,\n          signature,\n        },\n        options && options.commitment,\n      )\n    ).value;\n  } else {\n    if (options?.abortSignal != null) {\n      console.warn(\n        'sendAndConfirmTransaction(): A transaction with a deprecated confirmation strategy was ' +\n          'supplied along with an `abortSignal`. Only transactions having `lastValidBlockHeight` ' +\n          'or a combination of `nonceInfo` and `minNonceContextSlot` are abortable.',\n      );\n    }\n    status = (\n      await connection.confirmTransaction(\n        signature,\n        options && options.commitment,\n      )\n    ).value;\n  }\n\n  if (status.err) {\n    throw new Error(\n      `Transaction ${signature} failed (${JSON.stringify(status)})`,\n    );\n  }\n\n  return signature;\n}\n","// zzz\nexport function sleep(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from './layout';\n\nexport interface IInstructionInputData {\n  readonly instruction: number;\n}\n\n/**\n * @internal\n */\nexport type InstructionType<TInputData extends IInstructionInputData> = {\n  /** The Instruction index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<TInputData>;\n};\n\n/**\n * Populate a buffer of instruction data using an InstructionType\n * @internal\n */\nexport function encodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  fields?: any,\n): Buffer {\n  const allocLength =\n    type.layout.span >= 0 ? type.layout.span : Layout.getAlloc(type, fields);\n  const data = Buffer.alloc(allocLength);\n  const layoutFields = Object.assign({instruction: type.index}, fields);\n  type.layout.encode(layoutFields, data);\n  return data;\n}\n\n/**\n * Decode instruction data buffer using an InstructionType\n * @internal\n */\nexport function decodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  buffer: Buffer,\n): TInputData {\n  let data: TInputData;\n  try {\n    data = type.layout.decode(buffer);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (data.instruction !== type.index) {\n    throw new Error(\n      `invalid instruction; instruction index mismatch ${data.instruction} != ${type.index}`,\n    );\n  }\n\n  return data;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\n/**\n * https://github.com/solana-labs/solana/blob/90bedd7e067b5b8f3ddbb45da00a4e9cabb22c62/sdk/src/fee_calculator.rs#L7-L11\n *\n * @internal\n */\nexport const FeeCalculatorLayout = BufferLayout.nu64('lamportsPerSignature');\n\n/**\n * Calculator for transaction fees.\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport interface FeeCalculator {\n  /** Cost in lamports to validate a signature. */\n  lamportsPerSignature: number;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport {Buffer} from 'buffer';\n\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport type {FeeCalculator} from './fee-calculator';\nimport {FeeCalculatorLayout} from './fee-calculator';\nimport {toBuffer} from './utils/to-buffer';\n\n/**\n * See https://github.com/solana-labs/solana/blob/0ea2843ec9cdc517572b8e62c959f41b55cf4453/sdk/src/nonce_state.rs#L29-L32\n *\n * @internal\n */\nconst NonceAccountLayout = BufferLayout.struct<\n  Readonly<{\n    authorizedPubkey: Uint8Array;\n    feeCalculator: Readonly<{\n      lamportsPerSignature: number;\n    }>;\n    nonce: Uint8Array;\n    state: number;\n    version: number;\n  }>\n>([\n  BufferLayout.u32('version'),\n  BufferLayout.u32('state'),\n  Layout.publicKey('authorizedPubkey'),\n  Layout.publicKey('nonce'),\n  BufferLayout.struct<Readonly<{lamportsPerSignature: number}>>(\n    [FeeCalculatorLayout],\n    'feeCalculator',\n  ),\n]);\n\nexport const NONCE_ACCOUNT_LENGTH = NonceAccountLayout.span;\n\n/**\n * A durable nonce is a 32 byte value encoded as a base58 string.\n */\nexport type DurableNonce = string;\n\ntype NonceAccountArgs = {\n  authorizedPubkey: PublicKey;\n  nonce: DurableNonce;\n  feeCalculator: FeeCalculator;\n};\n\n/**\n * NonceAccount class\n */\nexport class NonceAccount {\n  authorizedPubkey: PublicKey;\n  nonce: DurableNonce;\n  feeCalculator: FeeCalculator;\n\n  /**\n   * @internal\n   */\n  constructor(args: NonceAccountArgs) {\n    this.authorizedPubkey = args.authorizedPubkey;\n    this.nonce = args.nonce;\n    this.feeCalculator = args.feeCalculator;\n  }\n\n  /**\n   * Deserialize NonceAccount from the account data.\n   *\n   * @param buffer account data\n   * @return NonceAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): NonceAccount {\n    const nonceAccount = NonceAccountLayout.decode(toBuffer(buffer), 0);\n    return new NonceAccount({\n      authorizedPubkey: new PublicKey(nonceAccount.authorizedPubkey),\n      nonce: new PublicKey(nonceAccount.nonce).toString(),\n      feeCalculator: nonceAccount.feeCalculator,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport {blob, Layout} from '@solana/buffer-layout';\nimport {toBigIntLE, toBufferLE} from 'bigint-buffer';\n\ninterface EncodeDecode<T> {\n  decode(buffer: Buffer, offset?: number): T;\n  encode(src: T, buffer: Buffer, offset?: number): number;\n}\n\nconst encodeDecode = <T>(layout: Layout<T>): EncodeDecode<T> => {\n  const decode = layout.decode.bind(layout);\n  const encode = layout.encode.bind(layout);\n  return {decode, encode};\n};\n\nconst bigInt =\n  (length: number) =>\n  (property?: string): Layout<bigint> => {\n    const layout = blob(length, property);\n    const {encode, decode} = encodeDecode(layout);\n\n    const bigIntLayout = layout as Layout<unknown> as Layout<bigint>;\n\n    bigIntLayout.decode = (buffer: Buffer, offset: number) => {\n      const src = decode(buffer, offset);\n      return toBigIntLE(Buffer.from(src));\n    };\n\n    bigIntLayout.encode = (bigInt: bigint, buffer: Buffer, offset: number) => {\n      const src = toBufferLE(bigInt, length);\n      return encode(src, buffer, offset);\n    };\n\n    return bigIntLayout;\n  };\n\nexport const u64 = bigInt(8);\n\nexport const u128 = bigInt(16);\n\nexport const u192 = bigInt(24);\n\nexport const u256 = bigInt(32);\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {NONCE_ACCOUNT_LENGTH} from '../nonce-account';\nimport {PublicKey} from '../publickey';\nimport {SYSVAR_RECENT_BLOCKHASHES_PUBKEY, SYSVAR_RENT_PUBKEY} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\nimport {u64} from '../utils/bigint';\n\n/**\n * Create account system transaction params\n */\nexport type CreateAccountParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account */\n  newAccountPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Transfer system transaction params\n */\nexport type TransferParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n};\n\n/**\n * Assign system transaction params\n */\nexport type AssignParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Create account with seed system transaction params\n */\nexport type CreateAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account. Must be pre-calculated with PublicKey.createWithSeed() */\n  newAccountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the created account. Must be the same as the base key used to create `newAccountPubkey` */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the created account. Must be the same as the seed used to create `newAccountPubkey` */\n  seed: string;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Create nonce account system transaction params\n */\nexport type CreateNonceAccountParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n};\n\n/**\n * Create nonce account with seed system transaction params\n */\nexport type CreateNonceAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n  /** Base public key to use to derive the address of the nonce account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the nonce account */\n  seed: string;\n};\n\n/**\n * Initialize nonce account system instruction params\n */\nexport type InitializeNonceParams = {\n  /** Nonce account which will be initialized */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the initialized nonce account */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Advance nonce account system instruction params\n */\nexport type AdvanceNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Withdraw nonce account system transaction params\n */\nexport type WithdrawNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key of the account which will receive the withdrawn nonce account balance */\n  toPubkey: PublicKey;\n  /** Amount of lamports to withdraw from the nonce account */\n  lamports: number;\n};\n\n/**\n * Authorize nonce account system transaction params\n */\nexport type AuthorizeNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the current nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key to set as the new nonce authority */\n  newAuthorizedPubkey: PublicKey;\n};\n\n/**\n * Allocate account system transaction params\n */\nexport type AllocateParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Amount of space in bytes to allocate */\n  space: number;\n};\n\n/**\n * Allocate account with seed system transaction params\n */\nexport type AllocateWithSeedParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the allocated account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the allocated account */\n  seed: string;\n  /** Amount of space in bytes to allocate */\n  space: number;\n  /** Public key of the program to assign as the owner of the allocated account */\n  programId: PublicKey;\n};\n\n/**\n * Assign account with seed system transaction params\n */\nexport type AssignWithSeedParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the assigned account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the assigned account */\n  seed: string;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Transfer with seed system transaction params\n */\nexport type TransferWithSeedParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/** Decoded transfer system transaction instruction */\nexport type DecodedTransferInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n};\n\n/** Decoded transferWithSeed system transaction instruction */\nexport type DecodedTransferWithSeedInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/**\n * System Instruction class\n */\nexport class SystemInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a system instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): SystemInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: SystemInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(SYSTEM_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as SystemInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a SystemInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a create account system instruction and retrieve the instruction params.\n   */\n  static decodeCreateAccount(\n    instruction: TransactionInstruction,\n  ): CreateAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Create,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a transfer system instruction and retrieve the instruction params.\n   */\n  static decodeTransfer(\n    instruction: TransactionInstruction,\n  ): DecodedTransferInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Transfer,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a transfer with seed system instruction and retrieve the instruction params.\n   */\n  static decodeTransferWithSeed(\n    instruction: TransactionInstruction,\n  ): DecodedTransferWithSeedInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      basePubkey: instruction.keys[1].pubkey,\n      toPubkey: instruction.keys[2].pubkey,\n      lamports,\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an allocate system instruction and retrieve the instruction params.\n   */\n  static decodeAllocate(instruction: TransactionInstruction): AllocateParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {space} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Allocate,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      space,\n    };\n  }\n\n  /**\n   * Decode an allocate with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAllocateWithSeed(\n    instruction: TransactionInstruction,\n  ): AllocateWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign system instruction and retrieve the instruction params.\n   */\n  static decodeAssign(instruction: TransactionInstruction): AssignParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Assign,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAssignWithSeed(\n    instruction: TransactionInstruction,\n  ): AssignWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a create account with seed system instruction and retrieve the instruction params.\n   */\n  static decodeCreateWithSeed(\n    instruction: TransactionInstruction,\n  ): CreateAccountWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {base, seed, lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a nonce initialize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * Decode a nonce advance system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAdvance(\n    instruction: TransactionInstruction,\n  ): AdvanceNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * Decode a nonce withdraw system instruction and retrieve the instruction params.\n   */\n  static decodeNonceWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a nonce authorize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[1].pubkey,\n      newAuthorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(SystemProgram.programId)) {\n      throw new Error('invalid instruction; programId is not SystemProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid SystemInstructionType's\n */\nexport type SystemInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof SystemInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'AdvanceNonceAccount'\n  | 'Allocate'\n  | 'AllocateWithSeed'\n  | 'Assign'\n  | 'AssignWithSeed'\n  | 'AuthorizeNonceAccount'\n  | 'Create'\n  | 'CreateWithSeed'\n  | 'InitializeNonceAccount'\n  | 'Transfer'\n  | 'TransferWithSeed'\n  | 'WithdrawNonceAccount'\n  | 'UpgradeNonceAccount';\n\ntype SystemInstructionInputData = {\n  AdvanceNonceAccount: IInstructionInputData;\n  Allocate: IInstructionInputData & {\n    space: number;\n  };\n  AllocateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  Assign: IInstructionInputData & {\n    programId: Uint8Array;\n  };\n  AssignWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    seed: string;\n    programId: Uint8Array;\n  };\n  AuthorizeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Create: IInstructionInputData & {\n    lamports: number;\n    programId: Uint8Array;\n    space: number;\n  };\n  CreateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    lamports: number;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  InitializeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Transfer: IInstructionInputData & {\n    lamports: bigint;\n  };\n  TransferWithSeed: IInstructionInputData & {\n    lamports: bigint;\n    programId: Uint8Array;\n    seed: string;\n  };\n  WithdrawNonceAccount: IInstructionInputData & {\n    lamports: number;\n  };\n  UpgradeNonceAccount: IInstructionInputData;\n};\n\n/**\n * An enumeration of valid system InstructionType's\n * @internal\n */\nexport const SYSTEM_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in SystemInstructionType]: InstructionType<\n    SystemInstructionInputData[Instruction]\n  >;\n}>({\n  Create: {\n    index: 0,\n    layout: BufferLayout.struct<SystemInstructionInputData['Create']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Assign: {\n    index: 1,\n    layout: BufferLayout.struct<SystemInstructionInputData['Assign']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Transfer: {\n    index: 2,\n    layout: BufferLayout.struct<SystemInstructionInputData['Transfer']>([\n      BufferLayout.u32('instruction'),\n      u64('lamports'),\n    ]),\n  },\n  CreateWithSeed: {\n    index: 3,\n    layout: BufferLayout.struct<SystemInstructionInputData['CreateWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  AdvanceNonceAccount: {\n    index: 4,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AdvanceNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n  WithdrawNonceAccount: {\n    index: 5,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['WithdrawNonceAccount']\n    >([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')]),\n  },\n  InitializeNonceAccount: {\n    index: 6,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['InitializeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  AuthorizeNonceAccount: {\n    index: 7,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AuthorizeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  Allocate: {\n    index: 8,\n    layout: BufferLayout.struct<SystemInstructionInputData['Allocate']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('space'),\n    ]),\n  },\n  AllocateWithSeed: {\n    index: 9,\n    layout: BufferLayout.struct<SystemInstructionInputData['AllocateWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('base'),\n        Layout.rustString('seed'),\n        BufferLayout.ns64('space'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  AssignWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct<SystemInstructionInputData['AssignWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  TransferWithSeed: {\n    index: 11,\n    layout: BufferLayout.struct<SystemInstructionInputData['TransferWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        u64('lamports'),\n        Layout.rustString('seed'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  UpgradeNonceAccount: {\n    index: 12,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['UpgradeNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n});\n\n/**\n * Factory class for transactions to interact with the System program\n */\nexport class SystemProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the System program\n   */\n  static programId: PublicKey = new PublicKey(\n    '11111111111111111111111111111111',\n  );\n\n  /**\n   * Generate a transaction instruction that creates a new account\n   */\n  static createAccount(params: CreateAccountParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.Create;\n    const data = encodeData(type, {\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.newAccountPubkey, isSigner: true, isWritable: true},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that transfers lamports from one account to another\n   */\n  static transfer(\n    params: TransferParams | TransferWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed;\n      data = encodeData(type, {\n        lamports: BigInt(params.lamports),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Transfer;\n      data = encodeData(type, {lamports: BigInt(params.lamports)});\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that assigns an account to a program\n   */\n  static assign(\n    params: AssignParams | AssignWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Assign;\n      data = encodeData(type, {\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that creates a new account at\n   *   an address generated with `from`, a seed, and programId\n   */\n  static createAccountWithSeed(\n    params: CreateAccountWithSeedParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed;\n    const data = encodeData(type, {\n      base: toBuffer(params.basePubkey.toBuffer()),\n      seed: params.seed,\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n    let keys = [\n      {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n      {pubkey: params.newAccountPubkey, isSigner: false, isWritable: true},\n    ];\n    if (params.basePubkey != params.fromPubkey) {\n      keys.push({\n        pubkey: params.basePubkey,\n        isSigner: true,\n        isWritable: false,\n      });\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that creates a new Nonce account\n   */\n  static createNonceAccount(\n    params: CreateNonceAccountParams | CreateNonceAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    if ('basePubkey' in params && 'seed' in params) {\n      transaction.add(\n        SystemProgram.createAccountWithSeed({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          basePubkey: params.basePubkey,\n          seed: params.seed,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    } else {\n      transaction.add(\n        SystemProgram.createAccount({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    }\n\n    const initParams = {\n      noncePubkey: params.noncePubkey,\n      authorizedPubkey: params.authorizedPubkey,\n    };\n\n    transaction.add(this.nonceInitialize(initParams));\n    return transaction;\n  }\n\n  /**\n   * Generate an instruction to initialize a Nonce account\n   */\n  static nonceInitialize(\n    params: InitializeNonceParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.authorizedPubkey.toBuffer()),\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate an instruction to advance the nonce in a Nonce account\n   */\n  static nonceAdvance(params: AdvanceNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount;\n    const data = encodeData(type);\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction instruction that withdraws lamports from a Nonce account\n   */\n  static nonceWithdraw(params: WithdrawNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount;\n    const data = encodeData(type, {lamports: params.lamports});\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {\n          pubkey: SYSVAR_RENT_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that authorizes a new PublicKey as the authority\n   * on a Nonce account.\n   */\n  static nonceAuthorize(params: AuthorizeNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.newAuthorizedPubkey.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that allocates space in an account without funding\n   */\n  static allocate(\n    params: AllocateParams | AllocateWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        space: params.space,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Allocate;\n      data = encodeData(type, {\n        space: params.space,\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey} from './publickey';\nimport {Transaction, PACKET_DATA_SIZE} from './transaction';\nimport {MS_PER_SLOT} from './timing';\nimport {SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {sendAndConfirmTransaction} from './utils/send-and-confirm-transaction';\nimport {sleep} from './utils/sleep';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\nimport {SystemProgram} from './programs/system';\nimport {IInstructionInputData} from './instruction';\n\n// Keep program chunks under PACKET_DATA_SIZE, leaving enough room for the\n// rest of the Transaction fields\n//\n// TODO: replace 300 with a proper constant for the size of the other\n// Transaction fields\nconst CHUNK_SIZE = PACKET_DATA_SIZE - 300;\n\n/**\n * Program loader interface\n */\nexport class Loader {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Amount of program data placed in each load Transaction\n   */\n  static chunkSize: number = CHUNK_SIZE;\n\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return (\n      2 * // Every transaction requires two signatures (payer + program)\n      (Math.ceil(dataLength / Loader.chunkSize) +\n        1 + // Add one for Create transaction\n        1) // Add one for Finalize transaction\n    );\n  }\n\n  /**\n   * Loads a generic program\n   *\n   * @param connection The connection to use\n   * @param payer System account that pays to load the program\n   * @param program Account to load the program into\n   * @param programId Public key that identifies the loader\n   * @param data Program octets\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static async load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    programId: PublicKey,\n    data: Buffer | Uint8Array | Array<number>,\n  ): Promise<boolean> {\n    {\n      const balanceNeeded = await connection.getMinimumBalanceForRentExemption(\n        data.length,\n      );\n\n      // Fetch program account info to check if it has already been created\n      const programInfo = await connection.getAccountInfo(\n        program.publicKey,\n        'confirmed',\n      );\n\n      let transaction: Transaction | null = null;\n      if (programInfo !== null) {\n        if (programInfo.executable) {\n          console.error('Program load failed, account is already executable');\n          return false;\n        }\n\n        if (programInfo.data.length !== data.length) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.allocate({\n              accountPubkey: program.publicKey,\n              space: data.length,\n            }),\n          );\n        }\n\n        if (!programInfo.owner.equals(programId)) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.assign({\n              accountPubkey: program.publicKey,\n              programId,\n            }),\n          );\n        }\n\n        if (programInfo.lamports < balanceNeeded) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.transfer({\n              fromPubkey: payer.publicKey,\n              toPubkey: program.publicKey,\n              lamports: balanceNeeded - programInfo.lamports,\n            }),\n          );\n        }\n      } else {\n        transaction = new Transaction().add(\n          SystemProgram.createAccount({\n            fromPubkey: payer.publicKey,\n            newAccountPubkey: program.publicKey,\n            lamports: balanceNeeded > 0 ? balanceNeeded : 1,\n            space: data.length,\n            programId,\n          }),\n        );\n      }\n\n      // If the account is already created correctly, skip this step\n      // and proceed directly to loading instructions\n      if (transaction !== null) {\n        await sendAndConfirmTransaction(\n          connection,\n          transaction,\n          [payer, program],\n          {\n            commitment: 'confirmed',\n          },\n        );\n      }\n    }\n\n    const dataLayout = BufferLayout.struct<\n      Readonly<{\n        bytes: number[];\n        bytesLength: number;\n        bytesLengthPadding: number;\n        instruction: number;\n        offset: number;\n      }>\n    >([\n      BufferLayout.u32('instruction'),\n      BufferLayout.u32('offset'),\n      BufferLayout.u32('bytesLength'),\n      BufferLayout.u32('bytesLengthPadding'),\n      BufferLayout.seq(\n        BufferLayout.u8('byte'),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'bytes',\n      ),\n    ]);\n\n    const chunkSize = Loader.chunkSize;\n    let offset = 0;\n    let array = data;\n    let transactions = [];\n    while (array.length > 0) {\n      const bytes = array.slice(0, chunkSize);\n      const data = Buffer.alloc(chunkSize + 16);\n      dataLayout.encode(\n        {\n          instruction: 0, // Load instruction\n          offset,\n          bytes: bytes as number[],\n          bytesLength: 0,\n          bytesLengthPadding: 0,\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [{pubkey: program.publicKey, isSigner: true, isWritable: true}],\n        programId,\n        data,\n      });\n      transactions.push(\n        sendAndConfirmTransaction(connection, transaction, [payer, program], {\n          commitment: 'confirmed',\n        }),\n      );\n\n      // Delay between sends in an attempt to reduce rate limit errors\n      if (connection._rpcEndpoint.includes('solana.com')) {\n        const REQUESTS_PER_SECOND = 4;\n        await sleep(1000 / REQUESTS_PER_SECOND);\n      }\n\n      offset += chunkSize;\n      array = array.slice(chunkSize);\n    }\n    await Promise.all(transactions);\n\n    // Finalize the account loaded with program data for execution\n    {\n      const dataLayout = BufferLayout.struct<IInstructionInputData>([\n        BufferLayout.u32('instruction'),\n      ]);\n\n      const data = Buffer.alloc(dataLayout.span);\n      dataLayout.encode(\n        {\n          instruction: 1, // Finalize instruction\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [\n          {pubkey: program.publicKey, isSigner: true, isWritable: true},\n          {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        ],\n        programId,\n        data,\n      });\n      const deployCommitment = 'processed';\n      const finalizeSignature = await connection.sendTransaction(\n        transaction,\n        [payer, program],\n        {preflightCommitment: deployCommitment},\n      );\n      const {context, value} = await connection.confirmTransaction(\n        {\n          signature: finalizeSignature,\n          lastValidBlockHeight: transaction.lastValidBlockHeight!,\n          blockhash: transaction.recentBlockhash!,\n        },\n        deployCommitment,\n      );\n      if (value.err) {\n        throw new Error(\n          `Transaction ${finalizeSignature} failed (${JSON.stringify(value)})`,\n        );\n      }\n      // We prevent programs from being usable until the slot after their deployment.\n      // See https://github.com/solana-labs/solana/pull/29654\n      while (\n        true // eslint-disable-line no-constant-condition\n      ) {\n        try {\n          const currentSlot = await connection.getSlot({\n            commitment: deployCommitment,\n          });\n          if (currentSlot > context.slot) {\n            break;\n          }\n        } catch {\n          /* empty */\n        }\n        await new Promise(resolve =>\n          setTimeout(resolve, Math.round(MS_PER_SLOT / 2)),\n        );\n      }\n    }\n\n    // success\n    return true;\n  }\n}\n","import type {Buffer} from 'buffer';\n\nimport {PublicKey} from './publickey';\nimport {Loader} from './loader';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\n\nexport const BPF_LOADER_PROGRAM_ID = new PublicKey(\n  'BPFLoader2111111111111111111111111111111111',\n);\n\n/**\n * Factory class for transactions to interact with a program loader\n */\nexport class BpfLoader {\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return Loader.getMinNumSignatures(dataLength);\n  }\n\n  /**\n   * Load a SBF program\n   *\n   * @param connection The connection to use\n   * @param payer Account that will pay program loading fees\n   * @param program Account to load the program into\n   * @param elf The entire ELF containing the SBF program\n   * @param loaderProgramId The program id of the BPF loader to use\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    elf: Buffer | Uint8Array | Array<number>,\n    loaderProgramId: PublicKey,\n  ): Promise<boolean> {\n    return Loader.load(connection, payer, program, loaderProgramId, elf);\n  }\n}\n","var objToString = Object.prototype.toString;\nvar objKeys = Object.keys || function(obj) {\n\t\tvar keys = [];\n\t\tfor (var name in obj) {\n\t\t\tkeys.push(name);\n\t\t}\n\t\treturn keys;\n\t};\n\nfunction stringify(val, isArrayProp) {\n\tvar i, max, str, keys, key, propVal, toStr;\n\tif (val === true) {\n\t\treturn \"true\";\n\t}\n\tif (val === false) {\n\t\treturn \"false\";\n\t}\n\tswitch (typeof val) {\n\t\tcase \"object\":\n\t\t\tif (val === null) {\n\t\t\t\treturn null;\n\t\t\t} else if (val.toJSON && typeof val.toJSON === \"function\") {\n\t\t\t\treturn stringify(val.toJSON(), isArrayProp);\n\t\t\t} else {\n\t\t\t\ttoStr = objToString.call(val);\n\t\t\t\tif (toStr === \"[object Array]\") {\n\t\t\t\t\tstr = '[';\n\t\t\t\t\tmax = val.length - 1;\n\t\t\t\t\tfor(i = 0; i < max; i++) {\n\t\t\t\t\t\tstr += stringify(val[i], true) + ',';\n\t\t\t\t\t}\n\t\t\t\t\tif (max > -1) {\n\t\t\t\t\t\tstr += stringify(val[i], true);\n\t\t\t\t\t}\n\t\t\t\t\treturn str + ']';\n\t\t\t\t} else if (toStr === \"[object Object]\") {\n\t\t\t\t\t// only object is left\n\t\t\t\t\tkeys = objKeys(val).sort();\n\t\t\t\t\tmax = keys.length;\n\t\t\t\t\tstr = \"\";\n\t\t\t\t\ti = 0;\n\t\t\t\t\twhile (i < max) {\n\t\t\t\t\t\tkey = keys[i];\n\t\t\t\t\t\tpropVal = stringify(val[key], false);\n\t\t\t\t\t\tif (propVal !== undefined) {\n\t\t\t\t\t\t\tif (str) {\n\t\t\t\t\t\t\t\tstr += ',';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstr += JSON.stringify(key) + ':' + propVal;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\treturn '{' + str + '}';\n\t\t\t\t} else {\n\t\t\t\t\treturn JSON.stringify(val);\n\t\t\t\t}\n\t\t\t}\n\t\tcase \"function\":\n\t\tcase \"undefined\":\n\t\t\treturn isArrayProp ? null : undefined;\n\t\tcase \"string\":\n\t\t\treturn JSON.stringify(val);\n\t\tdefault:\n\t\t\treturn isFinite(val) ? val : null;\n\t}\n}\n\nmodule.exports = function(val) {\n\tvar returnVal = stringify(val, false);\n\tif (returnVal !== undefined) {\n\t\treturn ''+ returnVal;\n\t}\n};\n","const MINIMUM_SLOT_PER_EPOCH = 32;\n\n// Returns the number of trailing zeros in the binary representation of self.\nfunction trailingZeros(n: number) {\n  let trailingZeros = 0;\n  while (n > 1) {\n    n /= 2;\n    trailingZeros++;\n  }\n  return trailingZeros;\n}\n\n// Returns the smallest power of two greater than or equal to n\nfunction nextPowerOfTwo(n: number) {\n  if (n === 0) return 1;\n  n--;\n  n |= n >> 1;\n  n |= n >> 2;\n  n |= n >> 4;\n  n |= n >> 8;\n  n |= n >> 16;\n  n |= n >> 32;\n  return n + 1;\n}\n\n/**\n * Epoch schedule\n * (see https://docs.solana.com/terminology#epoch)\n * Can be retrieved with the {@link Connection.getEpochSchedule} method\n */\nexport class EpochSchedule {\n  /** The maximum number of slots in each epoch */\n  public slotsPerEpoch: number;\n  /** The number of slots before beginning of an epoch to calculate a leader schedule for that epoch */\n  public leaderScheduleSlotOffset: number;\n  /** Indicates whether epochs start short and grow */\n  public warmup: boolean;\n  /** The first epoch with `slotsPerEpoch` slots */\n  public firstNormalEpoch: number;\n  /** The first slot of `firstNormalEpoch` */\n  public firstNormalSlot: number;\n\n  constructor(\n    slotsPerEpoch: number,\n    leaderScheduleSlotOffset: number,\n    warmup: boolean,\n    firstNormalEpoch: number,\n    firstNormalSlot: number,\n  ) {\n    this.slotsPerEpoch = slotsPerEpoch;\n    this.leaderScheduleSlotOffset = leaderScheduleSlotOffset;\n    this.warmup = warmup;\n    this.firstNormalEpoch = firstNormalEpoch;\n    this.firstNormalSlot = firstNormalSlot;\n  }\n\n  getEpoch(slot: number): number {\n    return this.getEpochAndSlotIndex(slot)[0];\n  }\n\n  getEpochAndSlotIndex(slot: number): [number, number] {\n    if (slot < this.firstNormalSlot) {\n      const epoch =\n        trailingZeros(nextPowerOfTwo(slot + MINIMUM_SLOT_PER_EPOCH + 1)) -\n        trailingZeros(MINIMUM_SLOT_PER_EPOCH) -\n        1;\n\n      const epochLen = this.getSlotsInEpoch(epoch);\n      const slotIndex = slot - (epochLen - MINIMUM_SLOT_PER_EPOCH);\n      return [epoch, slotIndex];\n    } else {\n      const normalSlotIndex = slot - this.firstNormalSlot;\n      const normalEpochIndex = Math.floor(normalSlotIndex / this.slotsPerEpoch);\n      const epoch = this.firstNormalEpoch + normalEpochIndex;\n      const slotIndex = normalSlotIndex % this.slotsPerEpoch;\n      return [epoch, slotIndex];\n    }\n  }\n\n  getFirstSlotInEpoch(epoch: number): number {\n    if (epoch <= this.firstNormalEpoch) {\n      return (Math.pow(2, epoch) - 1) * MINIMUM_SLOT_PER_EPOCH;\n    } else {\n      return (\n        (epoch - this.firstNormalEpoch) * this.slotsPerEpoch +\n        this.firstNormalSlot\n      );\n    }\n  }\n\n  getLastSlotInEpoch(epoch: number): number {\n    return this.getFirstSlotInEpoch(epoch) + this.getSlotsInEpoch(epoch) - 1;\n  }\n\n  getSlotsInEpoch(epoch: number) {\n    if (epoch < this.firstNormalEpoch) {\n      return Math.pow(2, epoch + trailingZeros(MINIMUM_SLOT_PER_EPOCH));\n    } else {\n      return this.slotsPerEpoch;\n    }\n  }\n}\n","export class SendTransactionError extends Error {\n  logs: string[] | undefined;\n\n  constructor(message: string, logs?: string[]) {\n    super(message);\n\n    this.logs = logs;\n  }\n}\n\n// Keep in sync with client/src/rpc_custom_errors.rs\n// Typescript `enums` thwart tree-shaking. See https://bargsten.org/jsts/enums/\nexport const SolanaJSONRPCErrorCode = {\n  JSON_RPC_SERVER_ERROR_BLOCK_CLEANED_UP: -32001,\n  JSON_RPC_SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE: -32002,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE: -32003,\n  JSON_RPC_SERVER_ERROR_BLOCK_NOT_AVAILABLE: -32004,\n  JSON_RPC_SERVER_ERROR_NODE_UNHEALTHY: -32005,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE: -32006,\n  JSON_RPC_SERVER_ERROR_SLOT_SKIPPED: -32007,\n  JSON_RPC_SERVER_ERROR_NO_SNAPSHOT: -32008,\n  JSON_RPC_SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED: -32009,\n  JSON_RPC_SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX: -32010,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE: -32011,\n  JSON_RPC_SCAN_ERROR: -32012,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH: -32013,\n  JSON_RPC_SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET: -32014,\n  JSON_RPC_SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION: -32015,\n  JSON_RPC_SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED: -32016,\n} as const;\nexport type SolanaJSONRPCErrorCodeEnum =\n  (typeof SolanaJSONRPCErrorCode)[keyof typeof SolanaJSONRPCErrorCode];\n\nexport class SolanaJSONRPCError extends Error {\n  code: SolanaJSONRPCErrorCodeEnum | unknown;\n  data?: any;\n  constructor(\n    {\n      code,\n      message,\n      data,\n    }: Readonly<{code: unknown; message: string; data?: any}>,\n    customMessage?: string,\n  ) {\n    super(customMessage != null ? `${customMessage}: ${message}` : message);\n    this.code = code;\n    this.data = data;\n    this.name = 'SolanaJSONRPCError';\n  }\n}\n","export const Headers = globalThis.Headers;\nexport const Request = globalThis.Request;\nexport const Response = globalThis.Response;\nexport default globalThis.fetch;\n","import RpcWebSocketCommonClient from 'rpc-websockets/dist/lib/client';\nimport RpcWebSocketBrowserFactory from 'rpc-websockets/dist/lib/client/websocket.browser';\nimport {\n  ICommonWebSocket,\n  IWSClientAdditionalOptions,\n  NodeWebSocketType,\n  NodeWebSocketTypeOptions,\n} from 'rpc-websockets/dist/lib/client/client.types';\n\nimport createRpc from './rpc-websocket-factory';\n\ninterface IHasReadyState {\n  readyState: WebSocket['readyState'];\n}\n\nexport default class RpcWebSocketClient extends RpcWebSocketCommonClient {\n  private underlyingSocket: IHasReadyState | undefined;\n  constructor(\n    address?: string,\n    options?: IWSClientAdditionalOptions & NodeWebSocketTypeOptions,\n    generate_request_id?: (\n      method: string,\n      params: object | Array<any>,\n    ) => number,\n  ) {\n    const webSocketFactory = (url: string) => {\n      const rpc = createRpc(url, {\n        autoconnect: true,\n        max_reconnects: 5,\n        reconnect: true,\n        reconnect_interval: 1000,\n        ...options,\n      });\n      if ('socket' in rpc) {\n        this.underlyingSocket = (\n          rpc as ReturnType<typeof RpcWebSocketBrowserFactory>\n        ).socket;\n      } else {\n        this.underlyingSocket = rpc as NodeWebSocketType;\n      }\n      return rpc as ICommonWebSocket;\n    };\n    super(webSocketFactory, address, options, generate_request_id);\n  }\n  call(\n    ...args: Parameters<RpcWebSocketCommonClient['call']>\n  ): ReturnType<RpcWebSocketCommonClient['call']> {\n    const readyState = this.underlyingSocket?.readyState;\n    if (readyState === 1 /* WebSocket.OPEN */) {\n      return super.call(...args);\n    }\n    return Promise.reject(\n      new Error(\n        'Tried to call a JSON-RPC method `' +\n          args[0] +\n          '` but the socket was not `CONNECTING` or `OPEN` (`readyState` was ' +\n          readyState +\n          ')',\n      ),\n    );\n  }\n  notify(\n    ...args: Parameters<RpcWebSocketCommonClient['notify']>\n  ): ReturnType<RpcWebSocketCommonClient['notify']> {\n    const readyState = this.underlyingSocket?.readyState;\n    if (readyState === 1 /* WebSocket.OPEN */) {\n      return super.notify(...args);\n    }\n    return Promise.reject(\n      new Error(\n        'Tried to send a JSON-RPC notification `' +\n          args[0] +\n          '` but the socket was not `CONNECTING` or `OPEN` (`readyState` was ' +\n          readyState +\n          ')',\n      ),\n    );\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nexport interface IAccountStateData {\n  readonly typeIndex: number;\n}\n\n/**\n * @internal\n */\nexport type AccountType<TInputData extends IAccountStateData> = {\n  /** The account type index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<TInputData>;\n};\n\n/**\n * Decode account data buffer using an AccountType\n * @internal\n */\nexport function decodeData<TAccountStateData extends IAccountStateData>(\n  type: AccountType<TAccountStateData>,\n  data: Uint8Array,\n): TAccountStateData {\n  let decoded: TAccountStateData;\n  try {\n    decoded = type.layout.decode(data);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (decoded.typeIndex !== type.index) {\n    throw new Error(\n      `invalid account data; account type mismatch ${decoded.typeIndex} != ${type.index}`,\n    );\n  }\n\n  return decoded;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport assert from '../../utils/assert';\nimport * as Layout from '../../layout';\nimport {PublicKey} from '../../publickey';\nimport {u64} from '../../utils/bigint';\nimport {decodeData} from '../../account-data';\n\nexport type AddressLookupTableState = {\n  deactivationSlot: bigint;\n  lastExtendedSlot: number;\n  lastExtendedSlotStartIndex: number;\n  authority?: PublicKey;\n  addresses: Array<PublicKey>;\n};\n\nexport type AddressLookupTableAccountArgs = {\n  key: PublicKey;\n  state: AddressLookupTableState;\n};\n\n/// The serialized size of lookup table metadata\nconst LOOKUP_TABLE_META_SIZE = 56;\n\nexport class AddressLookupTableAccount {\n  key: PublicKey;\n  state: AddressLookupTableState;\n\n  constructor(args: AddressLookupTableAccountArgs) {\n    this.key = args.key;\n    this.state = args.state;\n  }\n\n  isActive(): boolean {\n    const U64_MAX = BigInt('0xffffffffffffffff');\n    return this.state.deactivationSlot === U64_MAX;\n  }\n\n  static deserialize(accountData: Uint8Array): AddressLookupTableState {\n    const meta = decodeData(LookupTableMetaLayout, accountData);\n\n    const serializedAddressesLen = accountData.length - LOOKUP_TABLE_META_SIZE;\n    assert(serializedAddressesLen >= 0, 'lookup table is invalid');\n    assert(serializedAddressesLen % 32 === 0, 'lookup table is invalid');\n\n    const numSerializedAddresses = serializedAddressesLen / 32;\n    const {addresses} = BufferLayout.struct<{addresses: Array<Uint8Array>}>([\n      BufferLayout.seq(Layout.publicKey(), numSerializedAddresses, 'addresses'),\n    ]).decode(accountData.slice(LOOKUP_TABLE_META_SIZE));\n\n    return {\n      deactivationSlot: meta.deactivationSlot,\n      lastExtendedSlot: meta.lastExtendedSlot,\n      lastExtendedSlotStartIndex: meta.lastExtendedStartIndex,\n      authority:\n        meta.authority.length !== 0\n          ? new PublicKey(meta.authority[0])\n          : undefined,\n      addresses: addresses.map(address => new PublicKey(address)),\n    };\n  }\n}\n\nconst LookupTableMetaLayout = {\n  index: 1,\n  layout: BufferLayout.struct<{\n    typeIndex: number;\n    deactivationSlot: bigint;\n    lastExtendedSlot: number;\n    lastExtendedStartIndex: number;\n    authority: Array<Uint8Array>;\n  }>([\n    BufferLayout.u32('typeIndex'),\n    u64('deactivationSlot'),\n    BufferLayout.nu64('lastExtendedSlot'),\n    BufferLayout.u8('lastExtendedStartIndex'),\n    BufferLayout.u8(), // option\n    BufferLayout.seq(\n      Layout.publicKey(),\n      BufferLayout.offset(BufferLayout.u8(), -1),\n      'authority',\n    ),\n  ]),\n};\n","const URL_RE = /^[^:]+:\\/\\/([^:[]+|\\[[^\\]]+\\])(:\\d+)?(.*)/i;\n\nexport function makeWebsocketUrl(endpoint: string) {\n  const matches = endpoint.match(URL_RE);\n  if (matches == null) {\n    throw TypeError(`Failed to validate endpoint URL \\`${endpoint}\\``);\n  }\n  const [\n    _, // eslint-disable-line @typescript-eslint/no-unused-vars\n    hostish,\n    portWithColon,\n    rest,\n  ] = matches;\n  const protocol = endpoint.startsWith('https:') ? 'wss:' : 'ws:';\n  const startPort =\n    portWithColon == null ? null : parseInt(portWithColon.slice(1), 10);\n  const websocketPort =\n    // Only shift the port by +1 as a convention for ws(s) only if given endpoint\n    // is explictly specifying the endpoint port (HTTP-based RPC), assuming\n    // we're directly trying to connect to solana-validator's ws listening port.\n    // When the endpoint omits the port, we're connecting to the protocol\n    // default ports: http(80) or https(443) and it's assumed we're behind a reverse\n    // proxy which manages WebSocket upgrade and backend port redirection.\n    startPort == null ? '' : `:${startPort + 1}`;\n  return `${protocol}//${hostish}${websocketPort}${rest}`;\n}\n","import HttpKeepAliveAgent, {\n  HttpsAgent as HttpsKeepAliveAgent,\n} from 'agentkeepalive';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n// @ts-ignore\nimport fastStableStringify from 'fast-stable-stringify';\nimport type {Agent as NodeHttpAgent} from 'http';\nimport {Agent as NodeHttpsAgent} from 'https';\nimport {\n  type as pick,\n  number,\n  string,\n  array,\n  boolean,\n  literal,\n  record,\n  union,\n  optional,\n  nullable,\n  coerce,\n  instance,\n  create,\n  tuple,\n  unknown,\n  any,\n} from 'superstruct';\nimport type {Struct} from 'superstruct';\nimport RpcClient from 'jayson/lib/client/browser';\nimport {JSONRPCError} from 'jayson';\n\nimport {EpochSchedule} from './epoch-schedule';\nimport {SendTransactionError, SolanaJSONRPCError} from './errors';\nimport fetchImpl from './fetch-impl';\nimport {DurableNonce, NonceAccount} from './nonce-account';\nimport {PublicKey} from './publickey';\nimport {Signer} from './keypair';\nimport RpcWebSocketClient from './rpc-websocket';\nimport {MS_PER_SLOT} from './timing';\nimport {\n  Transaction,\n  TransactionStatus,\n  TransactionVersion,\n  VersionedTransaction,\n} from './transaction';\nimport {Message, MessageHeader, MessageV0, VersionedMessage} from './message';\nimport {AddressLookupTableAccount} from './programs/address-lookup-table/state';\nimport assert from './utils/assert';\nimport {sleep} from './utils/sleep';\nimport {toBuffer} from './utils/to-buffer';\nimport {\n  TransactionExpiredBlockheightExceededError,\n  TransactionExpiredNonceInvalidError,\n  TransactionExpiredTimeoutError,\n} from './transaction/expiry-custom-errors';\nimport {makeWebsocketUrl} from './utils/makeWebsocketUrl';\nimport type {Blockhash} from './blockhash';\nimport type {FeeCalculator} from './fee-calculator';\nimport type {TransactionSignature} from './transaction';\nimport type {CompiledInstruction} from './message';\n\nconst PublicKeyFromString = coerce(\n  instance(PublicKey),\n  string(),\n  value => new PublicKey(value),\n);\n\nconst RawAccountDataResult = tuple([string(), literal('base64')]);\n\nconst BufferFromRawAccountData = coerce(\n  instance(Buffer),\n  RawAccountDataResult,\n  value => Buffer.from(value[0], 'base64'),\n);\n\n/**\n * Attempt to use a recent blockhash for up to 30 seconds\n * @internal\n */\nexport const BLOCKHASH_CACHE_TIMEOUT_MS = 30 * 1000;\n\n/**\n * HACK.\n * Copied from rpc-websockets/dist/lib/client.\n * Otherwise, `yarn build` fails with:\n * https://gist.github.com/steveluscher/c057eca81d479ef705cdb53162f9971d\n */\ninterface IWSRequestParams {\n  [x: string]: any;\n  [x: number]: any;\n}\n\ntype ClientSubscriptionId = number;\n/** @internal */ type ServerSubscriptionId = number;\n/** @internal */ type SubscriptionConfigHash = string;\n/** @internal */ type SubscriptionDisposeFn = () => Promise<void>;\n/** @internal */ type SubscriptionStateChangeCallback = (\n  nextState: StatefulSubscription['state'],\n) => void;\n/** @internal */ type SubscriptionStateChangeDisposeFn = () => void;\n/**\n * @internal\n * Every subscription contains the args used to open the subscription with\n * the server, and a list of callers interested in notifications.\n */\ntype BaseSubscription<TMethod = SubscriptionConfig['method']> = Readonly<{\n  args: IWSRequestParams;\n  callbacks: Set<Extract<SubscriptionConfig, {method: TMethod}>['callback']>;\n}>;\n/**\n * @internal\n * A subscription may be in various states of connectedness. Only when it is\n * fully connected will it have a server subscription id associated with it.\n * This id can be returned to the server to unsubscribe the client entirely.\n */\ntype StatefulSubscription = Readonly<\n  // New subscriptions that have not yet been\n  // sent to the server start in this state.\n  | {\n      state: 'pending';\n    }\n  // These subscriptions have been sent to the server\n  // and are waiting for the server to acknowledge them.\n  | {\n      state: 'subscribing';\n    }\n  // These subscriptions have been acknowledged by the\n  // server and have been assigned server subscription ids.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'subscribed';\n    }\n  // These subscriptions are intended to be torn down and\n  // are waiting on an acknowledgement from the server.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribing';\n    }\n  // The request to tear down these subscriptions has been\n  // acknowledged by the server. The `serverSubscriptionId`\n  // is the id of the now-dead subscription.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribed';\n    }\n>;\n/**\n * A type that encapsulates a subscription's RPC method\n * names and notification (callback) signature.\n */\ntype SubscriptionConfig = Readonly<\n  | {\n      callback: AccountChangeCallback;\n      method: 'accountSubscribe';\n      unsubscribeMethod: 'accountUnsubscribe';\n    }\n  | {\n      callback: LogsCallback;\n      method: 'logsSubscribe';\n      unsubscribeMethod: 'logsUnsubscribe';\n    }\n  | {\n      callback: ProgramAccountChangeCallback;\n      method: 'programSubscribe';\n      unsubscribeMethod: 'programUnsubscribe';\n    }\n  | {\n      callback: RootChangeCallback;\n      method: 'rootSubscribe';\n      unsubscribeMethod: 'rootUnsubscribe';\n    }\n  | {\n      callback: SignatureSubscriptionCallback;\n      method: 'signatureSubscribe';\n      unsubscribeMethod: 'signatureUnsubscribe';\n    }\n  | {\n      callback: SlotChangeCallback;\n      method: 'slotSubscribe';\n      unsubscribeMethod: 'slotUnsubscribe';\n    }\n  | {\n      callback: SlotUpdateCallback;\n      method: 'slotsUpdatesSubscribe';\n      unsubscribeMethod: 'slotsUpdatesUnsubscribe';\n    }\n>;\n/**\n * @internal\n * Utility type that keeps tagged unions intact while omitting properties.\n */\ntype DistributiveOmit<T, K extends PropertyKey> = T extends unknown\n  ? Omit<T, K>\n  : never;\n/**\n * @internal\n * This type represents a single subscribable 'topic.' It's made up of:\n *\n * - The args used to open the subscription with the server,\n * - The state of the subscription, in terms of its connectedness, and\n * - The set of callbacks to call when the server publishes notifications\n *\n * This record gets indexed by `SubscriptionConfigHash` and is used to\n * set up subscriptions, fan out notifications, and track subscription state.\n */\ntype Subscription = BaseSubscription &\n  StatefulSubscription &\n  DistributiveOmit<SubscriptionConfig, 'callback'>;\n\ntype RpcRequest = (methodName: string, args: Array<any>) => Promise<any>;\n\ntype RpcBatchRequest = (requests: RpcParams[]) => Promise<any[]>;\n\n/**\n * @internal\n */\nexport type RpcParams = {\n  methodName: string;\n  args: Array<any>;\n};\n\nexport type TokenAccountsFilter =\n  | {\n      mint: PublicKey;\n    }\n  | {\n      programId: PublicKey;\n    };\n\n/**\n * Extra contextual information for RPC responses\n */\nexport type Context = {\n  slot: number;\n};\n\n/**\n * Options for sending transactions\n */\nexport type SendOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Options for confirming transactions\n */\nexport type ConfirmOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** desired commitment level */\n  commitment?: Commitment;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Options for getConfirmedSignaturesForAddress2\n */\nexport type ConfirmedSignaturesForAddress2Options = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n};\n\n/**\n * Options for getSignaturesForAddress\n */\nexport type SignaturesForAddressOptions = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * RPC Response with extra contextual information\n */\nexport type RpcResponseAndContext<T> = {\n  /** response context */\n  context: Context;\n  /** response value */\n  value: T;\n};\n\nexport type BlockhashWithExpiryBlockHeight = Readonly<{\n  blockhash: Blockhash;\n  lastValidBlockHeight: number;\n}>;\n\n/**\n * A strategy for confirming transactions that uses the last valid\n * block height for a given blockhash to check for transaction expiration.\n */\nexport type BlockheightBasedTransactionConfirmationStrategy =\n  BaseTransactionConfirmationStrategy & BlockhashWithExpiryBlockHeight;\n\n/**\n * A strategy for confirming durable nonce transactions.\n */\nexport type DurableNonceTransactionConfirmationStrategy =\n  BaseTransactionConfirmationStrategy & {\n    /**\n     * The lowest slot at which to fetch the nonce value from the\n     * nonce account. This should be no lower than the slot at\n     * which the last-known value of the nonce was fetched.\n     */\n    minContextSlot: number;\n    /**\n     * The account where the current value of the nonce is stored.\n     */\n    nonceAccountPubkey: PublicKey;\n    /**\n     * The nonce value that was used to sign the transaction\n     * for which confirmation is being sought.\n     */\n    nonceValue: DurableNonce;\n  };\n\n/**\n * Properties shared by all transaction confirmation strategies\n */\nexport type BaseTransactionConfirmationStrategy = Readonly<{\n  /** A signal that, when aborted, cancels any outstanding transaction confirmation operations */\n  abortSignal?: AbortSignal;\n  signature: TransactionSignature;\n}>;\n\n/**\n * This type represents all transaction confirmation strategies\n */\nexport type TransactionConfirmationStrategy =\n  | BlockheightBasedTransactionConfirmationStrategy\n  | DurableNonceTransactionConfirmationStrategy;\n\n/* @internal */\nfunction assertEndpointUrl(putativeUrl: string) {\n  if (/^https?:/.test(putativeUrl) === false) {\n    throw new TypeError('Endpoint URL must start with `http:` or `https:`.');\n  }\n  return putativeUrl;\n}\n\n/** @internal */\nfunction extractCommitmentFromConfig<TConfig>(\n  commitmentOrConfig?: Commitment | ({commitment?: Commitment} & TConfig),\n) {\n  let commitment: Commitment | undefined;\n  let config: Omit<TConfig, 'commitment'> | undefined;\n  if (typeof commitmentOrConfig === 'string') {\n    commitment = commitmentOrConfig;\n  } else if (commitmentOrConfig) {\n    const {commitment: specifiedCommitment, ...specifiedConfig} =\n      commitmentOrConfig;\n    commitment = specifiedCommitment;\n    config = specifiedConfig;\n  }\n  return {commitment, config};\n}\n\n/**\n * @internal\n */\nfunction createRpcResult<T, U>(result: Struct<T, U>) {\n  return union([\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      result,\n    }),\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      error: pick({\n        code: unknown(),\n        message: string(),\n        data: optional(any()),\n      }),\n    }),\n  ]);\n}\n\nconst UnknownRpcResult = createRpcResult(unknown());\n\n/**\n * @internal\n */\nfunction jsonRpcResult<T, U>(schema: Struct<T, U>) {\n  return coerce(createRpcResult(schema), UnknownRpcResult, value => {\n    if ('error' in value) {\n      return value;\n    } else {\n      return {\n        ...value,\n        result: create(value.result, schema),\n      };\n    }\n  });\n}\n\n/**\n * @internal\n */\nfunction jsonRpcResultAndContext<T, U>(value: Struct<T, U>) {\n  return jsonRpcResult(\n    pick({\n      context: pick({\n        slot: number(),\n      }),\n      value,\n    }),\n  );\n}\n\n/**\n * @internal\n */\nfunction notificationResultAndContext<T, U>(value: Struct<T, U>) {\n  return pick({\n    context: pick({\n      slot: number(),\n    }),\n    value,\n  });\n}\n\n/**\n * @internal\n */\nfunction versionedMessageFromResponse(\n  version: TransactionVersion | undefined,\n  response: MessageResponse,\n): VersionedMessage {\n  if (version === 0) {\n    return new MessageV0({\n      header: response.header,\n      staticAccountKeys: response.accountKeys.map(\n        accountKey => new PublicKey(accountKey),\n      ),\n      recentBlockhash: response.recentBlockhash,\n      compiledInstructions: response.instructions.map(ix => ({\n        programIdIndex: ix.programIdIndex,\n        accountKeyIndexes: ix.accounts,\n        data: bs58.decode(ix.data),\n      })),\n      addressTableLookups: response.addressTableLookups!,\n    });\n  } else {\n    return new Message(response);\n  }\n}\n\n/**\n * The level of commitment desired when querying state\n * <pre>\n *   'processed': Query the most recent block which has reached 1 confirmation by the connected node\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Commitment =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized'\n  | 'recent' // Deprecated as of v1.5.5\n  | 'single' // Deprecated as of v1.5.5\n  | 'singleGossip' // Deprecated as of v1.5.5\n  | 'root' // Deprecated as of v1.5.5\n  | 'max'; // Deprecated as of v1.5.5\n\n/**\n * A subset of Commitment levels, which are at least optimistically confirmed\n * <pre>\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Finality = 'confirmed' | 'finalized';\n\n/**\n * Filter for largest accounts query\n * <pre>\n *   'circulating':    Return the largest accounts that are part of the circulating supply\n *   'nonCirculating': Return the largest accounts that are not part of the circulating supply\n * </pre>\n */\nexport type LargestAccountsFilter = 'circulating' | 'nonCirculating';\n\n/**\n * Configuration object for changing `getAccountInfo` query behavior\n */\nexport type GetAccountInfoConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n};\n\n/**\n * Configuration object for changing `getBalance` query behavior\n */\nexport type GetBalanceConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\nexport type GetBlockConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /**\n   * Whether to populate the rewards array. If parameter not provided, the default includes rewards.\n   */\n  rewards?: boolean;\n  /**\n   * Level of transaction detail to return, either \"full\", \"accounts\", \"signatures\", or \"none\". If\n   * parameter not provided, the default detail level is \"full\". If \"accounts\" are requested,\n   * transaction details only include signatures and an annotated list of accounts in each\n   * transaction. Transaction metadata is limited to only: fee, err, pre_balances, post_balances,\n   * pre_token_balances, and post_token_balances.\n   */\n  transactionDetails?: 'accounts' | 'full' | 'none' | 'signatures';\n};\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\nexport type GetVersionedBlockConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /** The max transaction version to return in responses. If the requested transaction is a higher version, an error will be returned */\n  maxSupportedTransactionVersion?: number;\n  /**\n   * Whether to populate the rewards array. If parameter not provided, the default includes rewards.\n   */\n  rewards?: boolean;\n  /**\n   * Level of transaction detail to return, either \"full\", \"accounts\", \"signatures\", or \"none\". If\n   * parameter not provided, the default detail level is \"full\". If \"accounts\" are requested,\n   * transaction details only include signatures and an annotated list of accounts in each\n   * transaction. Transaction metadata is limited to only: fee, err, pre_balances, post_balances,\n   * pre_token_balances, and post_token_balances.\n   */\n  transactionDetails?: 'accounts' | 'full' | 'none' | 'signatures';\n};\n\n/**\n * Configuration object for changing `getStakeMinimumDelegation` query behavior\n */\nexport type GetStakeMinimumDelegationConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n};\n\n/**\n * Configuration object for changing `getBlockHeight` query behavior\n */\nexport type GetBlockHeightConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getEpochInfo` query behavior\n */\nexport type GetEpochInfoConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getInflationReward` query behavior\n */\nexport type GetInflationRewardConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** An epoch for which the reward occurs. If omitted, the previous epoch will be used */\n  epoch?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getLatestBlockhash` query behavior\n */\nexport type GetLatestBlockhashConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `isBlockhashValid` query behavior\n */\nexport type IsBlockhashValidConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getSlot` query behavior\n */\nexport type GetSlotConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getSlotLeader` query behavior\n */\nexport type GetSlotLeaderConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\nexport type GetTransactionConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n};\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\nexport type GetVersionedTransactionConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /** The max transaction version to return in responses. If the requested transaction is a higher version, an error will be returned */\n  maxSupportedTransactionVersion?: number;\n};\n\n/**\n * Configuration object for changing `getLargestAccounts` query behavior\n */\nexport type GetLargestAccountsConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Filter largest accounts by whether they are part of the circulating supply */\n  filter?: LargestAccountsFilter;\n};\n\n/**\n * Configuration object for changing `getSupply` request behavior\n */\nexport type GetSupplyConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Exclude non circulating accounts list from response */\n  excludeNonCirculatingAccountsList?: boolean;\n};\n\n/**\n * Configuration object for changing query behavior\n */\nexport type SignatureStatusConfig = {\n  /** enable searching status history, not needed for recent transactions */\n  searchTransactionHistory: boolean;\n};\n\n/**\n * Information describing a cluster node\n */\nexport type ContactInfo = {\n  /** Identity public key of the node */\n  pubkey: string;\n  /** Gossip network address for the node */\n  gossip: string | null;\n  /** TPU network address for the node (null if not available) */\n  tpu: string | null;\n  /** JSON RPC network address for the node (null if not available) */\n  rpc: string | null;\n  /** Software version of the node (null if not available) */\n  version: string | null;\n};\n\n/**\n * Information describing a vote account\n */\nexport type VoteAccountInfo = {\n  /** Public key of the vote account */\n  votePubkey: string;\n  /** Identity public key of the node voting with this account */\n  nodePubkey: string;\n  /** The stake, in lamports, delegated to this vote account and activated */\n  activatedStake: number;\n  /** Whether the vote account is staked for this epoch */\n  epochVoteAccount: boolean;\n  /** Recent epoch voting credit history for this voter */\n  epochCredits: Array<[number, number, number]>;\n  /** A percentage (0-100) of rewards payout owed to the voter */\n  commission: number;\n  /** Most recent slot voted on by this vote account */\n  lastVote: number;\n};\n\n/**\n * A collection of cluster vote accounts\n */\nexport type VoteAccountStatus = {\n  /** Active vote accounts */\n  current: Array<VoteAccountInfo>;\n  /** Inactive vote accounts */\n  delinquent: Array<VoteAccountInfo>;\n};\n\n/**\n * Network Inflation\n * (see https://docs.solana.com/implemented-proposals/ed_overview)\n */\nexport type InflationGovernor = {\n  foundation: number;\n  foundationTerm: number;\n  initial: number;\n  taper: number;\n  terminal: number;\n};\n\nconst GetInflationGovernorResult = pick({\n  foundation: number(),\n  foundationTerm: number(),\n  initial: number(),\n  taper: number(),\n  terminal: number(),\n});\n\n/**\n * The inflation reward for an epoch\n */\nexport type InflationReward = {\n  /** epoch for which the reward occurs */\n  epoch: number;\n  /** the slot in which the rewards are effective */\n  effectiveSlot: number;\n  /** reward amount in lamports */\n  amount: number;\n  /** post balance of the account in lamports */\n  postBalance: number;\n  /** vote account commission when the reward was credited */\n  commission?: number | null;\n};\n\n/**\n * Expected JSON RPC response for the \"getInflationReward\" message\n */\nconst GetInflationRewardResult = jsonRpcResult(\n  array(\n    nullable(\n      pick({\n        epoch: number(),\n        effectiveSlot: number(),\n        amount: number(),\n        postBalance: number(),\n        commission: optional(nullable(number())),\n      }),\n    ),\n  ),\n);\n\nexport type RecentPrioritizationFees = {\n  /** slot in which the fee was observed */\n  slot: number;\n  /** the per-compute-unit fee paid by at least one successfully landed transaction, specified in increments of 0.000001 lamports*/\n  prioritizationFee: number;\n};\n\n/**\n * Configuration object for changing `getRecentPrioritizationFees` query behavior\n */\nexport type GetRecentPrioritizationFeesConfig = {\n  /**\n   * If this parameter is provided, the response will reflect a fee to land a transaction locking\n   * all of the provided accounts as writable.\n   */\n  lockedWritableAccounts?: PublicKey[];\n};\n\n/**\n * Expected JSON RPC response for the \"getRecentPrioritizationFees\" message\n */\nconst GetRecentPrioritizationFeesResult = array(\n  pick({\n    slot: number(),\n    prioritizationFee: number(),\n  }),\n);\n\nexport type InflationRate = {\n  /** total inflation */\n  total: number;\n  /** inflation allocated to validators */\n  validator: number;\n  /** inflation allocated to the foundation */\n  foundation: number;\n  /** epoch for which these values are valid */\n  epoch: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getInflationRate\" message\n */\nconst GetInflationRateResult = pick({\n  total: number(),\n  validator: number(),\n  foundation: number(),\n  epoch: number(),\n});\n\n/**\n * Information about the current epoch\n */\nexport type EpochInfo = {\n  epoch: number;\n  slotIndex: number;\n  slotsInEpoch: number;\n  absoluteSlot: number;\n  blockHeight?: number;\n  transactionCount?: number;\n};\n\nconst GetEpochInfoResult = pick({\n  epoch: number(),\n  slotIndex: number(),\n  slotsInEpoch: number(),\n  absoluteSlot: number(),\n  blockHeight: optional(number()),\n  transactionCount: optional(number()),\n});\n\nconst GetEpochScheduleResult = pick({\n  slotsPerEpoch: number(),\n  leaderScheduleSlotOffset: number(),\n  warmup: boolean(),\n  firstNormalEpoch: number(),\n  firstNormalSlot: number(),\n});\n\n/**\n * Leader schedule\n * (see https://docs.solana.com/terminology#leader-schedule)\n */\nexport type LeaderSchedule = {\n  [address: string]: number[];\n};\n\nconst GetLeaderScheduleResult = record(string(), array(number()));\n\n/**\n * Transaction error or null\n */\nconst TransactionErrorResult = nullable(union([pick({}), string()]));\n\n/**\n * Signature status for a transaction\n */\nconst SignatureStatusResult = pick({\n  err: TransactionErrorResult,\n});\n\n/**\n * Transaction signature received notification\n */\nconst SignatureReceivedResult = literal('receivedSignature');\n\n/**\n * Version info for a node\n */\nexport type Version = {\n  /** Version of solana-core */\n  'solana-core': string;\n  'feature-set'?: number;\n};\n\nconst VersionResult = pick({\n  'solana-core': string(),\n  'feature-set': optional(number()),\n});\n\nexport type SimulatedTransactionAccountInfo = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: string;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: string[];\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\nexport type TransactionReturnDataEncoding = 'base64';\n\nexport type TransactionReturnData = {\n  programId: string;\n  data: [string, TransactionReturnDataEncoding];\n};\n\nexport type SimulateTransactionConfig = {\n  /** Optional parameter used to enable signature verification before simulation */\n  sigVerify?: boolean;\n  /** Optional parameter used to replace the simulated transaction's recent blockhash with the latest blockhash */\n  replaceRecentBlockhash?: boolean;\n  /** Optional parameter used to set the commitment level when selecting the latest block */\n  commitment?: Commitment;\n  /** Optional parameter used to specify a list of account addresses to return post simulation state for */\n  accounts?: {\n    encoding: 'base64';\n    addresses: string[];\n  };\n  /** Optional parameter used to specify the minimum block slot that can be used for simulation */\n  minContextSlot?: number;\n};\n\nexport type SimulatedTransactionResponse = {\n  err: TransactionError | string | null;\n  logs: Array<string> | null;\n  accounts?: (SimulatedTransactionAccountInfo | null)[] | null;\n  unitsConsumed?: number;\n  returnData?: TransactionReturnData | null;\n};\nconst SimulatedTransactionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    err: nullable(union([pick({}), string()])),\n    logs: nullable(array(string())),\n    accounts: optional(\n      nullable(\n        array(\n          nullable(\n            pick({\n              executable: boolean(),\n              owner: string(),\n              lamports: number(),\n              data: array(string()),\n              rentEpoch: optional(number()),\n            }),\n          ),\n        ),\n      ),\n    ),\n    unitsConsumed: optional(number()),\n    returnData: optional(\n      nullable(\n        pick({\n          programId: string(),\n          data: tuple([string(), literal('base64')]),\n        }),\n      ),\n    ),\n  }),\n);\n\nexport type ParsedInnerInstruction = {\n  index: number;\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n};\n\nexport type TokenBalance = {\n  accountIndex: number;\n  mint: string;\n  owner?: string;\n  uiTokenAmount: TokenAmount;\n};\n\n/**\n * Metadata for a parsed confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionMeta} instead.\n */\nexport type ParsedConfirmedTransactionMeta = ParsedTransactionMeta;\n\n/**\n * Collection of addresses loaded by a transaction using address table lookups\n */\nexport type LoadedAddresses = {\n  writable: Array<PublicKey>;\n  readonly: Array<PublicKey>;\n};\n\n/**\n * Metadata for a parsed transaction on the ledger\n */\nexport type ParsedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked parsed instructions */\n  innerInstructions?: ParsedInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n  /** The collection of addresses loaded using address lookup tables */\n  loadedAddresses?: LoadedAddresses;\n  /** The compute units consumed after processing the transaction */\n  computeUnitsConsumed?: number;\n};\n\nexport type CompiledInnerInstruction = {\n  index: number;\n  instructions: CompiledInstruction[];\n};\n\n/**\n * Metadata for a confirmed transaction on the ledger\n */\nexport type ConfirmedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked instructions */\n  innerInstructions?: CompiledInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n  /** The collection of addresses loaded using address lookup tables */\n  loadedAddresses?: LoadedAddresses;\n  /** The compute units consumed after processing the transaction */\n  computeUnitsConsumed?: number;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type TransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: Message;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type VersionedTransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: VersionedMessage;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** The transaction version */\n  version?: TransactionVersion;\n};\n\n/**\n * A processed transaction message from the RPC API\n */\ntype MessageResponse = {\n  accountKeys: string[];\n  header: MessageHeader;\n  instructions: CompiledInstruction[];\n  recentBlockhash: string;\n  addressTableLookups?: ParsedAddressTableLookup[];\n};\n\n/**\n * A confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport type ConfirmedTransaction = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: Transaction;\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A partially decoded transaction instruction\n */\nexport type PartiallyDecodedInstruction = {\n  /** Program id called by this instruction */\n  programId: PublicKey;\n  /** Public keys of accounts passed to this instruction */\n  accounts: Array<PublicKey>;\n  /** Raw base-58 instruction data */\n  data: string;\n};\n\n/**\n * A parsed transaction message account\n */\nexport type ParsedMessageAccount = {\n  /** Public key of the account */\n  pubkey: PublicKey;\n  /** Indicates if the account signed the transaction */\n  signer: boolean;\n  /** Indicates if the account is writable for this transaction */\n  writable: boolean;\n  /** Indicates if the account key came from the transaction or a lookup table */\n  source?: 'transaction' | 'lookupTable';\n};\n\n/**\n * A parsed transaction instruction\n */\nexport type ParsedInstruction = {\n  /** Name of the program for this instruction */\n  program: string;\n  /** ID of the program for this instruction */\n  programId: PublicKey;\n  /** Parsed instruction info */\n  parsed: any;\n};\n\n/**\n * A parsed address table lookup\n */\nexport type ParsedAddressTableLookup = {\n  /** Address lookup table account key */\n  accountKey: PublicKey;\n  /** Parsed instruction info */\n  writableIndexes: number[];\n  /** Parsed instruction info */\n  readonlyIndexes: number[];\n};\n\n/**\n * A parsed transaction message\n */\nexport type ParsedMessage = {\n  /** Accounts used in the instructions */\n  accountKeys: ParsedMessageAccount[];\n  /** The atomically executed instructions for the transaction */\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n  /** Recent blockhash */\n  recentBlockhash: string;\n  /** Address table lookups used to load additional accounts */\n  addressTableLookups?: ParsedAddressTableLookup[] | null;\n};\n\n/**\n * A parsed transaction\n */\nexport type ParsedTransaction = {\n  /** Signatures for the transaction */\n  signatures: Array<string>;\n  /** Message of the transaction */\n  message: ParsedMessage;\n};\n\n/**\n * A parsed and confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionWithMeta} instead.\n */\nexport type ParsedConfirmedTransaction = ParsedTransactionWithMeta;\n\n/**\n * A parsed transaction on the ledger with meta\n */\nexport type ParsedTransactionWithMeta = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: ParsedTransaction;\n  /** Metadata produced from the transaction */\n  meta: ParsedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** The version of the transaction message */\n  version?: TransactionVersion;\n};\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type BlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: Message;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n    /** Vote account commission when the reward was credited, only present for voting and staking rewards */\n    commission?: number | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `accounts`\n */\nexport type AccountsModeBlockResponse = VersionedAccountsModeBlockResponse;\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `none`\n */\nexport type NoneModeBlockResponse = VersionedNoneModeBlockResponse;\n\n/**\n * A block with parsed transactions\n */\nexport type ParsedBlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The details of the transaction */\n    transaction: ParsedTransaction;\n    /** Metadata produced from the transaction */\n    meta: ParsedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n    /** Vote account commission when the reward was credited, only present for voting and staking rewards */\n    commission?: number | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n  /** The number of blocks beneath this block */\n  blockHeight: number | null;\n};\n\n/**\n * A block with parsed transactions where the `transactionDetails` mode is `accounts`\n */\nexport type ParsedAccountsModeBlockResponse = Omit<\n  ParsedBlockResponse,\n  'transactions'\n> & {\n  transactions: Array<\n    Omit<ParsedBlockResponse['transactions'][number], 'transaction'> & {\n      transaction: Pick<\n        ParsedBlockResponse['transactions'][number]['transaction'],\n        'signatures'\n      > & {\n        accountKeys: ParsedMessageAccount[];\n      };\n    }\n  >;\n};\n\n/**\n * A block with parsed transactions where the `transactionDetails` mode is `none`\n */\nexport type ParsedNoneModeBlockResponse = Omit<\n  ParsedBlockResponse,\n  'transactions'\n>;\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type VersionedBlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: VersionedMessage;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n    /** Vote account commission when the reward was credited, only present for voting and staking rewards */\n    commission?: number | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `accounts`\n */\nexport type VersionedAccountsModeBlockResponse = Omit<\n  VersionedBlockResponse,\n  'transactions'\n> & {\n  transactions: Array<\n    Omit<VersionedBlockResponse['transactions'][number], 'transaction'> & {\n      transaction: Pick<\n        VersionedBlockResponse['transactions'][number]['transaction'],\n        'signatures'\n      > & {\n        accountKeys: ParsedMessageAccount[];\n      };\n    }\n  >;\n};\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `none`\n */\nexport type VersionedNoneModeBlockResponse = Omit<\n  VersionedBlockResponse,\n  'transactions'\n>;\n\n/**\n * A confirmed block on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport type ConfirmedBlock = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions and status metas */\n  transactions: Array<{\n    transaction: Transaction;\n    meta: ConfirmedTransactionMeta | null;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    pubkey: string;\n    lamports: number;\n    postBalance: number | null;\n    rewardType: string | null;\n    commission?: number | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A Block on the ledger with signatures only\n */\nexport type BlockSignatures = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of signatures */\n  signatures: Array<string>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * recent block production information\n */\nexport type BlockProduction = Readonly<{\n  /** a dictionary of validator identities, as base-58 encoded strings. Value is a two element array containing the number of leader slots and the number of blocks produced */\n  byIdentity: Readonly<Record<string, ReadonlyArray<number>>>;\n  /** Block production slot range */\n  range: Readonly<{\n    /** first slot of the block production information (inclusive) */\n    firstSlot: number;\n    /** last slot of block production information (inclusive) */\n    lastSlot: number;\n  }>;\n}>;\n\nexport type GetBlockProductionConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Slot range to return block production for. If parameter not provided, defaults to current epoch. */\n  range?: {\n    /** first slot to return block production information for (inclusive) */\n    firstSlot: number;\n    /** last slot to return block production information for (inclusive). If parameter not provided, defaults to the highest slot */\n    lastSlot?: number;\n  };\n  /** Only return results for this validator identity (base-58 encoded) */\n  identity?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getBlockProduction\" message\n */\nconst BlockProductionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    byIdentity: record(string(), array(number())),\n    range: pick({\n      firstSlot: number(),\n      lastSlot: number(),\n    }),\n  }),\n);\n\n/**\n * A performance sample\n */\nexport type PerfSample = {\n  /** Slot number of sample */\n  slot: number;\n  /** Number of transactions in a sample window */\n  numTransactions: number;\n  /** Number of slots in a sample window */\n  numSlots: number;\n  /** Sample window in seconds */\n  samplePeriodSecs: number;\n};\n\nfunction createRpcClient(\n  url: string,\n  httpHeaders?: HttpHeaders,\n  customFetch?: FetchFn,\n  fetchMiddleware?: FetchMiddleware,\n  disableRetryOnRateLimit?: boolean,\n  httpAgent?: NodeHttpAgent | NodeHttpsAgent | false,\n): RpcClient {\n  const fetch = customFetch ? customFetch : fetchImpl;\n  let agent: NodeHttpAgent | NodeHttpsAgent | undefined;\n  if (process.env.BROWSER) {\n    if (httpAgent != null) {\n      console.warn(\n        'You have supplied an `httpAgent` when creating a `Connection` in a browser environment.' +\n          'It has been ignored; `httpAgent` is only used in Node environments.',\n      );\n    }\n  } else {\n    if (httpAgent == null) {\n      if (process.env.NODE_ENV !== 'test') {\n        const agentOptions = {\n          // One second fewer than the Solana RPC's keepalive timeout.\n          // Read more: https://github.com/solana-labs/solana/issues/27859#issuecomment-1340097889\n          freeSocketTimeout: 19000,\n          keepAlive: true,\n          maxSockets: 25,\n        };\n        if (url.startsWith('https:')) {\n          agent = new HttpsKeepAliveAgent(agentOptions);\n        } else {\n          agent = new HttpKeepAliveAgent(agentOptions);\n        }\n      }\n    } else {\n      if (httpAgent !== false) {\n        const isHttps = url.startsWith('https:');\n        if (isHttps && !(httpAgent instanceof NodeHttpsAgent)) {\n          throw new Error(\n            'The endpoint `' +\n              url +\n              '` can only be paired with an `https.Agent`. You have, instead, supplied an ' +\n              '`http.Agent` through `httpAgent`.',\n          );\n        } else if (!isHttps && httpAgent instanceof NodeHttpsAgent) {\n          throw new Error(\n            'The endpoint `' +\n              url +\n              '` can only be paired with an `http.Agent`. You have, instead, supplied an ' +\n              '`https.Agent` through `httpAgent`.',\n          );\n        }\n        agent = httpAgent;\n      }\n    }\n  }\n\n  let fetchWithMiddleware: FetchFn | undefined;\n\n  if (fetchMiddleware) {\n    fetchWithMiddleware = async (info, init) => {\n      const modifiedFetchArgs = await new Promise<Parameters<FetchFn>>(\n        (resolve, reject) => {\n          try {\n            fetchMiddleware(info, init, (modifiedInfo, modifiedInit) =>\n              resolve([modifiedInfo, modifiedInit]),\n            );\n          } catch (error) {\n            reject(error);\n          }\n        },\n      );\n      return await fetch(...modifiedFetchArgs);\n    };\n  }\n\n  const clientBrowser = new RpcClient(async (request, callback) => {\n    const options = {\n      method: 'POST',\n      body: request,\n      agent,\n      headers: Object.assign(\n        {\n          'Content-Type': 'application/json',\n        },\n        httpHeaders || {},\n        COMMON_HTTP_HEADERS,\n      ),\n    };\n\n    try {\n      let too_many_requests_retries = 5;\n      let res: Response;\n      let waitTime = 500;\n      for (;;) {\n        if (fetchWithMiddleware) {\n          res = await fetchWithMiddleware(url, options);\n        } else {\n          res = await fetch(url, options);\n        }\n\n        if (res.status !== 429 /* Too many requests */) {\n          break;\n        }\n        if (disableRetryOnRateLimit === true) {\n          break;\n        }\n        too_many_requests_retries -= 1;\n        if (too_many_requests_retries === 0) {\n          break;\n        }\n        console.log(\n          `Server responded with ${res.status} ${res.statusText}.  Retrying after ${waitTime}ms delay...`,\n        );\n        await sleep(waitTime);\n        waitTime *= 2;\n      }\n\n      const text = await res.text();\n      if (res.ok) {\n        callback(null, text);\n      } else {\n        callback(new Error(`${res.status} ${res.statusText}: ${text}`));\n      }\n    } catch (err) {\n      if (err instanceof Error) callback(err);\n    }\n  }, {});\n\n  return clientBrowser;\n}\n\nfunction createRpcRequest(client: RpcClient): RpcRequest {\n  return (method, args) => {\n    return new Promise((resolve, reject) => {\n      client.request(method, args, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\nfunction createRpcBatchRequest(client: RpcClient): RpcBatchRequest {\n  return (requests: RpcParams[]) => {\n    return new Promise((resolve, reject) => {\n      // Do nothing if requests is empty\n      if (requests.length === 0) resolve([]);\n\n      const batch = requests.map((params: RpcParams) => {\n        return client.request(params.methodName, params.args);\n      });\n\n      client.request(batch, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\n/**\n * Expected JSON RPC response for the \"getInflationGovernor\" message\n */\nconst GetInflationGovernorRpcResult = jsonRpcResult(GetInflationGovernorResult);\n\n/**\n * Expected JSON RPC response for the \"getInflationRate\" message\n */\nconst GetInflationRateRpcResult = jsonRpcResult(GetInflationRateResult);\n\n/**\n * Expected JSON RPC response for the \"getRecentPrioritizationFees\" message\n */\nconst GetRecentPrioritizationFeesRpcResult = jsonRpcResult(\n  GetRecentPrioritizationFeesResult,\n);\n\n/**\n * Expected JSON RPC response for the \"getEpochInfo\" message\n */\nconst GetEpochInfoRpcResult = jsonRpcResult(GetEpochInfoResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochSchedule\" message\n */\nconst GetEpochScheduleRpcResult = jsonRpcResult(GetEpochScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"getLeaderSchedule\" message\n */\nconst GetLeaderScheduleRpcResult = jsonRpcResult(GetLeaderScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"minimumLedgerSlot\" and \"getFirstAvailableBlock\" messages\n */\nconst SlotRpcResult = jsonRpcResult(number());\n\n/**\n * Supply\n */\nexport type Supply = {\n  /** Total supply in lamports */\n  total: number;\n  /** Circulating supply in lamports */\n  circulating: number;\n  /** Non-circulating supply in lamports */\n  nonCirculating: number;\n  /** List of non-circulating account addresses */\n  nonCirculatingAccounts: Array<PublicKey>;\n};\n\n/**\n * Expected JSON RPC response for the \"getSupply\" message\n */\nconst GetSupplyRpcResult = jsonRpcResultAndContext(\n  pick({\n    total: number(),\n    circulating: number(),\n    nonCirculating: number(),\n    nonCirculatingAccounts: array(PublicKeyFromString),\n  }),\n);\n\n/**\n * Token amount object which returns a token amount in different formats\n * for various client use cases.\n */\nexport type TokenAmount = {\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC structure for token amounts\n */\nconst TokenAmountResult = pick({\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string()),\n});\n\n/**\n * Token address and balance.\n */\nexport type TokenAccountBalancePair = {\n  /** Address of the token account */\n  address: PublicKey;\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getTokenLargestAccounts\" message\n */\nconst GetTokenLargestAccountsResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      address: PublicKeyFromString,\n      amount: string(),\n      uiAmount: nullable(number()),\n      decimals: number(),\n      uiAmountString: optional(string()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message\n */\nconst GetTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: BufferFromRawAccountData,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\nconst ParsedAccountDataResult = pick({\n  program: string(),\n  parsed: unknown(),\n  space: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message with parsed data\n */\nconst GetParsedTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: ParsedAccountDataResult,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Pair of an account address and its balance\n */\nexport type AccountBalancePair = {\n  address: PublicKey;\n  lamports: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getLargestAccounts\" message\n */\nconst GetLargestAccountsRpcResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      lamports: number(),\n      address: PublicKeyFromString,\n    }),\n  ),\n);\n\n/**\n * @internal\n */\nconst AccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: BufferFromRawAccountData,\n  rentEpoch: number(),\n});\n\n/**\n * @internal\n */\nconst KeyedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\nconst ParsedOrRawAccountData = coerce(\n  union([instance(Buffer), ParsedAccountDataResult]),\n  union([RawAccountDataResult, ParsedAccountDataResult]),\n  value => {\n    if (Array.isArray(value)) {\n      return create(value, BufferFromRawAccountData);\n    } else {\n      return value;\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedAccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: ParsedOrRawAccountData,\n  rentEpoch: number(),\n});\n\nconst KeyedParsedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: ParsedAccountInfoResult,\n});\n\n/**\n * @internal\n */\nconst StakeActivationResult = pick({\n  state: union([\n    literal('active'),\n    literal('inactive'),\n    literal('activating'),\n    literal('deactivating'),\n  ]),\n  active: number(),\n  inactive: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getConfirmedSignaturesForAddress2\" message\n */\n\nconst GetConfirmedSignaturesForAddress2RpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getSignaturesForAddress\" message\n */\nconst GetSignaturesForAddressRpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/***\n * Expected JSON RPC response for the \"accountNotification\" message\n */\nconst AccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(AccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst ProgramAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\n/***\n * Expected JSON RPC response for the \"programNotification\" message\n */\nconst ProgramAccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(ProgramAccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst SlotInfoResult = pick({\n  parent: number(),\n  slot: number(),\n  root: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"slotNotification\" message\n */\nconst SlotNotificationResult = pick({\n  subscription: number(),\n  result: SlotInfoResult,\n});\n\n/**\n * Slot updates which can be used for tracking the live progress of a cluster.\n * - `\"firstShredReceived\"`: connected node received the first shred of a block.\n * Indicates that a new block that is being produced.\n * - `\"completed\"`: connected node has received all shreds of a block. Indicates\n * a block was recently produced.\n * - `\"optimisticConfirmation\"`: block was optimistically confirmed by the\n * cluster. It is not guaranteed that an optimistic confirmation notification\n * will be sent for every finalized blocks.\n * - `\"root\"`: the connected node rooted this block.\n * - `\"createdBank\"`: the connected node has started validating this block.\n * - `\"frozen\"`: the connected node has validated this block.\n * - `\"dead\"`: the connected node failed to validate this block.\n */\nexport type SlotUpdate =\n  | {\n      type: 'firstShredReceived';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'completed';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'createdBank';\n      slot: number;\n      timestamp: number;\n      parent: number;\n    }\n  | {\n      type: 'frozen';\n      slot: number;\n      timestamp: number;\n      stats: {\n        numTransactionEntries: number;\n        numSuccessfulTransactions: number;\n        numFailedTransactions: number;\n        maxTransactionsPerEntry: number;\n      };\n    }\n  | {\n      type: 'dead';\n      slot: number;\n      timestamp: number;\n      err: string;\n    }\n  | {\n      type: 'optimisticConfirmation';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'root';\n      slot: number;\n      timestamp: number;\n    };\n\n/**\n * @internal\n */\nconst SlotUpdateResult = union([\n  pick({\n    type: union([\n      literal('firstShredReceived'),\n      literal('completed'),\n      literal('optimisticConfirmation'),\n      literal('root'),\n    ]),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('createdBank'),\n    parent: number(),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('frozen'),\n    slot: number(),\n    timestamp: number(),\n    stats: pick({\n      numTransactionEntries: number(),\n      numSuccessfulTransactions: number(),\n      numFailedTransactions: number(),\n      maxTransactionsPerEntry: number(),\n    }),\n  }),\n  pick({\n    type: literal('dead'),\n    slot: number(),\n    timestamp: number(),\n    err: string(),\n  }),\n]);\n\n/**\n * Expected JSON RPC response for the \"slotsUpdatesNotification\" message\n */\nconst SlotUpdateNotificationResult = pick({\n  subscription: number(),\n  result: SlotUpdateResult,\n});\n\n/**\n * Expected JSON RPC response for the \"signatureNotification\" message\n */\nconst SignatureNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(\n    union([SignatureStatusResult, SignatureReceivedResult]),\n  ),\n});\n\n/**\n * Expected JSON RPC response for the \"rootNotification\" message\n */\nconst RootNotificationResult = pick({\n  subscription: number(),\n  result: number(),\n});\n\nconst ContactInfoResult = pick({\n  pubkey: string(),\n  gossip: nullable(string()),\n  tpu: nullable(string()),\n  rpc: nullable(string()),\n  version: nullable(string()),\n});\n\nconst VoteAccountInfoResult = pick({\n  votePubkey: string(),\n  nodePubkey: string(),\n  activatedStake: number(),\n  epochVoteAccount: boolean(),\n  epochCredits: array(tuple([number(), number(), number()])),\n  commission: number(),\n  lastVote: number(),\n  rootSlot: nullable(number()),\n});\n\n/**\n * Expected JSON RPC response for the \"getVoteAccounts\" message\n */\nconst GetVoteAccounts = jsonRpcResult(\n  pick({\n    current: array(VoteAccountInfoResult),\n    delinquent: array(VoteAccountInfoResult),\n  }),\n);\n\nconst ConfirmationStatus = union([\n  literal('processed'),\n  literal('confirmed'),\n  literal('finalized'),\n]);\n\nconst SignatureStatusResponse = pick({\n  slot: number(),\n  confirmations: nullable(number()),\n  err: TransactionErrorResult,\n  confirmationStatus: optional(ConfirmationStatus),\n});\n\n/**\n * Expected JSON RPC response for the \"getSignatureStatuses\" message\n */\nconst GetSignatureStatusesRpcResult = jsonRpcResultAndContext(\n  array(nullable(SignatureStatusResponse)),\n);\n\n/**\n * Expected JSON RPC response for the \"getMinimumBalanceForRentExemption\" message\n */\nconst GetMinimumBalanceForRentExemptionRpcResult = jsonRpcResult(number());\n\nconst AddressTableLookupStruct = pick({\n  accountKey: PublicKeyFromString,\n  writableIndexes: array(number()),\n  readonlyIndexes: array(number()),\n});\n\nconst ConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(string()),\n    header: pick({\n      numRequiredSignatures: number(),\n      numReadonlySignedAccounts: number(),\n      numReadonlyUnsignedAccounts: number(),\n    }),\n    instructions: array(\n      pick({\n        accounts: array(number()),\n        data: string(),\n        programIdIndex: number(),\n      }),\n    ),\n    recentBlockhash: string(),\n    addressTableLookups: optional(array(AddressTableLookupStruct)),\n  }),\n});\n\nconst AnnotatedAccountKey = pick({\n  pubkey: PublicKeyFromString,\n  signer: boolean(),\n  writable: boolean(),\n  source: optional(union([literal('transaction'), literal('lookupTable')])),\n});\n\nconst ConfirmedTransactionAccountsModeResult = pick({\n  accountKeys: array(AnnotatedAccountKey),\n  signatures: array(string()),\n});\n\nconst ParsedInstructionResult = pick({\n  parsed: unknown(),\n  program: string(),\n  programId: PublicKeyFromString,\n});\n\nconst RawInstructionResult = pick({\n  accounts: array(PublicKeyFromString),\n  data: string(),\n  programId: PublicKeyFromString,\n});\n\nconst InstructionResult = union([\n  RawInstructionResult,\n  ParsedInstructionResult,\n]);\n\nconst UnknownInstructionResult = union([\n  pick({\n    parsed: unknown(),\n    program: string(),\n    programId: string(),\n  }),\n  pick({\n    accounts: array(string()),\n    data: string(),\n    programId: string(),\n  }),\n]);\n\nconst ParsedOrRawInstruction = coerce(\n  InstructionResult,\n  UnknownInstructionResult,\n  value => {\n    if ('accounts' in value) {\n      return create(value, RawInstructionResult);\n    } else {\n      return create(value, ParsedInstructionResult);\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(AnnotatedAccountKey),\n    instructions: array(ParsedOrRawInstruction),\n    recentBlockhash: string(),\n    addressTableLookups: optional(nullable(array(AddressTableLookupStruct))),\n  }),\n});\n\nconst TokenBalanceResult = pick({\n  accountIndex: number(),\n  mint: string(),\n  owner: optional(string()),\n  uiTokenAmount: TokenAmountResult,\n});\n\nconst LoadedAddressesResult = pick({\n  writable: array(PublicKeyFromString),\n  readonly: array(PublicKeyFromString),\n});\n\n/**\n * @internal\n */\nconst ConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(\n            pick({\n              accounts: array(number()),\n              data: string(),\n              programIdIndex: number(),\n            }),\n          ),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number()),\n});\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(ParsedOrRawInstruction),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number()),\n});\n\nconst TransactionVersionStruct = union([literal(0), literal('legacy')]);\n\n/** @internal */\nconst RewardsResult = pick({\n  pubkey: string(),\n  lamports: number(),\n  postBalance: nullable(number()),\n  rewardType: nullable(string()),\n  commission: optional(nullable(number())),\n});\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message when `transactionDetails` is `none`\n */\nconst GetNoneModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message when `transactionDetails` is `accounts`\n */\nconst GetAccountsModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionAccountsModeResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message\n */\nconst GetParsedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ParsedConfirmedTransactionResult,\n          meta: nullable(ParsedConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message  when `transactionDetails` is `accounts`\n */\nconst GetParsedAccountsModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionAccountsModeResult,\n          meta: nullable(ParsedConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message  when `transactionDetails` is `none`\n */\nconst GetParsedNoneModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getConfirmedBlock\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetBlockRpcResult} instead.\n */\nconst GetConfirmedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockSignaturesRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      signatures: array(string()),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTransaction\" message\n */\nconst GetTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      meta: ConfirmedTransactionMetaResult,\n      blockTime: optional(nullable(number())),\n      transaction: ConfirmedTransactionResult,\n      version: optional(TransactionVersionStruct),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getTransaction\" message\n */\nconst GetParsedTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      transaction: ParsedConfirmedTransactionResult,\n      meta: nullable(ParsedConfirmedTransactionMetaResult),\n      blockTime: optional(nullable(number())),\n      version: optional(TransactionVersionStruct),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getRecentBlockhash\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetLatestBlockhashRpcResult} instead.\n */\nconst GetRecentBlockhashAndContextRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    feeCalculator: pick({\n      lamportsPerSignature: number(),\n    }),\n  }),\n);\n\n/**\n * Expected JSON RPC response for the \"getLatestBlockhash\" message\n */\nconst GetLatestBlockhashRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    lastValidBlockHeight: number(),\n  }),\n);\n\n/**\n * Expected JSON RPC response for the \"isBlockhashValid\" message\n */\nconst IsBlockhashValidRpcResult = jsonRpcResultAndContext(boolean());\n\nconst PerfSampleResult = pick({\n  slot: number(),\n  numTransactions: number(),\n  numSlots: number(),\n  samplePeriodSecs: number(),\n});\n\n/*\n * Expected JSON RPC response for \"getRecentPerformanceSamples\" message\n */\nconst GetRecentPerformanceSamplesRpcResult = jsonRpcResult(\n  array(PerfSampleResult),\n);\n\n/**\n * Expected JSON RPC response for the \"getFeeCalculatorForBlockhash\" message\n */\nconst GetFeeCalculatorRpcResult = jsonRpcResultAndContext(\n  nullable(\n    pick({\n      feeCalculator: pick({\n        lamportsPerSignature: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"requestAirdrop\" message\n */\nconst RequestAirdropRpcResult = jsonRpcResult(string());\n\n/**\n * Expected JSON RPC response for the \"sendTransaction\" message\n */\nconst SendTransactionRpcResult = jsonRpcResult(string());\n\n/**\n * Information about the latest slot being processed by a node\n */\nexport type SlotInfo = {\n  /** Currently processing slot */\n  slot: number;\n  /** Parent of the current slot */\n  parent: number;\n  /** The root block of the current slot's fork */\n  root: number;\n};\n\n/**\n * Parsed account data\n */\nexport type ParsedAccountData = {\n  /** Name of the program that owns this account */\n  program: string;\n  /** Parsed account data */\n  parsed: any;\n  /** Space used by account data */\n  space: number;\n};\n\n/**\n * Stake Activation data\n */\nexport type StakeActivationData = {\n  /** the stake account's activation state */\n  state: 'active' | 'inactive' | 'activating' | 'deactivating';\n  /** stake active during the epoch */\n  active: number;\n  /** stake inactive during the epoch */\n  inactive: number;\n};\n\n/**\n * Data slice argument for getProgramAccounts\n */\nexport type DataSlice = {\n  /** offset of data slice */\n  offset: number;\n  /** length of data slice */\n  length: number;\n};\n\n/**\n * Memory comparison filter for getProgramAccounts\n */\nexport type MemcmpFilter = {\n  memcmp: {\n    /** offset into program account data to start comparison */\n    offset: number;\n    /** data to match, as base-58 encoded string and limited to less than 129 bytes */\n    bytes: string;\n  };\n};\n\n/**\n * Data size comparison filter for getProgramAccounts\n */\nexport type DataSizeFilter = {\n  /** Size of data for program account data length comparison */\n  dataSize: number;\n};\n\n/**\n * A filter object for getProgramAccounts\n */\nexport type GetProgramAccountsFilter = MemcmpFilter | DataSizeFilter;\n\n/**\n * Configuration object for getProgramAccounts requests\n */\nexport type GetProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional encoding for account data (default base64)\n   * To use \"jsonParsed\" encoding, please refer to `getParsedProgramAccounts` in connection.ts\n   * */\n  encoding?: 'base64';\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n  /** wrap the result in an RpcResponse JSON object */\n  withContext?: boolean;\n};\n\nexport type GetProgramAccountsResponse = readonly Readonly<{\n  account: AccountInfo<Buffer>;\n  /** the account Pubkey as base-58 encoded string */\n  pubkey: PublicKey;\n}>[];\n\n/**\n * Configuration object for getParsedProgramAccounts\n */\nexport type GetParsedProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for getMultipleAccounts\n */\nexport type GetMultipleAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetStakeActivationConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Epoch for which to calculate activation details. If parameter not provided, defaults to current epoch */\n  epoch?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetTokenAccountsByOwnerConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetTransactionCountConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getNonce`\n */\nexport type GetNonceConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getNonceAndContext`\n */\nexport type GetNonceAndContextConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Information describing an account\n */\nexport type AccountInfo<T> = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: PublicKey;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: T;\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\n/**\n * Account information identified by pubkey\n */\nexport type KeyedAccountInfo = {\n  accountId: PublicKey;\n  accountInfo: AccountInfo<Buffer>;\n};\n\n/**\n * Callback function for account change notifications\n */\nexport type AccountChangeCallback = (\n  accountInfo: AccountInfo<Buffer>,\n  context: Context,\n) => void;\n\n/**\n * Callback function for program account change notifications\n */\nexport type ProgramAccountChangeCallback = (\n  keyedAccountInfo: KeyedAccountInfo,\n  context: Context,\n) => void;\n\n/**\n * Callback function for slot change notifications\n */\nexport type SlotChangeCallback = (slotInfo: SlotInfo) => void;\n\n/**\n * Callback function for slot update notifications\n */\nexport type SlotUpdateCallback = (slotUpdate: SlotUpdate) => void;\n\n/**\n * Callback function for signature status notifications\n */\nexport type SignatureResultCallback = (\n  signatureResult: SignatureResult,\n  context: Context,\n) => void;\n\n/**\n * Signature status notification with transaction result\n */\nexport type SignatureStatusNotification = {\n  type: 'status';\n  result: SignatureResult;\n};\n\n/**\n * Signature received notification\n */\nexport type SignatureReceivedNotification = {\n  type: 'received';\n};\n\n/**\n * Callback function for signature notifications\n */\nexport type SignatureSubscriptionCallback = (\n  notification: SignatureStatusNotification | SignatureReceivedNotification,\n  context: Context,\n) => void;\n\n/**\n * Signature subscription options\n */\nexport type SignatureSubscriptionOptions = {\n  commitment?: Commitment;\n  enableReceivedNotification?: boolean;\n};\n\n/**\n * Callback function for root change notifications\n */\nexport type RootChangeCallback = (root: number) => void;\n\n/**\n * @internal\n */\nconst LogsResult = pick({\n  err: TransactionErrorResult,\n  logs: array(string()),\n  signature: string(),\n});\n\n/**\n * Logs result.\n */\nexport type Logs = {\n  err: TransactionError | null;\n  logs: string[];\n  signature: string;\n};\n\n/**\n * Expected JSON RPC response for the \"logsNotification\" message.\n */\nconst LogsNotificationResult = pick({\n  result: notificationResultAndContext(LogsResult),\n  subscription: number(),\n});\n\n/**\n * Filter for log subscriptions.\n */\nexport type LogsFilter = PublicKey | 'all' | 'allWithVotes';\n\n/**\n * Callback function for log notifications.\n */\nexport type LogsCallback = (logs: Logs, ctx: Context) => void;\n\n/**\n * Signature result\n */\nexport type SignatureResult = {\n  err: TransactionError | null;\n};\n\n/**\n * Transaction error\n */\nexport type TransactionError = {} | string;\n\n/**\n * Transaction confirmation status\n * <pre>\n *   'processed': Transaction landed in a block which has reached 1 confirmation by the connected node\n *   'confirmed': Transaction landed in a block which has reached 1 confirmation by the cluster\n *   'finalized': Transaction landed in a block which has been finalized by the cluster\n * </pre>\n */\nexport type TransactionConfirmationStatus =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized';\n\n/**\n * Signature status\n */\nexport type SignatureStatus = {\n  /** when the transaction was processed */\n  slot: number;\n  /** the number of blocks that have been confirmed and voted on in the fork containing `slot` */\n  confirmations: number | null;\n  /** transaction error, if any */\n  err: TransactionError | null;\n  /** cluster confirmation status, if data available. Possible responses: `processed`, `confirmed`, `finalized` */\n  confirmationStatus?: TransactionConfirmationStatus;\n};\n\n/**\n * A confirmed signature with its status\n */\nexport type ConfirmedSignatureInfo = {\n  /** the transaction signature */\n  signature: string;\n  /** when the transaction was processed */\n  slot: number;\n  /** error, if any */\n  err: TransactionError | null;\n  /** memo associated with the transaction, if any */\n  memo: string | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** Cluster confirmation status, if available. Possible values: `processed`, `confirmed`, `finalized` */\n  confirmationStatus?: TransactionConfirmationStatus;\n};\n\n/**\n * An object defining headers to be passed to the RPC server\n */\nexport type HttpHeaders = {\n  [header: string]: string;\n} & {\n  // Prohibited headers; for internal use only.\n  'solana-client'?: never;\n};\n\n/**\n * The type of the JavaScript `fetch()` API\n */\nexport type FetchFn = typeof fetchImpl;\n\n/**\n * A callback used to augment the outgoing HTTP request\n */\nexport type FetchMiddleware = (\n  info: Parameters<FetchFn>[0],\n  init: Parameters<FetchFn>[1],\n  fetch: (...a: Parameters<FetchFn>) => void,\n) => void;\n\n/**\n * Configuration for instantiating a Connection\n */\nexport type ConnectionConfig = {\n  /**\n   * An `http.Agent` that will be used to manage socket connections (eg. to implement connection\n   * persistence). Set this to `false` to create a connection that uses no agent. This applies to\n   * Node environments only.\n   */\n  httpAgent?: NodeHttpAgent | NodeHttpsAgent | false;\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional endpoint URL to the fullnode JSON RPC PubSub WebSocket Endpoint */\n  wsEndpoint?: string;\n  /** Optional HTTP headers object */\n  httpHeaders?: HttpHeaders;\n  /** Optional custom fetch function */\n  fetch?: FetchFn;\n  /** Optional fetch middleware callback */\n  fetchMiddleware?: FetchMiddleware;\n  /** Optional Disable retrying calls when server responds with HTTP 429 (Too Many Requests) */\n  disableRetryOnRateLimit?: boolean;\n  /** time to allow for the server to initially process a transaction (in milliseconds) */\n  confirmTransactionInitialTimeout?: number;\n};\n\n/** @internal */\nconst COMMON_HTTP_HEADERS = {\n  'solana-client': `js/${process.env.npm_package_version ?? 'UNKNOWN'}`,\n};\n\n/**\n * A connection to a fullnode JSON RPC endpoint\n */\nexport class Connection {\n  /** @internal */ _commitment?: Commitment;\n  /** @internal */ _confirmTransactionInitialTimeout?: number;\n  /** @internal */ _rpcEndpoint: string;\n  /** @internal */ _rpcWsEndpoint: string;\n  /** @internal */ _rpcClient: RpcClient;\n  /** @internal */ _rpcRequest: RpcRequest;\n  /** @internal */ _rpcBatchRequest: RpcBatchRequest;\n  /** @internal */ _rpcWebSocket: RpcWebSocketClient;\n  /** @internal */ _rpcWebSocketConnected: boolean = false;\n  /** @internal */ _rpcWebSocketHeartbeat: ReturnType<\n    typeof setInterval\n  > | null = null;\n  /** @internal */ _rpcWebSocketIdleTimeout: ReturnType<\n    typeof setTimeout\n  > | null = null;\n  /** @internal\n   * A number that we increment every time an active connection closes.\n   * Used to determine whether the same socket connection that was open\n   * when an async operation started is the same one that's active when\n   * its continuation fires.\n   *\n   */ private _rpcWebSocketGeneration: number = 0;\n\n  /** @internal */ _disableBlockhashCaching: boolean = false;\n  /** @internal */ _pollingBlockhash: boolean = false;\n  /** @internal */ _blockhashInfo: {\n    latestBlockhash: BlockhashWithExpiryBlockHeight | null;\n    lastFetch: number;\n    simulatedSignatures: Array<string>;\n    transactionSignatures: Array<string>;\n  } = {\n    latestBlockhash: null,\n    lastFetch: 0,\n    transactionSignatures: [],\n    simulatedSignatures: [],\n  };\n\n  /** @internal */ private _nextClientSubscriptionId: ClientSubscriptionId = 0;\n  /** @internal */ private _subscriptionDisposeFunctionsByClientSubscriptionId: {\n    [clientSubscriptionId: ClientSubscriptionId]:\n      | SubscriptionDisposeFn\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionHashByClientSubscriptionId: {\n    [clientSubscriptionId: ClientSubscriptionId]:\n      | SubscriptionConfigHash\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionStateChangeCallbacksByHash: {\n    [hash: SubscriptionConfigHash]:\n      | Set<SubscriptionStateChangeCallback>\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionCallbacksByServerSubscriptionId: {\n    [serverSubscriptionId: ServerSubscriptionId]:\n      | Set<SubscriptionConfig['callback']>\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionsByHash: {\n    [hash: SubscriptionConfigHash]: Subscription | undefined;\n  } = {};\n  /**\n   * Special case.\n   * After a signature is processed, RPCs automatically dispose of the\n   * subscription on the server side. We need to track which of these\n   * subscriptions have been disposed in such a way, so that we know\n   * whether the client is dealing with a not-yet-processed signature\n   * (in which case we must tear down the server subscription) or an\n   * already-processed signature (in which case the client can simply\n   * clear out the subscription locally without telling the server).\n   *\n   * NOTE: There is a proposal to eliminate this special case, here:\n   * https://github.com/solana-labs/solana/issues/18892\n   */\n  /** @internal */ private _subscriptionsAutoDisposedByRpc: Set<ServerSubscriptionId> =\n    new Set();\n\n  /**\n   * Establish a JSON RPC connection\n   *\n   * @param endpoint URL to the fullnode JSON RPC endpoint\n   * @param commitmentOrConfig optional default commitment level or optional ConnectionConfig configuration object\n   */\n  constructor(\n    endpoint: string,\n    commitmentOrConfig?: Commitment | ConnectionConfig,\n  ) {\n    let wsEndpoint;\n    let httpHeaders;\n    let fetch;\n    let fetchMiddleware;\n    let disableRetryOnRateLimit;\n    let httpAgent;\n    if (commitmentOrConfig && typeof commitmentOrConfig === 'string') {\n      this._commitment = commitmentOrConfig;\n    } else if (commitmentOrConfig) {\n      this._commitment = commitmentOrConfig.commitment;\n      this._confirmTransactionInitialTimeout =\n        commitmentOrConfig.confirmTransactionInitialTimeout;\n      wsEndpoint = commitmentOrConfig.wsEndpoint;\n      httpHeaders = commitmentOrConfig.httpHeaders;\n      fetch = commitmentOrConfig.fetch;\n      fetchMiddleware = commitmentOrConfig.fetchMiddleware;\n      disableRetryOnRateLimit = commitmentOrConfig.disableRetryOnRateLimit;\n      httpAgent = commitmentOrConfig.httpAgent;\n    }\n\n    this._rpcEndpoint = assertEndpointUrl(endpoint);\n    this._rpcWsEndpoint = wsEndpoint || makeWebsocketUrl(endpoint);\n\n    this._rpcClient = createRpcClient(\n      endpoint,\n      httpHeaders,\n      fetch,\n      fetchMiddleware,\n      disableRetryOnRateLimit,\n      httpAgent,\n    );\n    this._rpcRequest = createRpcRequest(this._rpcClient);\n    this._rpcBatchRequest = createRpcBatchRequest(this._rpcClient);\n\n    this._rpcWebSocket = new RpcWebSocketClient(this._rpcWsEndpoint, {\n      autoconnect: false,\n      max_reconnects: Infinity,\n    });\n    this._rpcWebSocket.on('open', this._wsOnOpen.bind(this));\n    this._rpcWebSocket.on('error', this._wsOnError.bind(this));\n    this._rpcWebSocket.on('close', this._wsOnClose.bind(this));\n    this._rpcWebSocket.on(\n      'accountNotification',\n      this._wsOnAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'programNotification',\n      this._wsOnProgramAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotNotification',\n      this._wsOnSlotNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotsUpdatesNotification',\n      this._wsOnSlotUpdatesNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'signatureNotification',\n      this._wsOnSignatureNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'rootNotification',\n      this._wsOnRootNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'logsNotification',\n      this._wsOnLogsNotification.bind(this),\n    );\n  }\n\n  /**\n   * The default commitment used for requests\n   */\n  get commitment(): Commitment | undefined {\n    return this._commitment;\n  }\n\n  /**\n   * The RPC endpoint\n   */\n  get rpcEndpoint(): string {\n    return this._rpcEndpoint;\n  }\n\n  /**\n   * Fetch the balance for the specified public key, return with context\n   */\n  async getBalanceAndContext(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetBalanceConfig,\n  ): Promise<RpcResponseAndContext<number>> {\n    /** @internal */\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get balance for ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the balance for the specified public key\n   */\n  async getBalance(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetBalanceConfig,\n  ): Promise<number> {\n    return await this.getBalanceAndContext(publicKey, commitmentOrConfig)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get balance of account ' + publicKey.toBase58() + ': ' + e,\n        );\n      });\n  }\n\n  /**\n   * Fetch the estimated production time of a block\n   */\n  async getBlockTime(slot: number): Promise<number | null> {\n    const unsafeRes = await this._rpcRequest('getBlockTime', [slot]);\n    const res = create(unsafeRes, jsonRpcResult(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get block time for slot ${slot}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the lowest slot that the node has information about in its ledger.\n   * This value may increase over time if the node is configured to purge older ledger data\n   */\n  async getMinimumLedgerSlot(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('minimumLedgerSlot', []);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get minimum ledger slot',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the slot of the lowest confirmed block that has not been purged from the ledger\n   */\n  async getFirstAvailableBlock(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('getFirstAvailableBlock', []);\n    const res = create(unsafeRes, SlotRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get first available block',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch information about the current supply\n   */\n  async getSupply(\n    config?: GetSupplyConfig | Commitment,\n  ): Promise<RpcResponseAndContext<Supply>> {\n    let configArg: GetSupplyConfig = {};\n    if (typeof config === 'string') {\n      configArg = {commitment: config};\n    } else if (config) {\n      configArg = {\n        ...config,\n        commitment: (config && config.commitment) || this.commitment,\n      };\n    } else {\n      configArg = {\n        commitment: this.commitment,\n      };\n    }\n\n    const unsafeRes = await this._rpcRequest('getSupply', [configArg]);\n    const res = create(unsafeRes, GetSupplyRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current supply of a token mint\n   */\n  async getTokenSupply(\n    tokenMintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenMintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenSupply', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get token supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current balance of a token account\n   */\n  async getTokenAccountBalance(\n    tokenAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenAccountBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get token account balance',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<GetProgramAccountsResponse>}\n   */\n  async getTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitmentOrConfig?: Commitment | GetTokenAccountsByOwnerConfig,\n  ): Promise<RpcResponseAndContext<GetProgramAccountsResponse>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get token accounts owned by account ${ownerAddress.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<ParsedAccountData>}>>>}\n   */\n  async getParsedTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<ParsedAccountData>}>\n    >\n  > {\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'jsonParsed');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetParsedTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get token accounts owned by account ${ownerAddress.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest accounts with their current balances\n   */\n  async getLargestAccounts(\n    config?: GetLargestAccountsConfig,\n  ): Promise<RpcResponseAndContext<Array<AccountBalancePair>>> {\n    const arg = {\n      ...config,\n      commitment: (config && config.commitment) || this.commitment,\n    };\n    const args = arg.filter || arg.commitment ? [arg] : [];\n    const unsafeRes = await this._rpcRequest('getLargestAccounts', args);\n    const res = create(unsafeRes, GetLargestAccountsRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get largest accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest token accounts with their current balances\n   * for a given mint.\n   */\n  async getTokenLargestAccounts(\n    mintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<Array<TokenAccountBalancePair>>> {\n    const args = this._buildArgs([mintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenLargestAccounts', args);\n    const res = create(unsafeRes, GetTokenLargestAccountsResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get token largest accounts',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key, return with context\n   */\n  async getAccountInfoAndContext(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<RpcResponseAndContext<AccountInfo<Buffer> | null>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'base64',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(AccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info about account ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed account info for the specified public key\n   */\n  async getParsedAccountInfo(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<\n    RpcResponseAndContext<AccountInfo<Buffer | ParsedAccountData> | null>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(ParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info about account ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key\n   */\n  async getAccountInfo(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<AccountInfo<Buffer> | null> {\n    try {\n      const res = await this.getAccountInfoAndContext(\n        publicKey,\n        commitmentOrConfig,\n      );\n      return res.value;\n    } catch (e) {\n      throw new Error(\n        'failed to get info about account ' + publicKey.toBase58() + ': ' + e,\n      );\n    }\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleParsedAccounts(\n    publicKeys: PublicKey[],\n    rawConfig?: GetMultipleAccountsConfig,\n  ): Promise<\n    RpcResponseAndContext<(AccountInfo<Buffer | ParsedAccountData> | null)[]>\n  > {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(array(nullable(ParsedAccountInfoResult))),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info for accounts ${keys}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleAccountsInfoAndContext(\n    publicKeys: PublicKey[],\n    commitmentOrConfig?: Commitment | GetMultipleAccountsConfig,\n  ): Promise<RpcResponseAndContext<(AccountInfo<Buffer> | null)[]>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(array(nullable(AccountInfoResult))),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info for accounts ${keys}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys\n   */\n  async getMultipleAccountsInfo(\n    publicKeys: PublicKey[],\n    commitmentOrConfig?: Commitment | GetMultipleAccountsConfig,\n  ): Promise<(AccountInfo<Buffer> | null)[]> {\n    const res = await this.getMultipleAccountsInfoAndContext(\n      publicKeys,\n      commitmentOrConfig,\n    );\n    return res.value;\n  }\n\n  /**\n   * Returns epoch activation information for a stake account that has been delegated\n   */\n  async getStakeActivation(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetStakeActivationConfig,\n    epoch?: number,\n  ): Promise<StakeActivationData> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined /* encoding */,\n      {\n        ...config,\n        epoch: epoch != null ? epoch : config?.epoch,\n      },\n    );\n\n    const unsafeRes = await this._rpcRequest('getStakeActivation', args);\n    const res = create(unsafeRes, jsonRpcResult(StakeActivationResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get Stake Activation ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>}\n   */\n  async getProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment: GetProgramAccountsConfig &\n      Readonly<{withContext: true}>,\n  ): Promise<RpcResponseAndContext<GetProgramAccountsResponse>>;\n  // eslint-disable-next-line no-dupe-class-members\n  async getProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetProgramAccountsConfig | Commitment,\n  ): Promise<GetProgramAccountsResponse>;\n  // eslint-disable-next-line no-dupe-class-members\n  async getProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetProgramAccountsConfig | Commitment,\n  ): Promise<\n    | GetProgramAccountsResponse\n    | RpcResponseAndContext<GetProgramAccountsResponse>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(configOrCommitment);\n    const {encoding, ...configWithoutEncoding} = config || {};\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      encoding || 'base64',\n      configWithoutEncoding,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const baseSchema = array(KeyedAccountInfoResult);\n    const res =\n      configWithoutEncoding.withContext === true\n        ? create(unsafeRes, jsonRpcResultAndContext(baseSchema))\n        : create(unsafeRes, jsonRpcResult(baseSchema));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get accounts owned by program ${programId.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch and parse all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer | ParsedAccountData>}>>}\n   */\n  async getParsedProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetParsedProgramAccountsConfig | Commitment,\n  ): Promise<\n    Array<{\n      pubkey: PublicKey;\n      account: AccountInfo<Buffer | ParsedAccountData>;\n    }>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(configOrCommitment);\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResult(array(KeyedParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get accounts owned by program ${programId.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  confirmTransaction(\n    strategy: TransactionConfirmationStrategy,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  /** @deprecated Instead, call `confirmTransaction` and pass in {@link TransactionConfirmationStrategy} */\n  // eslint-disable-next-line no-dupe-class-members\n  confirmTransaction(\n    strategy: TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async confirmTransaction(\n    strategy: TransactionConfirmationStrategy | TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>> {\n    let rawSignature: string;\n\n    if (typeof strategy == 'string') {\n      rawSignature = strategy;\n    } else {\n      const config = strategy as TransactionConfirmationStrategy;\n\n      if (config.abortSignal?.aborted) {\n        return Promise.reject(config.abortSignal.reason);\n      }\n      rawSignature = config.signature;\n    }\n\n    let decodedSignature;\n\n    try {\n      decodedSignature = bs58.decode(rawSignature);\n    } catch (err) {\n      throw new Error('signature must be base58 encoded: ' + rawSignature);\n    }\n\n    assert(decodedSignature.length === 64, 'signature has invalid length');\n\n    if (typeof strategy === 'string') {\n      return await this.confirmTransactionUsingLegacyTimeoutStrategy({\n        commitment: commitment || this.commitment,\n        signature: rawSignature,\n      });\n    } else if ('lastValidBlockHeight' in strategy) {\n      return await this.confirmTransactionUsingBlockHeightExceedanceStrategy({\n        commitment: commitment || this.commitment,\n        strategy,\n      });\n    } else {\n      return await this.confirmTransactionUsingDurableNonceStrategy({\n        commitment: commitment || this.commitment,\n        strategy,\n      });\n    }\n  }\n\n  private getCancellationPromise(signal?: AbortSignal): Promise<never> {\n    return new Promise<never>((_, reject) => {\n      if (signal == null) {\n        return;\n      }\n      if (signal.aborted) {\n        reject(signal.reason);\n      } else {\n        signal.addEventListener('abort', () => {\n          reject(signal.reason);\n        });\n      }\n    });\n  }\n\n  private getTransactionConfirmationPromise({\n    commitment,\n    signature,\n  }: {\n    commitment?: Commitment;\n    signature: string;\n  }): {\n    abortConfirmation(): void;\n    confirmationPromise: Promise<{\n      __type: TransactionStatus.PROCESSED;\n      response: RpcResponseAndContext<SignatureResult>;\n    }>;\n  } {\n    let signatureSubscriptionId: number | undefined;\n    let disposeSignatureSubscriptionStateChangeObserver:\n      | SubscriptionStateChangeDisposeFn\n      | undefined;\n    let done = false;\n    const confirmationPromise = new Promise<{\n      __type: TransactionStatus.PROCESSED;\n      response: RpcResponseAndContext<SignatureResult>;\n    }>((resolve, reject) => {\n      try {\n        signatureSubscriptionId = this.onSignature(\n          signature,\n          (result: SignatureResult, context: Context) => {\n            signatureSubscriptionId = undefined;\n            const response = {\n              context,\n              value: result,\n            };\n            resolve({__type: TransactionStatus.PROCESSED, response});\n          },\n          commitment,\n        );\n        const subscriptionSetupPromise = new Promise<void>(\n          resolveSubscriptionSetup => {\n            if (signatureSubscriptionId == null) {\n              resolveSubscriptionSetup();\n            } else {\n              disposeSignatureSubscriptionStateChangeObserver =\n                this._onSubscriptionStateChange(\n                  signatureSubscriptionId,\n                  nextState => {\n                    if (nextState === 'subscribed') {\n                      resolveSubscriptionSetup();\n                    }\n                  },\n                );\n            }\n          },\n        );\n        (async () => {\n          await subscriptionSetupPromise;\n          if (done) return;\n          const response = await this.getSignatureStatus(signature);\n          if (done) return;\n          if (response == null) {\n            return;\n          }\n          const {context, value} = response;\n          if (value == null) {\n            return;\n          }\n          if (value?.err) {\n            reject(value.err);\n          } else {\n            switch (commitment) {\n              case 'confirmed':\n              case 'single':\n              case 'singleGossip': {\n                if (value.confirmationStatus === 'processed') {\n                  return;\n                }\n                break;\n              }\n              case 'finalized':\n              case 'max':\n              case 'root': {\n                if (\n                  value.confirmationStatus === 'processed' ||\n                  value.confirmationStatus === 'confirmed'\n                ) {\n                  return;\n                }\n                break;\n              }\n              // exhaust enums to ensure full coverage\n              case 'processed':\n              case 'recent':\n            }\n            done = true;\n            resolve({\n              __type: TransactionStatus.PROCESSED,\n              response: {\n                context,\n                value,\n              },\n            });\n          }\n        })();\n      } catch (err) {\n        reject(err);\n      }\n    });\n    const abortConfirmation = () => {\n      if (disposeSignatureSubscriptionStateChangeObserver) {\n        disposeSignatureSubscriptionStateChangeObserver();\n        disposeSignatureSubscriptionStateChangeObserver = undefined;\n      }\n      if (signatureSubscriptionId != null) {\n        this.removeSignatureListener(signatureSubscriptionId);\n        signatureSubscriptionId = undefined;\n      }\n    };\n    return {abortConfirmation, confirmationPromise};\n  }\n\n  private async confirmTransactionUsingBlockHeightExceedanceStrategy({\n    commitment,\n    strategy: {abortSignal, lastValidBlockHeight, signature},\n  }: {\n    commitment?: Commitment;\n    strategy: BlockheightBasedTransactionConfirmationStrategy;\n  }) {\n    let done: boolean = false;\n    const expiryPromise = new Promise<{\n      __type: TransactionStatus.BLOCKHEIGHT_EXCEEDED;\n    }>(resolve => {\n      const checkBlockHeight = async () => {\n        try {\n          const blockHeight = await this.getBlockHeight(commitment);\n          return blockHeight;\n        } catch (_e) {\n          return -1;\n        }\n      };\n      (async () => {\n        let currentBlockHeight = await checkBlockHeight();\n        if (done) return;\n        while (currentBlockHeight <= lastValidBlockHeight) {\n          await sleep(1000);\n          if (done) return;\n          currentBlockHeight = await checkBlockHeight();\n          if (done) return;\n        }\n        resolve({__type: TransactionStatus.BLOCKHEIGHT_EXCEEDED});\n      })();\n    });\n    const {abortConfirmation, confirmationPromise} =\n      this.getTransactionConfirmationPromise({commitment, signature});\n    const cancellationPromise = this.getCancellationPromise(abortSignal);\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([\n        cancellationPromise,\n        confirmationPromise,\n        expiryPromise,\n      ]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        throw new TransactionExpiredBlockheightExceededError(signature);\n      }\n    } finally {\n      done = true;\n      abortConfirmation();\n    }\n    return result;\n  }\n\n  private async confirmTransactionUsingDurableNonceStrategy({\n    commitment,\n    strategy: {\n      abortSignal,\n      minContextSlot,\n      nonceAccountPubkey,\n      nonceValue,\n      signature,\n    },\n  }: {\n    commitment?: Commitment;\n    strategy: DurableNonceTransactionConfirmationStrategy;\n  }) {\n    let done: boolean = false;\n    const expiryPromise = new Promise<{\n      __type: TransactionStatus.NONCE_INVALID;\n      slotInWhichNonceDidAdvance: number | null;\n    }>(resolve => {\n      let currentNonceValue: string | undefined = nonceValue;\n      let lastCheckedSlot: number | null = null;\n      const getCurrentNonceValue = async () => {\n        try {\n          const {context, value: nonceAccount} = await this.getNonceAndContext(\n            nonceAccountPubkey,\n            {\n              commitment,\n              minContextSlot,\n            },\n          );\n          lastCheckedSlot = context.slot;\n          return nonceAccount?.nonce;\n        } catch (e) {\n          // If for whatever reason we can't reach/read the nonce\n          // account, just keep using the last-known value.\n          return currentNonceValue;\n        }\n      };\n      (async () => {\n        currentNonceValue = await getCurrentNonceValue();\n        if (done) return;\n        while (\n          true // eslint-disable-line no-constant-condition\n        ) {\n          if (nonceValue !== currentNonceValue) {\n            resolve({\n              __type: TransactionStatus.NONCE_INVALID,\n              slotInWhichNonceDidAdvance: lastCheckedSlot,\n            });\n            return;\n          }\n          await sleep(2000);\n          if (done) return;\n          currentNonceValue = await getCurrentNonceValue();\n          if (done) return;\n        }\n      })();\n    });\n    const {abortConfirmation, confirmationPromise} =\n      this.getTransactionConfirmationPromise({commitment, signature});\n    const cancellationPromise = this.getCancellationPromise(abortSignal);\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([\n        cancellationPromise,\n        confirmationPromise,\n        expiryPromise,\n      ]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        // Double check that the transaction is indeed unconfirmed.\n        let signatureStatus:\n          | RpcResponseAndContext<SignatureStatus | null>\n          | null\n          | undefined;\n        while (\n          true // eslint-disable-line no-constant-condition\n        ) {\n          const status = await this.getSignatureStatus(signature);\n          if (status == null) {\n            break;\n          }\n          if (\n            status.context.slot <\n            (outcome.slotInWhichNonceDidAdvance ?? minContextSlot)\n          ) {\n            await sleep(400);\n            continue;\n          }\n          signatureStatus = status;\n          break;\n        }\n        if (signatureStatus?.value) {\n          const commitmentForStatus = commitment || 'finalized';\n          const {confirmationStatus} = signatureStatus.value;\n          switch (commitmentForStatus) {\n            case 'processed':\n            case 'recent':\n              if (\n                confirmationStatus !== 'processed' &&\n                confirmationStatus !== 'confirmed' &&\n                confirmationStatus !== 'finalized'\n              ) {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            case 'confirmed':\n            case 'single':\n            case 'singleGossip':\n              if (\n                confirmationStatus !== 'confirmed' &&\n                confirmationStatus !== 'finalized'\n              ) {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            case 'finalized':\n            case 'max':\n            case 'root':\n              if (confirmationStatus !== 'finalized') {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            default:\n              // Exhaustive switch.\n              // eslint-disable-next-line @typescript-eslint/no-unused-vars\n              ((_: never) => {})(commitmentForStatus);\n          }\n          result = {\n            context: signatureStatus.context,\n            value: {err: signatureStatus.value.err},\n          };\n        } else {\n          throw new TransactionExpiredNonceInvalidError(signature);\n        }\n      }\n    } finally {\n      done = true;\n      abortConfirmation();\n    }\n    return result;\n  }\n\n  private async confirmTransactionUsingLegacyTimeoutStrategy({\n    commitment,\n    signature,\n  }: {\n    commitment?: Commitment;\n    signature: string;\n  }) {\n    let timeoutId;\n    const expiryPromise = new Promise<{\n      __type: TransactionStatus.TIMED_OUT;\n      timeoutMs: number;\n    }>(resolve => {\n      let timeoutMs = this._confirmTransactionInitialTimeout || 60 * 1000;\n      switch (commitment) {\n        case 'processed':\n        case 'recent':\n        case 'single':\n        case 'confirmed':\n        case 'singleGossip': {\n          timeoutMs = this._confirmTransactionInitialTimeout || 30 * 1000;\n          break;\n        }\n        // exhaust enums to ensure full coverage\n        case 'finalized':\n        case 'max':\n        case 'root':\n      }\n      timeoutId = setTimeout(\n        () => resolve({__type: TransactionStatus.TIMED_OUT, timeoutMs}),\n        timeoutMs,\n      );\n    });\n    const {abortConfirmation, confirmationPromise} =\n      this.getTransactionConfirmationPromise({\n        commitment,\n        signature,\n      });\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([confirmationPromise, expiryPromise]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        throw new TransactionExpiredTimeoutError(\n          signature,\n          outcome.timeoutMs / 1000,\n        );\n      }\n    } finally {\n      clearTimeout(timeoutId);\n      abortConfirmation();\n    }\n    return result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getClusterNodes(): Promise<Array<ContactInfo>> {\n    const unsafeRes = await this._rpcRequest('getClusterNodes', []);\n    const res = create(unsafeRes, jsonRpcResult(array(ContactInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get cluster nodes');\n    }\n    return res.result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getVoteAccounts(commitment?: Commitment): Promise<VoteAccountStatus> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getVoteAccounts', args);\n    const res = create(unsafeRes, GetVoteAccounts);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get vote accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot that the node is processing\n   */\n  async getSlot(\n    commitmentOrConfig?: Commitment | GetSlotConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getSlot', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot leader of the cluster\n   */\n  async getSlotLeader(\n    commitmentOrConfig?: Commitment | GetSlotLeaderConfig,\n  ): Promise<string> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getSlotLeader', args);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leader');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch `limit` number of slot leaders starting from `startSlot`\n   *\n   * @param startSlot fetch slot leaders starting from this slot\n   * @param limit number of slot leaders to return\n   */\n  async getSlotLeaders(\n    startSlot: number,\n    limit: number,\n  ): Promise<Array<PublicKey>> {\n    const args = [startSlot, limit];\n    const unsafeRes = await this._rpcRequest('getSlotLeaders', args);\n    const res = create(unsafeRes, jsonRpcResult(array(PublicKeyFromString)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leaders');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current status of a signature\n   */\n  async getSignatureStatus(\n    signature: TransactionSignature,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<SignatureStatus | null>> {\n    const {context, value: values} = await this.getSignatureStatuses(\n      [signature],\n      config,\n    );\n    assert(values.length === 1);\n    const value = values[0];\n    return {context, value};\n  }\n\n  /**\n   * Fetch the current statuses of a batch of signatures\n   */\n  async getSignatureStatuses(\n    signatures: Array<TransactionSignature>,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<Array<SignatureStatus | null>>> {\n    const params: any[] = [signatures];\n    if (config) {\n      params.push(config);\n    }\n    const unsafeRes = await this._rpcRequest('getSignatureStatuses', params);\n    const res = create(unsafeRes, GetSignatureStatusesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get signature status');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current transaction count of the cluster\n   */\n  async getTransactionCount(\n    commitmentOrConfig?: Commitment | GetTransactionCountConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransactionCount', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get transaction count',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current total currency supply of the cluster in lamports\n   *\n   * @deprecated Deprecated since v1.2.8. Please use {@link getSupply} instead.\n   */\n  async getTotalSupply(commitment?: Commitment): Promise<number> {\n    const result = await this.getSupply({\n      commitment,\n      excludeNonCirculatingAccountsList: true,\n    });\n    return result.value.total;\n  }\n\n  /**\n   * Fetch the cluster InflationGovernor parameters\n   */\n  async getInflationGovernor(\n    commitment?: Commitment,\n  ): Promise<InflationGovernor> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getInflationGovernor', args);\n    const res = create(unsafeRes, GetInflationGovernorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the inflation reward for a list of addresses for an epoch\n   */\n  async getInflationReward(\n    addresses: PublicKey[],\n    epoch?: number,\n    commitmentOrConfig?: Commitment | GetInflationRewardConfig,\n  ): Promise<(InflationReward | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [addresses.map(pubkey => pubkey.toBase58())],\n      commitment,\n      undefined /* encoding */,\n      {\n        ...config,\n        epoch: epoch != null ? epoch : config?.epoch,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getInflationReward', args);\n    const res = create(unsafeRes, GetInflationRewardResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation reward');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the specific inflation values for the current epoch\n   */\n  async getInflationRate(): Promise<InflationRate> {\n    const unsafeRes = await this._rpcRequest('getInflationRate', []);\n    const res = create(unsafeRes, GetInflationRateRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation rate');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Info parameters\n   */\n  async getEpochInfo(\n    commitmentOrConfig?: Commitment | GetEpochInfoConfig,\n  ): Promise<EpochInfo> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getEpochInfo', args);\n    const res = create(unsafeRes, GetEpochInfoRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch info');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Schedule parameters\n   */\n  async getEpochSchedule(): Promise<EpochSchedule> {\n    const unsafeRes = await this._rpcRequest('getEpochSchedule', []);\n    const res = create(unsafeRes, GetEpochScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch schedule');\n    }\n    const epochSchedule = res.result;\n    return new EpochSchedule(\n      epochSchedule.slotsPerEpoch,\n      epochSchedule.leaderScheduleSlotOffset,\n      epochSchedule.warmup,\n      epochSchedule.firstNormalEpoch,\n      epochSchedule.firstNormalSlot,\n    );\n  }\n\n  /**\n   * Fetch the leader schedule for the current epoch\n   * @return {Promise<RpcResponseAndContext<LeaderSchedule>>}\n   */\n  async getLeaderSchedule(): Promise<LeaderSchedule> {\n    const unsafeRes = await this._rpcRequest('getLeaderSchedule', []);\n    const res = create(unsafeRes, GetLeaderScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get leader schedule');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the minimum balance needed to exempt an account of `dataLength`\n   * size from rent\n   */\n  async getMinimumBalanceForRentExemption(\n    dataLength: number,\n    commitment?: Commitment,\n  ): Promise<number> {\n    const args = this._buildArgs([dataLength], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getMinimumBalanceForRentExemption',\n      args,\n    );\n    const res = create(unsafeRes, GetMinimumBalanceForRentExemptionRpcResult);\n    if ('error' in res) {\n      console.warn('Unable to fetch minimum balance for rent exemption');\n      return 0;\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster, return with context\n   * @return {Promise<RpcResponseAndContext<{blockhash: Blockhash, feeCalculator: FeeCalculator}>>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhashAndContext(commitment?: Commitment): Promise<\n    RpcResponseAndContext<{\n      blockhash: Blockhash;\n      feeCalculator: FeeCalculator;\n    }>\n  > {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getRecentBlockhash', args);\n    const res = create(unsafeRes, GetRecentBlockhashAndContextRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get recent blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch recent performance samples\n   * @return {Promise<Array<PerfSample>>}\n   */\n  async getRecentPerformanceSamples(\n    limit?: number,\n  ): Promise<Array<PerfSample>> {\n    const unsafeRes = await this._rpcRequest(\n      'getRecentPerformanceSamples',\n      limit ? [limit] : [],\n    );\n    const res = create(unsafeRes, GetRecentPerformanceSamplesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get recent performance samples',\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch the fee calculator for a recent blockhash from the cluster, return with context\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getFeeForMessage} instead.\n   */\n  async getFeeCalculatorForBlockhash(\n    blockhash: Blockhash,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<FeeCalculator | null>> {\n    const args = this._buildArgs([blockhash], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getFeeCalculatorForBlockhash',\n      args,\n    );\n\n    const res = create(unsafeRes, GetFeeCalculatorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee calculator');\n    }\n    const {context, value} = res.result;\n    return {\n      context,\n      value: value !== null ? value.feeCalculator : null,\n    };\n  }\n\n  /**\n   * Fetch the fee for a message from the cluster, return with context\n   */\n  async getFeeForMessage(\n    message: VersionedMessage,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<number | null>> {\n    const wireMessage = toBuffer(message.serialize()).toString('base64');\n    const args = this._buildArgs([wireMessage], commitment);\n    const unsafeRes = await this._rpcRequest('getFeeForMessage', args);\n\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee for message');\n    }\n    if (res.result === null) {\n      throw new Error('invalid blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of prioritization fees from recent blocks.\n   */\n  async getRecentPrioritizationFees(\n    config?: GetRecentPrioritizationFeesConfig,\n  ): Promise<RecentPrioritizationFees[]> {\n    const accounts = config?.lockedWritableAccounts?.map(key => key.toBase58());\n    const args = accounts?.length ? [accounts] : [];\n    const unsafeRes = await this._rpcRequest(\n      'getRecentPrioritizationFees',\n      args,\n    );\n    const res = create(unsafeRes, GetRecentPrioritizationFeesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get recent prioritization fees',\n      );\n    }\n    return res.result;\n  }\n  /**\n   * Fetch a recent blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, feeCalculator: FeeCalculator}>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhash(\n    commitment?: Commitment,\n  ): Promise<{blockhash: Blockhash; feeCalculator: FeeCalculator}> {\n    try {\n      const res = await this.getRecentBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhash(\n    commitmentOrConfig?: Commitment | GetLatestBlockhashConfig,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    try {\n      const res = await this.getLatestBlockhashAndContext(commitmentOrConfig);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhashAndContext(\n    commitmentOrConfig?: Commitment | GetLatestBlockhashConfig,\n  ): Promise<RpcResponseAndContext<BlockhashWithExpiryBlockHeight>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getLatestBlockhash', args);\n    const res = create(unsafeRes, GetLatestBlockhashRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get latest blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns whether a blockhash is still valid or not\n   */\n  async isBlockhashValid(\n    blockhash: Blockhash,\n    rawConfig?: IsBlockhashValidConfig,\n  ): Promise<RpcResponseAndContext<boolean>> {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgs(\n      [blockhash],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('isBlockhashValid', args);\n    const res = create(unsafeRes, IsBlockhashValidRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to determine if the blockhash `' + blockhash + '`is valid',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the node version\n   */\n  async getVersion(): Promise<Version> {\n    const unsafeRes = await this._rpcRequest('getVersion', []);\n    const res = create(unsafeRes, jsonRpcResult(VersionResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get version');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the genesis hash\n   */\n  async getGenesisHash(): Promise<string> {\n    const unsafeRes = await this._rpcRequest('getGenesisHash', []);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get genesis hash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a processed block from the cluster.\n   *\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  async getBlock(\n    slot: number,\n    rawConfig?: GetBlockConfig,\n  ): Promise<BlockResponse | null>;\n\n  /**\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetBlockConfig & {transactionDetails: 'accounts'},\n  ): Promise<AccountsModeBlockResponse | null>;\n\n  /**\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetBlockConfig & {transactionDetails: 'none'},\n  ): Promise<NoneModeBlockResponse | null>;\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<VersionedBlockResponse | null>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'accounts'},\n  ): Promise<VersionedAccountsModeBlockResponse | null>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'none'},\n  ): Promise<VersionedNoneModeBlockResponse | null>;\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<\n    | VersionedBlockResponse\n    | VersionedAccountsModeBlockResponse\n    | VersionedNoneModeBlockResponse\n    | null\n  > {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment as Finality,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    try {\n      switch (config?.transactionDetails) {\n        case 'accounts': {\n          const res = create(unsafeRes, GetAccountsModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        case 'none': {\n          const res = create(unsafeRes, GetNoneModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        default: {\n          const res = create(unsafeRes, GetBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          const {result} = res;\n          return result\n            ? {\n                ...result,\n                transactions: result.transactions.map(\n                  ({transaction, meta, version}) => ({\n                    meta,\n                    transaction: {\n                      ...transaction,\n                      message: versionedMessageFromResponse(\n                        version,\n                        transaction.message,\n                      ),\n                    },\n                    version,\n                  }),\n                ),\n              }\n            : null;\n        }\n      }\n    } catch (e) {\n      throw new SolanaJSONRPCError(\n        e as JSONRPCError,\n        'failed to get confirmed block',\n      );\n    }\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized block\n   */\n  async getParsedBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<ParsedAccountsModeBlockResponse>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getParsedBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'accounts'},\n  ): Promise<ParsedAccountsModeBlockResponse>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getParsedBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'none'},\n  ): Promise<ParsedNoneModeBlockResponse>;\n  // eslint-disable-next-line no-dupe-class-members\n  async getParsedBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<\n    | ParsedBlockResponse\n    | ParsedAccountsModeBlockResponse\n    | ParsedNoneModeBlockResponse\n    | null\n  > {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment as Finality,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    try {\n      switch (config?.transactionDetails) {\n        case 'accounts': {\n          const res = create(unsafeRes, GetParsedAccountsModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        case 'none': {\n          const res = create(unsafeRes, GetParsedNoneModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        default: {\n          const res = create(unsafeRes, GetParsedBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n      }\n    } catch (e) {\n      throw new SolanaJSONRPCError(e as JSONRPCError, 'failed to get block');\n    }\n  }\n\n  /*\n   * Returns the current block height of the node\n   */\n  getBlockHeight = (() => {\n    const requestPromises: {[hash: string]: Promise<number>} = {};\n    return async (\n      commitmentOrConfig?: Commitment | GetBlockHeightConfig,\n    ): Promise<number> => {\n      const {commitment, config} =\n        extractCommitmentFromConfig(commitmentOrConfig);\n      const args = this._buildArgs(\n        [],\n        commitment,\n        undefined /* encoding */,\n        config,\n      );\n      const requestHash = fastStableStringify(args);\n      requestPromises[requestHash] =\n        requestPromises[requestHash] ??\n        (async () => {\n          try {\n            const unsafeRes = await this._rpcRequest('getBlockHeight', args);\n            const res = create(unsafeRes, jsonRpcResult(number()));\n            if ('error' in res) {\n              throw new SolanaJSONRPCError(\n                res.error,\n                'failed to get block height information',\n              );\n            }\n            return res.result;\n          } finally {\n            delete requestPromises[requestHash];\n          }\n        })();\n      return await requestPromises[requestHash];\n    };\n  })();\n\n  /*\n   * Returns recent block production information from the current or previous epoch\n   */\n  async getBlockProduction(\n    configOrCommitment?: GetBlockProductionConfig | Commitment,\n  ): Promise<RpcResponseAndContext<BlockProduction>> {\n    let extra: Omit<GetBlockProductionConfig, 'commitment'> | undefined;\n    let commitment: Commitment | undefined;\n\n    if (typeof configOrCommitment === 'string') {\n      commitment = configOrCommitment;\n    } else if (configOrCommitment) {\n      const {commitment: c, ...rest} = configOrCommitment;\n      commitment = c;\n      extra = rest;\n    }\n\n    const args = this._buildArgs([], commitment, 'base64', extra);\n    const unsafeRes = await this._rpcRequest('getBlockProduction', args);\n    const res = create(unsafeRes, BlockProductionResponseStruct);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get block production information',\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   *\n   * @deprecated Instead, call `getTransaction` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n  async getTransaction(\n    signature: string,\n    rawConfig?: GetTransactionConfig,\n  ): Promise<TransactionResponse | null>;\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransaction(\n    signature: string,\n    rawConfig: GetVersionedTransactionConfig,\n  ): Promise<VersionedTransactionResponse | null>;\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransaction(\n    signature: string,\n    rawConfig?: GetVersionedTransactionConfig,\n  ): Promise<VersionedTransactionResponse | null> {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment as Finality,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    return {\n      ...result,\n      transaction: {\n        ...result.transaction,\n        message: versionedMessageFromResponse(\n          result.version,\n          result.transaction.message,\n        ),\n      },\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized transaction\n   */\n  async getParsedTransaction(\n    signature: TransactionSignature,\n    commitmentOrConfig?: GetVersionedTransactionConfig | Finality,\n  ): Promise<ParsedTransactionWithMeta | null> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment as Finality,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   */\n  async getParsedTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig?: GetVersionedTransactionConfig | Finality,\n  ): Promise<(ParsedTransactionWithMeta | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment as Finality,\n        'jsonParsed',\n        config,\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link TransactionResponse}.\n   *\n   * @deprecated Instead, call `getTransactions` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig?: GetTransactionConfig | Finality,\n  ): Promise<(TransactionResponse | null)[]>;\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig: GetVersionedTransactionConfig | Finality,\n  ): Promise<(VersionedTransactionResponse | null)[]>;\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig: GetVersionedTransactionConfig | Finality,\n  ): Promise<(VersionedTransactionResponse | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment as Finality,\n        undefined /* encoding */,\n        config,\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      const result = res.result;\n      if (!result) return result;\n\n      return {\n        ...result,\n        transaction: {\n          ...result.transaction,\n          message: versionedMessageFromResponse(\n            result.version,\n            result.transaction.message,\n          ),\n        },\n      };\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of Transactions and transaction statuses from the cluster\n   * for a confirmed block.\n   *\n   * @deprecated Deprecated since v1.13.0. Please use {@link getBlock} instead.\n   */\n  async getConfirmedBlock(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<ConfirmedBlock> {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetConfirmedBlockRpcResult);\n\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n\n    const block = {\n      ...result,\n      transactions: result.transactions.map(({transaction, meta}) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: {\n            ...transaction,\n            message,\n          },\n        };\n      }),\n    };\n\n    return {\n      ...block,\n      transactions: block.transactions.map(({transaction, meta}) => {\n        return {\n          meta,\n          transaction: Transaction.populate(\n            transaction.message,\n            transaction.signatures,\n          ),\n        };\n      }),\n    };\n  }\n\n  /**\n   * Fetch confirmed blocks between two slots\n   */\n  async getBlocks(\n    startSlot: number,\n    endSlot?: number,\n    commitment?: Finality,\n  ): Promise<Array<number>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      endSlot !== undefined ? [startSlot, endSlot] : [startSlot],\n      commitment,\n    );\n    const unsafeRes = await this._rpcRequest('getBlocks', args);\n    const res = create(unsafeRes, jsonRpcResult(array(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get blocks');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a block, excluding rewards\n   */\n  async getBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a confirmed block, excluding rewards\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getBlockSignatures} instead.\n   */\n  async getConfirmedBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getTransaction} instead.\n   */\n  async getConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    const message = new Message(result.transaction.message);\n    const signatures = result.transaction.signatures;\n    return {\n      ...result,\n      transaction: Transaction.populate(message, signatures),\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransaction} instead.\n   */\n  async getParsedConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ParsedConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get confirmed transaction',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransactions} instead.\n   */\n  async getParsedConfirmedTransactions(\n    signatures: TransactionSignature[],\n    commitment?: Finality,\n  ): Promise<(ParsedConfirmedTransaction | null)[]> {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment,\n        'jsonParsed',\n      );\n      return {\n        methodName: 'getConfirmedTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(\n          res.error,\n          'failed to get confirmed transactions',\n        );\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of all the confirmed signatures for transactions involving an address\n   * within a specified slot range. Max range allowed is 10,000 slots.\n   *\n   * @deprecated Deprecated since v1.3. Please use {@link getConfirmedSignaturesForAddress2} instead.\n   *\n   * @param address queried address\n   * @param startSlot start slot, inclusive\n   * @param endSlot end slot, inclusive\n   */\n  async getConfirmedSignaturesForAddress(\n    address: PublicKey,\n    startSlot: number,\n    endSlot: number,\n  ): Promise<Array<TransactionSignature>> {\n    let options: any = {};\n\n    let firstAvailableBlock = await this.getFirstAvailableBlock();\n    while (!('until' in options)) {\n      startSlot--;\n      if (startSlot <= 0 || startSlot < firstAvailableBlock) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(\n          startSlot,\n          'finalized',\n        );\n        if (block.signatures.length > 0) {\n          options.until =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    let highestConfirmedRoot = await this.getSlot('finalized');\n    while (!('before' in options)) {\n      endSlot++;\n      if (endSlot > highestConfirmedRoot) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(endSlot);\n        if (block.signatures.length > 0) {\n          options.before =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    const confirmedSignatureInfo = await this.getConfirmedSignaturesForAddress2(\n      address,\n      options,\n    );\n    return confirmedSignatureInfo.map(info => info.signature);\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getConfirmedSignaturesForAddress2(\n    address: PublicKey,\n    options?: ConfirmedSignaturesForAddress2Options,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest(\n      'getConfirmedSignaturesForAddress2',\n      args,\n    );\n    const res = create(unsafeRes, GetConfirmedSignaturesForAddress2RpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get confirmed signatures for address',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getSignaturesForAddress(\n    address: PublicKey,\n    options?: SignaturesForAddressOptions,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest('getSignaturesForAddress', args);\n    const res = create(unsafeRes, GetSignaturesForAddressRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get signatures for address',\n      );\n    }\n    return res.result;\n  }\n\n  async getAddressLookupTable(\n    accountKey: PublicKey,\n    config?: GetAccountInfoConfig,\n  ): Promise<RpcResponseAndContext<AddressLookupTableAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      accountKey,\n      config,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = new AddressLookupTableAccount({\n        key: accountKey,\n        state: AddressLookupTableAccount.deserialize(accountInfo.data),\n      });\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster, return with context\n   */\n  async getNonceAndContext(\n    nonceAccount: PublicKey,\n    commitmentOrConfig?: Commitment | GetNonceAndContextConfig,\n  ): Promise<RpcResponseAndContext<NonceAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      nonceAccount,\n      commitmentOrConfig,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = NonceAccount.fromAccountData(accountInfo.data);\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster\n   */\n  async getNonce(\n    nonceAccount: PublicKey,\n    commitmentOrConfig?: Commitment | GetNonceConfig,\n  ): Promise<NonceAccount | null> {\n    return await this.getNonceAndContext(nonceAccount, commitmentOrConfig)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get nonce for account ' +\n            nonceAccount.toBase58() +\n            ': ' +\n            e,\n        );\n      });\n  }\n\n  /**\n   * Request an allocation of lamports to the specified address\n   *\n   * ```typescript\n   * import { Connection, PublicKey, LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n   *\n   * (async () => {\n   *   const connection = new Connection(\"https://api.testnet.solana.com\", \"confirmed\");\n   *   const myAddress = new PublicKey(\"2nr1bHFT86W9tGnyvmYW4vcHKsQB3sVQfnddasz4kExM\");\n   *   const signature = await connection.requestAirdrop(myAddress, LAMPORTS_PER_SOL);\n   *   await connection.confirmTransaction(signature);\n   * })();\n   * ```\n   */\n  async requestAirdrop(\n    to: PublicKey,\n    lamports: number,\n  ): Promise<TransactionSignature> {\n    const unsafeRes = await this._rpcRequest('requestAirdrop', [\n      to.toBase58(),\n      lamports,\n    ]);\n    const res = create(unsafeRes, RequestAirdropRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `airdrop to ${to.toBase58()} failed`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  async _blockhashWithExpiryBlockHeight(\n    disableCache: boolean,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    if (!disableCache) {\n      // Wait for polling to finish\n      while (this._pollingBlockhash) {\n        await sleep(100);\n      }\n      const timeSinceFetch = Date.now() - this._blockhashInfo.lastFetch;\n      const expired = timeSinceFetch >= BLOCKHASH_CACHE_TIMEOUT_MS;\n      if (this._blockhashInfo.latestBlockhash !== null && !expired) {\n        return this._blockhashInfo.latestBlockhash;\n      }\n    }\n\n    return await this._pollNewBlockhash();\n  }\n\n  /**\n   * @internal\n   */\n  async _pollNewBlockhash(): Promise<BlockhashWithExpiryBlockHeight> {\n    this._pollingBlockhash = true;\n    try {\n      const startTime = Date.now();\n      const cachedLatestBlockhash = this._blockhashInfo.latestBlockhash;\n      const cachedBlockhash = cachedLatestBlockhash\n        ? cachedLatestBlockhash.blockhash\n        : null;\n      for (let i = 0; i < 50; i++) {\n        const latestBlockhash = await this.getLatestBlockhash('finalized');\n\n        if (cachedBlockhash !== latestBlockhash.blockhash) {\n          this._blockhashInfo = {\n            latestBlockhash,\n            lastFetch: Date.now(),\n            transactionSignatures: [],\n            simulatedSignatures: [],\n          };\n          return latestBlockhash;\n        }\n\n        // Sleep for approximately half a slot\n        await sleep(MS_PER_SLOT / 2);\n      }\n\n      throw new Error(\n        `Unable to obtain a new blockhash after ${Date.now() - startTime}ms`,\n      );\n    } finally {\n      this._pollingBlockhash = false;\n    }\n  }\n\n  /**\n   * get the stake minimum delegation\n   */\n  async getStakeMinimumDelegation(\n    config?: GetStakeMinimumDelegationConfig,\n  ): Promise<RpcResponseAndContext<number>> {\n    const {commitment, config: configArg} = extractCommitmentFromConfig(config);\n    const args = this._buildArgs([], commitment, 'base64', configArg);\n    const unsafeRes = await this._rpcRequest('getStakeMinimumDelegation', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get stake minimum delegation`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Simulate a transaction\n   *\n   * @deprecated Instead, call {@link simulateTransaction} with {@link\n   * VersionedTransaction} and {@link SimulateTransactionConfig} parameters\n   */\n  simulateTransaction(\n    transactionOrMessage: Transaction | Message,\n    signers?: Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>>;\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  simulateTransaction(\n    transaction: VersionedTransaction,\n    config?: SimulateTransactionConfig,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>>;\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async simulateTransaction(\n    transactionOrMessage: VersionedTransaction | Transaction | Message,\n    configOrSigners?: SimulateTransactionConfig | Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\n    if ('message' in transactionOrMessage) {\n      const versionedTx = transactionOrMessage;\n      const wireTransaction = versionedTx.serialize();\n      const encodedTransaction =\n        Buffer.from(wireTransaction).toString('base64');\n      if (Array.isArray(configOrSigners) || includeAccounts !== undefined) {\n        throw new Error('Invalid arguments');\n      }\n\n      const config: any = configOrSigners || {};\n      config.encoding = 'base64';\n      if (!('commitment' in config)) {\n        config.commitment = this.commitment;\n      }\n\n      const args = [encodedTransaction, config];\n      const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n      const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n      if ('error' in res) {\n        throw new Error('failed to simulate transaction: ' + res.error.message);\n      }\n      return res.result;\n    }\n\n    let transaction;\n    if (transactionOrMessage instanceof Transaction) {\n      let originalTx: Transaction = transactionOrMessage;\n      transaction = new Transaction();\n      transaction.feePayer = originalTx.feePayer;\n      transaction.instructions = transactionOrMessage.instructions;\n      transaction.nonceInfo = originalTx.nonceInfo;\n      transaction.signatures = originalTx.signatures;\n    } else {\n      transaction = Transaction.populate(transactionOrMessage);\n      // HACK: this function relies on mutating the populated transaction\n      transaction._message = transaction._json = undefined;\n    }\n\n    if (configOrSigners !== undefined && !Array.isArray(configOrSigners)) {\n      throw new Error('Invalid arguments');\n    }\n\n    const signers = configOrSigners;\n    if (transaction.nonceInfo && signers) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(\n          disableCache,\n        );\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n\n        if (!signers) break;\n\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (\n          !this._blockhashInfo.simulatedSignatures.includes(signature) &&\n          !this._blockhashInfo.transactionSignatures.includes(signature)\n        ) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.simulatedSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const message = transaction._compile();\n    const signData = message.serialize();\n    const wireTransaction = transaction._serialize(signData);\n    const encodedTransaction = wireTransaction.toString('base64');\n    const config: any = {\n      encoding: 'base64',\n      commitment: this.commitment,\n    };\n\n    if (includeAccounts) {\n      const addresses = (\n        Array.isArray(includeAccounts)\n          ? includeAccounts\n          : message.nonProgramIds()\n      ).map(key => key.toBase58());\n\n      config['accounts'] = {\n        encoding: 'base64',\n        addresses,\n      };\n    }\n\n    if (signers) {\n      config.sigVerify = true;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n    const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n        if (logs && Array.isArray(logs)) {\n          const traceIndent = '\\n    ';\n          const logTrace = traceIndent + logs.join(traceIndent);\n          console.error(res.error.message, logTrace);\n        }\n      }\n      throw new SendTransactionError(\n        'failed to simulate transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Sign and send a transaction\n   *\n   * @deprecated Instead, call {@link sendTransaction} with a {@link\n   * VersionedTransaction}\n   */\n  sendTransaction(\n    transaction: Transaction,\n    signers: Array<Signer>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature>;\n\n  /**\n   * Send a signed transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  sendTransaction(\n    transaction: VersionedTransaction,\n    options?: SendOptions,\n  ): Promise<TransactionSignature>;\n\n  /**\n   * Sign and send a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async sendTransaction(\n    transaction: VersionedTransaction | Transaction,\n    signersOrOptions?: Array<Signer> | SendOptions,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    if ('version' in transaction) {\n      if (signersOrOptions && Array.isArray(signersOrOptions)) {\n        throw new Error('Invalid arguments');\n      }\n\n      const wireTransaction = transaction.serialize();\n      return await this.sendRawTransaction(wireTransaction, signersOrOptions);\n    }\n\n    if (signersOrOptions === undefined || !Array.isArray(signersOrOptions)) {\n      throw new Error('Invalid arguments');\n    }\n\n    const signers = signersOrOptions;\n    if (transaction.nonceInfo) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(\n          disableCache,\n        );\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (!this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.transactionSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const wireTransaction = transaction.serialize();\n    return await this.sendRawTransaction(wireTransaction, options);\n  }\n\n  /**\n   * Send a transaction that has already been signed and serialized into the\n   * wire format\n   */\n  async sendRawTransaction(\n    rawTransaction: Buffer | Uint8Array | Array<number>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const encodedTransaction = toBuffer(rawTransaction).toString('base64');\n    const result = await this.sendEncodedTransaction(\n      encodedTransaction,\n      options,\n    );\n    return result;\n  }\n\n  /**\n   * Send a transaction that has already been signed, serialized into the\n   * wire format, and encoded as a base64 string\n   */\n  async sendEncodedTransaction(\n    encodedTransaction: string,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const config: any = {encoding: 'base64'};\n    const skipPreflight = options && options.skipPreflight;\n    const preflightCommitment =\n      (options && options.preflightCommitment) || this.commitment;\n\n    if (options && options.maxRetries != null) {\n      config.maxRetries = options.maxRetries;\n    }\n    if (options && options.minContextSlot != null) {\n      config.minContextSlot = options.minContextSlot;\n    }\n    if (skipPreflight) {\n      config.skipPreflight = skipPreflight;\n    }\n    if (preflightCommitment) {\n      config.preflightCommitment = preflightCommitment;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('sendTransaction', args);\n    const res = create(unsafeRes, SendTransactionRpcResult);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n      }\n      throw new SendTransactionError(\n        'failed to send transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnOpen() {\n    this._rpcWebSocketConnected = true;\n    this._rpcWebSocketHeartbeat = setInterval(() => {\n      // Ping server every 5s to prevent idle timeouts\n      (async () => {\n        try {\n          await this._rpcWebSocket.notify('ping');\n          // eslint-disable-next-line no-empty\n        } catch {}\n      })();\n    }, 5000);\n    this._updateSubscriptions();\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnError(err: Error) {\n    this._rpcWebSocketConnected = false;\n    console.error('ws error:', err.message);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnClose(code: number) {\n    this._rpcWebSocketConnected = false;\n    this._rpcWebSocketGeneration =\n      (this._rpcWebSocketGeneration + 1) % Number.MAX_SAFE_INTEGER;\n    if (this._rpcWebSocketIdleTimeout) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n    }\n    if (this._rpcWebSocketHeartbeat) {\n      clearInterval(this._rpcWebSocketHeartbeat);\n      this._rpcWebSocketHeartbeat = null;\n    }\n\n    if (code === 1000) {\n      // explicit close, check if any subscriptions have been made since close\n      this._updateSubscriptions();\n      return;\n    }\n\n    // implicit close, prepare subscriptions for auto-reconnect\n    this._subscriptionCallbacksByServerSubscriptionId = {};\n    Object.entries(\n      this._subscriptionsByHash as Record<SubscriptionConfigHash, Subscription>,\n    ).forEach(([hash, subscription]) => {\n      this._setSubscription(hash, {\n        ...subscription,\n        state: 'pending',\n      });\n    });\n  }\n\n  /**\n   * @internal\n   */\n  private _setSubscription(\n    hash: SubscriptionConfigHash,\n    nextSubscription: Subscription,\n  ) {\n    const prevState = this._subscriptionsByHash[hash]?.state;\n    this._subscriptionsByHash[hash] = nextSubscription;\n    if (prevState !== nextSubscription.state) {\n      const stateChangeCallbacks =\n        this._subscriptionStateChangeCallbacksByHash[hash];\n      if (stateChangeCallbacks) {\n        stateChangeCallbacks.forEach(cb => {\n          try {\n            cb(nextSubscription.state);\n            // eslint-disable-next-line no-empty\n          } catch {}\n        });\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  private _onSubscriptionStateChange(\n    clientSubscriptionId: ClientSubscriptionId,\n    callback: SubscriptionStateChangeCallback,\n  ): SubscriptionStateChangeDisposeFn {\n    const hash =\n      this._subscriptionHashByClientSubscriptionId[clientSubscriptionId];\n    if (hash == null) {\n      return () => {};\n    }\n    const stateChangeCallbacks = (this._subscriptionStateChangeCallbacksByHash[\n      hash\n    ] ||= new Set());\n    stateChangeCallbacks.add(callback);\n    return () => {\n      stateChangeCallbacks.delete(callback);\n      if (stateChangeCallbacks.size === 0) {\n        delete this._subscriptionStateChangeCallbacksByHash[hash];\n      }\n    };\n  }\n\n  /**\n   * @internal\n   */\n  async _updateSubscriptions() {\n    if (Object.keys(this._subscriptionsByHash).length === 0) {\n      if (this._rpcWebSocketConnected) {\n        this._rpcWebSocketConnected = false;\n        this._rpcWebSocketIdleTimeout = setTimeout(() => {\n          this._rpcWebSocketIdleTimeout = null;\n          try {\n            this._rpcWebSocket.close();\n          } catch (err) {\n            // swallow error if socket has already been closed.\n            if (err instanceof Error) {\n              console.log(\n                `Error when closing socket connection: ${err.message}`,\n              );\n            }\n          }\n        }, 500);\n      }\n      return;\n    }\n\n    if (this._rpcWebSocketIdleTimeout !== null) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n      this._rpcWebSocketConnected = true;\n    }\n\n    if (!this._rpcWebSocketConnected) {\n      this._rpcWebSocket.connect();\n      return;\n    }\n\n    const activeWebSocketGeneration = this._rpcWebSocketGeneration;\n    const isCurrentConnectionStillActive = () => {\n      return activeWebSocketGeneration === this._rpcWebSocketGeneration;\n    };\n\n    await Promise.all(\n      // Don't be tempted to change this to `Object.entries`. We call\n      // `_updateSubscriptions` recursively when processing the state,\n      // so it's important that we look up the *current* version of\n      // each subscription, every time we process a hash.\n      Object.keys(this._subscriptionsByHash).map(async hash => {\n        const subscription = this._subscriptionsByHash[hash];\n        if (subscription === undefined) {\n          // This entry has since been deleted. Skip.\n          return;\n        }\n        switch (subscription.state) {\n          case 'pending':\n          case 'unsubscribed':\n            if (subscription.callbacks.size === 0) {\n              /**\n               * You can end up here when:\n               *\n               * - a subscription has recently unsubscribed\n               *   without having new callbacks added to it\n               *   while the unsubscribe was in flight, or\n               * - when a pending subscription has its\n               *   listeners removed before a request was\n               *   sent to the server.\n               *\n               * Being that nobody is interested in this\n               * subscription any longer, delete it.\n               */\n              delete this._subscriptionsByHash[hash];\n              if (subscription.state === 'unsubscribed') {\n                delete this._subscriptionCallbacksByServerSubscriptionId[\n                  subscription.serverSubscriptionId\n                ];\n              }\n              await this._updateSubscriptions();\n              return;\n            }\n            await (async () => {\n              const {args, method} = subscription;\n              try {\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'subscribing',\n                });\n                const serverSubscriptionId: ServerSubscriptionId =\n                  (await this._rpcWebSocket.call(method, args)) as number;\n                this._setSubscription(hash, {\n                  ...subscription,\n                  serverSubscriptionId,\n                  state: 'subscribed',\n                });\n                this._subscriptionCallbacksByServerSubscriptionId[\n                  serverSubscriptionId\n                ] = subscription.callbacks;\n                await this._updateSubscriptions();\n              } catch (e) {\n                if (e instanceof Error) {\n                  console.error(\n                    `${method} error for argument`,\n                    args,\n                    e.message,\n                  );\n                }\n                if (!isCurrentConnectionStillActive()) {\n                  return;\n                }\n                // TODO: Maybe add an 'errored' state or a retry limit?\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'pending',\n                });\n                await this._updateSubscriptions();\n              }\n            })();\n            break;\n          case 'subscribed':\n            if (subscription.callbacks.size === 0) {\n              // By the time we successfully set up a subscription\n              // with the server, the client stopped caring about it.\n              // Tear it down now.\n              await (async () => {\n                const {serverSubscriptionId, unsubscribeMethod} = subscription;\n                if (\n                  this._subscriptionsAutoDisposedByRpc.has(serverSubscriptionId)\n                ) {\n                  /**\n                   * Special case.\n                   * If we're dealing with a subscription that has been auto-\n                   * disposed by the RPC, then we can skip the RPC call to\n                   * tear down the subscription here.\n                   *\n                   * NOTE: There is a proposal to eliminate this special case, here:\n                   * https://github.com/solana-labs/solana/issues/18892\n                   */\n                  this._subscriptionsAutoDisposedByRpc.delete(\n                    serverSubscriptionId,\n                  );\n                } else {\n                  this._setSubscription(hash, {\n                    ...subscription,\n                    state: 'unsubscribing',\n                  });\n                  this._setSubscription(hash, {\n                    ...subscription,\n                    state: 'unsubscribing',\n                  });\n                  try {\n                    await this._rpcWebSocket.call(unsubscribeMethod, [\n                      serverSubscriptionId,\n                    ]);\n                  } catch (e) {\n                    if (e instanceof Error) {\n                      console.error(`${unsubscribeMethod} error:`, e.message);\n                    }\n                    if (!isCurrentConnectionStillActive()) {\n                      return;\n                    }\n                    // TODO: Maybe add an 'errored' state or a retry limit?\n                    this._setSubscription(hash, {\n                      ...subscription,\n                      state: 'subscribed',\n                    });\n                    await this._updateSubscriptions();\n                    return;\n                  }\n                }\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'unsubscribed',\n                });\n                await this._updateSubscriptions();\n              })();\n            }\n            break;\n          case 'subscribing':\n          case 'unsubscribing':\n            break;\n        }\n      }),\n    );\n  }\n\n  /**\n   * @internal\n   */\n  private _handleServerNotification<\n    TCallback extends SubscriptionConfig['callback'],\n  >(\n    serverSubscriptionId: ServerSubscriptionId,\n    callbackArgs: Parameters<TCallback>,\n  ): void {\n    const callbacks =\n      this._subscriptionCallbacksByServerSubscriptionId[serverSubscriptionId];\n    if (callbacks === undefined) {\n      return;\n    }\n    callbacks.forEach(cb => {\n      try {\n        cb(\n          // I failed to find a way to convince TypeScript that `cb` is of type\n          // `TCallback` which is certainly compatible with `Parameters<TCallback>`.\n          // See https://github.com/microsoft/TypeScript/issues/47615\n          // @ts-ignore\n          ...callbackArgs,\n        );\n      } catch (e) {\n        console.error(e);\n      }\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnAccountNotification(notification: object) {\n    const {result, subscription} = create(\n      notification,\n      AccountNotificationResult,\n    );\n    this._handleServerNotification<AccountChangeCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  private _makeSubscription(\n    subscriptionConfig: SubscriptionConfig,\n    /**\n     * When preparing `args` for a call to `_makeSubscription`, be sure\n     * to carefully apply a default `commitment` property, if necessary.\n     *\n     * - If the user supplied a `commitment` use that.\n     * - Otherwise, if the `Connection::commitment` is set, use that.\n     * - Otherwise, set it to the RPC server default: `finalized`.\n     *\n     * This is extremely important to ensure that these two fundamentally\n     * identical subscriptions produce the same identifying hash:\n     *\n     * - A subscription made without specifying a commitment.\n     * - A subscription made where the commitment specified is the same\n     *   as the default applied to the subscription above.\n     *\n     * Example; these two subscriptions must produce the same hash:\n     *\n     * - An `accountSubscribe` subscription for `'PUBKEY'`\n     * - An `accountSubscribe` subscription for `'PUBKEY'` with commitment\n     *   `'finalized'`.\n     *\n     * See the 'making a subscription with defaulted params omitted' test\n     * in `connection-subscriptions.ts` for more.\n     */\n    args: IWSRequestParams,\n  ): ClientSubscriptionId {\n    const clientSubscriptionId = this._nextClientSubscriptionId++;\n    const hash = fastStableStringify(\n      [subscriptionConfig.method, args],\n      true /* isArrayProp */,\n    );\n    const existingSubscription = this._subscriptionsByHash[hash];\n    if (existingSubscription === undefined) {\n      this._subscriptionsByHash[hash] = {\n        ...subscriptionConfig,\n        args,\n        callbacks: new Set([subscriptionConfig.callback]),\n        state: 'pending',\n      };\n    } else {\n      existingSubscription.callbacks.add(subscriptionConfig.callback);\n    }\n    this._subscriptionHashByClientSubscriptionId[clientSubscriptionId] = hash;\n    this._subscriptionDisposeFunctionsByClientSubscriptionId[\n      clientSubscriptionId\n    ] = async () => {\n      delete this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n      delete this._subscriptionHashByClientSubscriptionId[clientSubscriptionId];\n      const subscription = this._subscriptionsByHash[hash];\n      assert(\n        subscription !== undefined,\n        `Could not find a \\`Subscription\\` when tearing down client subscription #${clientSubscriptionId}`,\n      );\n      subscription.callbacks.delete(subscriptionConfig.callback);\n      await this._updateSubscriptions();\n    };\n    this._updateSubscriptions();\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked whenever the specified account changes\n   *\n   * @param publicKey Public key of the account to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @return subscription id\n   */\n  onAccountChange(\n    publicKey: PublicKey,\n    callback: AccountChangeCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64',\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'accountSubscribe',\n        unsubscribeMethod: 'accountUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'account change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnProgramAccountNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      ProgramAccountNotificationResult,\n    );\n    this._handleServerNotification<ProgramAccountChangeCallback>(subscription, [\n      {\n        accountId: result.value.pubkey,\n        accountInfo: result.value.account,\n      },\n      result.context,\n    ]);\n  }\n\n  /**\n   * Register a callback to be invoked whenever accounts owned by the\n   * specified program change\n   *\n   * @param programId Public key of the program to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @param filters The program account filters to pass into the RPC method\n   * @return subscription id\n   */\n  onProgramAccountChange(\n    programId: PublicKey,\n    callback: ProgramAccountChangeCallback,\n    commitment?: Commitment,\n    filters?: GetProgramAccountsFilter[],\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64' /* encoding */,\n      filters ? {filters: filters} : undefined /* extra */,\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'programSubscribe',\n        unsubscribeMethod: 'programUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeProgramAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'program account change',\n    );\n  }\n\n  /**\n   * Registers a callback to be invoked whenever logs are emitted.\n   */\n  onLogs(\n    filter: LogsFilter,\n    callback: LogsCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [typeof filter === 'object' ? {mentions: [filter.toString()]} : filter],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'logsSubscribe',\n        unsubscribeMethod: 'logsUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister a logs callback.\n   *\n   * @param id client subscription id to deregister.\n   */\n  async removeOnLogsListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'logs');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnLogsNotification(notification: Object) {\n    const {result, subscription} = create(notification, LogsNotificationResult);\n    this._handleServerNotification<LogsCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotNotification(notification: Object) {\n    const {result, subscription} = create(notification, SlotNotificationResult);\n    this._handleServerNotification<SlotChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot changes\n   *\n   * @param callback Function to invoke whenever the slot changes\n   * @return subscription id\n   */\n  onSlotChange(callback: SlotChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotSubscribe',\n        unsubscribeMethod: 'slotUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSlotChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotUpdatesNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SlotUpdateNotificationResult,\n    );\n    this._handleServerNotification<SlotUpdateCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot updates. {@link SlotUpdate}'s\n   * may be useful to track live progress of a cluster.\n   *\n   * @param callback Function to invoke whenever the slot updates\n   * @return subscription id\n   */\n  onSlotUpdate(callback: SlotUpdateCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotsUpdatesSubscribe',\n        unsubscribeMethod: 'slotsUpdatesUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot update notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSlotUpdateListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot update',\n    );\n  }\n\n  /**\n   * @internal\n   */\n\n  private async _unsubscribeClientSubscription(\n    clientSubscriptionId: ClientSubscriptionId,\n    subscriptionName: string,\n  ) {\n    const dispose =\n      this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n    if (dispose) {\n      await dispose();\n    } else {\n      console.warn(\n        'Ignored unsubscribe request because an active subscription with id ' +\n          `\\`${clientSubscriptionId}\\` for '${subscriptionName}' events ` +\n          'could not be found.',\n      );\n    }\n  }\n\n  _buildArgs(\n    args: Array<any>,\n    override?: Commitment,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment || encoding || extra) {\n      let options: any = {};\n      if (encoding) {\n        options.encoding = encoding;\n      }\n      if (commitment) {\n        options.commitment = commitment;\n      }\n      if (extra) {\n        options = Object.assign(options, extra);\n      }\n      args.push(options);\n    }\n    return args;\n  }\n\n  /**\n   * @internal\n   */\n  _buildArgsAtLeastConfirmed(\n    args: Array<any>,\n    override?: Finality,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment && !['confirmed', 'finalized'].includes(commitment)) {\n      throw new Error(\n        'Using Connection with default commitment: `' +\n          this._commitment +\n          '`, but method requires at least `confirmed`',\n      );\n    }\n    return this._buildArgs(args, override, encoding, extra);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSignatureNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SignatureNotificationResult,\n    );\n    if (result.value !== 'receivedSignature') {\n      /**\n       * Special case.\n       * After a signature is processed, RPCs automatically dispose of the\n       * subscription on the server side. We need to track which of these\n       * subscriptions have been disposed in such a way, so that we know\n       * whether the client is dealing with a not-yet-processed signature\n       * (in which case we must tear down the server subscription) or an\n       * already-processed signature (in which case the client can simply\n       * clear out the subscription locally without telling the server).\n       *\n       * NOTE: There is a proposal to eliminate this special case, here:\n       * https://github.com/solana-labs/solana/issues/18892\n       */\n      this._subscriptionsAutoDisposedByRpc.add(subscription);\n    }\n    this._handleServerNotification<SignatureSubscriptionCallback>(\n      subscription,\n      result.value === 'receivedSignature'\n        ? [{type: 'received'}, result.context]\n        : [{type: 'status', result: result.value}, result.context],\n    );\n  }\n\n  /**\n   * Register a callback to be invoked upon signature updates\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param commitment Specify the commitment level signature must reach before notification\n   * @return subscription id\n   */\n  onSignature(\n    signature: TransactionSignature,\n    callback: SignatureResultCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [signature],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          if (notification.type === 'status') {\n            callback(notification.result, context);\n            // Signatures subscriptions are auto-removed by the RPC service\n            // so no need to explicitly send an unsubscribe message.\n            try {\n              this.removeSignatureListener(clientSubscriptionId);\n              // eslint-disable-next-line no-empty\n            } catch (_err) {\n              // Already removed.\n            }\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked when a transaction is\n   * received and/or processed.\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param options Enable received notifications and set the commitment\n   *   level that signature must reach before notification\n   * @return subscription id\n   */\n  onSignatureWithOptions(\n    signature: TransactionSignature,\n    callback: SignatureSubscriptionCallback,\n    options?: SignatureSubscriptionOptions,\n  ): ClientSubscriptionId {\n    const {commitment, ...extra} = {\n      ...options,\n      commitment:\n        (options && options.commitment) || this._commitment || 'finalized', // Apply connection/server default.\n    };\n    const args = this._buildArgs(\n      [signature],\n      commitment,\n      undefined /* encoding */,\n      extra,\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          callback(notification, context);\n          // Signatures subscriptions are auto-removed by the RPC service\n          // so no need to explicitly send an unsubscribe message.\n          try {\n            this.removeSignatureListener(clientSubscriptionId);\n            // eslint-disable-next-line no-empty\n          } catch (_err) {\n            // Already removed.\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Deregister a signature notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSignatureListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'signature result',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnRootNotification(notification: Object) {\n    const {result, subscription} = create(notification, RootNotificationResult);\n    this._handleServerNotification<RootChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon root changes\n   *\n   * @param callback Function to invoke whenever the root changes\n   * @return subscription id\n   */\n  onRootChange(callback: RootChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'rootSubscribe',\n        unsubscribeMethod: 'rootUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a root notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeRootChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'root change',\n    );\n  }\n}\n","import {generateKeypair, getPublicKey, Ed25519Keypair} from './utils/ed25519';\nimport {PublicKey} from './publickey';\n\n/**\n * Keypair signer interface\n */\nexport interface Signer {\n  publicKey: PublicKey;\n  secretKey: Uint8Array;\n}\n\n/**\n * An account keypair used for signing transactions.\n */\nexport class Keypair {\n  private _keypair: Ed25519Keypair;\n\n  /**\n   * Create a new keypair instance.\n   * Generate random keypair if no {@link Ed25519Keypair} is provided.\n   *\n   * @param {Ed25519Keypair} keypair ed25519 keypair\n   */\n  constructor(keypair?: Ed25519Keypair) {\n    this._keypair = keypair ?? generateKeypair();\n  }\n\n  /**\n   * Generate a new random keypair\n   *\n   * @returns {Keypair} Keypair\n   */\n  static generate(): Keypair {\n    return new Keypair(generateKeypair());\n  }\n\n  /**\n   * Create a keypair from a raw secret key byte array.\n   *\n   * This method should only be used to recreate a keypair from a previously\n   * generated secret key. Generating keypairs from a random seed should be done\n   * with the {@link Keypair.fromSeed} method.\n   *\n   * @throws error if the provided secret key is invalid and validation is not skipped.\n   *\n   * @param secretKey secret key byte array\n   * @param options skip secret key validation\n   *\n   * @returns {Keypair} Keypair\n   */\n  static fromSecretKey(\n    secretKey: Uint8Array,\n    options?: {skipValidation?: boolean},\n  ): Keypair {\n    if (secretKey.byteLength !== 64) {\n      throw new Error('bad secret key size');\n    }\n    const publicKey = secretKey.slice(32, 64);\n    if (!options || !options.skipValidation) {\n      const privateScalar = secretKey.slice(0, 32);\n      const computedPublicKey = getPublicKey(privateScalar);\n      for (let ii = 0; ii < 32; ii++) {\n        if (publicKey[ii] !== computedPublicKey[ii]) {\n          throw new Error('provided secretKey is invalid');\n        }\n      }\n    }\n    return new Keypair({publicKey, secretKey});\n  }\n\n  /**\n   * Generate a keypair from a 32 byte seed.\n   *\n   * @param seed seed byte array\n   *\n   * @returns {Keypair} Keypair\n   */\n  static fromSeed(seed: Uint8Array): Keypair {\n    const publicKey = getPublicKey(seed);\n    const secretKey = new Uint8Array(64);\n    secretKey.set(seed);\n    secretKey.set(publicKey, 32);\n    return new Keypair({publicKey, secretKey});\n  }\n\n  /**\n   * The public key for this keypair\n   *\n   * @returns {PublicKey} PublicKey\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._keypair.publicKey);\n  }\n\n  /**\n   * The raw secret key for this keypair\n   * @returns {Uint8Array} Secret key in an array of Uint8 bytes\n   */\n  get secretKey(): Uint8Array {\n    return new Uint8Array(this._keypair.secretKey);\n  }\n}\n","import {toBufferLE} from 'bigint-buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from '../../layout';\nimport {PublicKey} from '../../publickey';\nimport * as bigintLayout from '../../utils/bigint';\nimport {SystemProgram} from '../system';\nimport {TransactionInstruction} from '../../transaction';\nimport {decodeData, encodeData, IInstructionInputData} from '../../instruction';\n\nexport * from './state';\n\nexport type CreateLookupTableParams = {\n  /** Account used to derive and control the new address lookup table. */\n  authority: PublicKey;\n  /** Account that will fund the new address lookup table. */\n  payer: PublicKey;\n  /** A recent slot must be used in the derivation path for each initialized table. */\n  recentSlot: bigint | number;\n};\n\nexport type FreezeLookupTableParams = {\n  /** Address lookup table account to freeze. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n};\n\nexport type ExtendLookupTableParams = {\n  /** Address lookup table account to extend. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n  /** Account that will fund the table reallocation.\n   * Not required if the reallocation has already been funded. */\n  payer?: PublicKey;\n  /** List of Public Keys to be added to the lookup table. */\n  addresses: Array<PublicKey>;\n};\n\nexport type DeactivateLookupTableParams = {\n  /** Address lookup table account to deactivate. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n};\n\nexport type CloseLookupTableParams = {\n  /** Address lookup table account to close. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n  /** Recipient of closed account lamports. */\n  recipient: PublicKey;\n};\n\n/**\n * An enumeration of valid LookupTableInstructionType's\n */\nexport type LookupTableInstructionType =\n  | 'CreateLookupTable'\n  | 'ExtendLookupTable'\n  | 'CloseLookupTable'\n  | 'FreezeLookupTable'\n  | 'DeactivateLookupTable';\n\ntype LookupTableInstructionInputData = {\n  CreateLookupTable: IInstructionInputData &\n    Readonly<{\n      recentSlot: bigint;\n      bumpSeed: number;\n    }>;\n  FreezeLookupTable: IInstructionInputData;\n  ExtendLookupTable: IInstructionInputData &\n    Readonly<{\n      numberOfAddresses: bigint;\n      addresses: Array<Uint8Array>;\n    }>;\n  DeactivateLookupTable: IInstructionInputData;\n  CloseLookupTable: IInstructionInputData;\n};\n\n/**\n * An enumeration of valid address lookup table InstructionType's\n * @internal\n */\nexport const LOOKUP_TABLE_INSTRUCTION_LAYOUTS = Object.freeze({\n  CreateLookupTable: {\n    index: 0,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['CreateLookupTable']\n    >([\n      BufferLayout.u32('instruction'),\n      bigintLayout.u64('recentSlot'),\n      BufferLayout.u8('bumpSeed'),\n    ]),\n  },\n  FreezeLookupTable: {\n    index: 1,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['FreezeLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n  ExtendLookupTable: {\n    index: 2,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['ExtendLookupTable']\n    >([\n      BufferLayout.u32('instruction'),\n      bigintLayout.u64(),\n      BufferLayout.seq(\n        Layout.publicKey(),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'addresses',\n      ),\n    ]),\n  },\n  DeactivateLookupTable: {\n    index: 3,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['DeactivateLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n  CloseLookupTable: {\n    index: 4,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['CloseLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n});\n\nexport class AddressLookupTableInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): LookupTableInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const index = instructionTypeLayout.decode(instruction.data);\n\n    let type: LookupTableInstructionType | undefined;\n    for (const [layoutType, layout] of Object.entries(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS,\n    )) {\n      if ((layout as any).index == index) {\n        type = layoutType as LookupTableInstructionType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error(\n        'Invalid Instruction. Should be a LookupTable Instruction',\n      );\n    }\n    return type;\n  }\n\n  static decodeCreateLookupTable(\n    instruction: TransactionInstruction,\n  ): CreateLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 4);\n\n    const {recentSlot} = decodeData(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable,\n      instruction.data,\n    );\n\n    return {\n      authority: instruction.keys[1].pubkey,\n      payer: instruction.keys[2].pubkey,\n      recentSlot: Number(recentSlot),\n    };\n  }\n\n  static decodeExtendLookupTable(\n    instruction: TransactionInstruction,\n  ): ExtendLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    if (instruction.keys.length < 2) {\n      throw new Error(\n        `invalid instruction; found ${instruction.keys.length} keys, expected at least 2`,\n      );\n    }\n\n    const {addresses} = decodeData(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable,\n      instruction.data,\n    );\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      payer:\n        instruction.keys.length > 2 ? instruction.keys[2].pubkey : undefined,\n      addresses: addresses.map(buffer => new PublicKey(buffer)),\n    };\n  }\n\n  static decodeCloseLookupTable(\n    instruction: TransactionInstruction,\n  ): CloseLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 3);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      recipient: instruction.keys[2].pubkey,\n    };\n  }\n\n  static decodeFreezeLookupTable(\n    instruction: TransactionInstruction,\n  ): FreezeLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n    };\n  }\n\n  static decodeDeactivateLookupTable(\n    instruction: TransactionInstruction,\n  ): DeactivateLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(AddressLookupTableProgram.programId)) {\n      throw new Error(\n        'invalid instruction; programId is not AddressLookupTable Program',\n      );\n    }\n  }\n  /**\n   * @internal\n   */\n  static checkKeysLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\nexport class AddressLookupTableProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  static programId: PublicKey = new PublicKey(\n    'AddressLookupTab1e1111111111111111111111111',\n  );\n\n  static createLookupTable(params: CreateLookupTableParams) {\n    const [lookupTableAddress, bumpSeed] = PublicKey.findProgramAddressSync(\n      [params.authority.toBuffer(), toBufferLE(BigInt(params.recentSlot), 8)],\n      this.programId,\n    );\n\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable;\n    const data = encodeData(type, {\n      recentSlot: BigInt(params.recentSlot),\n      bumpSeed: bumpSeed,\n    });\n\n    const keys = [\n      {\n        pubkey: lookupTableAddress,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n      {\n        pubkey: params.payer,\n        isSigner: true,\n        isWritable: true,\n      },\n      {\n        pubkey: SystemProgram.programId,\n        isSigner: false,\n        isWritable: false,\n      },\n    ];\n\n    return [\n      new TransactionInstruction({\n        programId: this.programId,\n        keys: keys,\n        data: data,\n      }),\n      lookupTableAddress,\n    ] as [TransactionInstruction, PublicKey];\n  }\n\n  static freezeLookupTable(params: FreezeLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.FreezeLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static extendLookupTable(params: ExtendLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable;\n    const data = encodeData(type, {\n      addresses: params.addresses.map(addr => addr.toBytes()),\n    });\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    if (params.payer) {\n      keys.push(\n        {\n          pubkey: params.payer,\n          isSigner: true,\n          isWritable: true,\n        },\n        {\n          pubkey: SystemProgram.programId,\n          isSigner: false,\n          isWritable: false,\n        },\n      );\n    }\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static deactivateLookupTable(params: DeactivateLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.DeactivateLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static closeLookupTable(params: CloseLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CloseLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n      {\n        pubkey: params.recipient,\n        isSigner: false,\n        isWritable: true,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport {u64} from '../utils/bigint';\n\n/**\n * Compute Budget Instruction class\n */\nexport class ComputeBudgetInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a compute budget instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): ComputeBudgetInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u8('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: ComputeBudgetInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS,\n    )) {\n      if (layout.index == typeIndex) {\n        type = ixType as ComputeBudgetInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error(\n        'Instruction type incorrect; not a ComputeBudgetInstruction',\n      );\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode request units compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestUnits(\n    instruction: TransactionInstruction,\n  ): RequestUnitsParams {\n    this.checkProgramId(instruction.programId);\n    const {units, additionalFee} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits,\n      instruction.data,\n    );\n    return {units, additionalFee};\n  }\n\n  /**\n   * Decode request heap frame compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestHeapFrame(\n    instruction: TransactionInstruction,\n  ): RequestHeapFrameParams {\n    this.checkProgramId(instruction.programId);\n    const {bytes} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame,\n      instruction.data,\n    );\n    return {bytes};\n  }\n\n  /**\n   * Decode set compute unit limit compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitLimit(\n    instruction: TransactionInstruction,\n  ): SetComputeUnitLimitParams {\n    this.checkProgramId(instruction.programId);\n    const {units} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit,\n      instruction.data,\n    );\n    return {units};\n  }\n\n  /**\n   * Decode set compute unit price compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitPrice(\n    instruction: TransactionInstruction,\n  ): SetComputeUnitPriceParams {\n    this.checkProgramId(instruction.programId);\n    const {microLamports} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice,\n      instruction.data,\n    );\n    return {microLamports};\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(ComputeBudgetProgram.programId)) {\n      throw new Error(\n        'invalid instruction; programId is not ComputeBudgetProgram',\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid ComputeBudgetInstructionType's\n */\nexport type ComputeBudgetInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof ComputeBudgetInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'RequestUnits'\n  | 'RequestHeapFrame'\n  | 'SetComputeUnitLimit'\n  | 'SetComputeUnitPrice';\n\ntype ComputeBudgetInstructionInputData = {\n  RequestUnits: IInstructionInputData & Readonly<RequestUnitsParams>;\n  RequestHeapFrame: IInstructionInputData & Readonly<RequestHeapFrameParams>;\n  SetComputeUnitLimit: IInstructionInputData &\n    Readonly<SetComputeUnitLimitParams>;\n  SetComputeUnitPrice: IInstructionInputData &\n    Readonly<SetComputeUnitPriceParams>;\n};\n\n/**\n * Request units instruction params\n */\nexport interface RequestUnitsParams {\n  /** Units to request for transaction-wide compute */\n  units: number;\n  /** Prioritization fee lamports */\n  additionalFee: number;\n}\n\n/**\n * Request heap frame instruction params\n */\nexport type RequestHeapFrameParams = {\n  /** Requested transaction-wide program heap size in bytes. Must be multiple of 1024. Applies to each program, including CPIs. */\n  bytes: number;\n};\n\n/**\n * Set compute unit limit instruction params\n */\nexport interface SetComputeUnitLimitParams {\n  /** Transaction-wide compute unit limit */\n  units: number;\n}\n\n/**\n * Set compute unit price instruction params\n */\nexport interface SetComputeUnitPriceParams {\n  /** Transaction compute unit price used for prioritization fees */\n  microLamports: number | bigint;\n}\n\n/**\n * An enumeration of valid ComputeBudget InstructionType's\n * @internal\n */\nexport const COMPUTE_BUDGET_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in ComputeBudgetInstructionType]: InstructionType<\n    ComputeBudgetInstructionInputData[Instruction]\n  >;\n}>({\n  RequestUnits: {\n    index: 0,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestUnits']\n    >([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u32('units'),\n      BufferLayout.u32('additionalFee'),\n    ]),\n  },\n  RequestHeapFrame: {\n    index: 1,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestHeapFrame']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('bytes')]),\n  },\n  SetComputeUnitLimit: {\n    index: 2,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['SetComputeUnitLimit']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('units')]),\n  },\n  SetComputeUnitPrice: {\n    index: 3,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['SetComputeUnitPrice']\n    >([BufferLayout.u8('instruction'), u64('microLamports')]),\n  },\n});\n\n/**\n * Factory class for transaction instructions to interact with the Compute Budget program\n */\nexport class ComputeBudgetProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Compute Budget program\n   */\n  static programId: PublicKey = new PublicKey(\n    'ComputeBudget111111111111111111111111111111',\n  );\n\n  /**\n   * @deprecated Instead, call {@link setComputeUnitLimit} and/or {@link setComputeUnitPrice}\n   */\n  static requestUnits(params: RequestUnitsParams): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static requestHeapFrame(\n    params: RequestHeapFrameParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static setComputeUnitLimit(\n    params: SetComputeUnitLimitParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static setComputeUnitPrice(\n    params: SetComputeUnitPriceParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice;\n    const data = encodeData(type, {\n      microLamports: BigInt(params.microLamports),\n    });\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {Keypair} from '../keypair';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {sign} from '../utils/ed25519';\n\nconst PRIVATE_KEY_BYTES = 64;\nconst PUBLIC_KEY_BYTES = 32;\nconst SIGNATURE_BYTES = 64;\n\n/**\n * Params for creating an ed25519 instruction using a public key\n */\nexport type CreateEd25519InstructionWithPublicKeyParams = {\n  publicKey: Uint8Array;\n  message: Uint8Array;\n  signature: Uint8Array;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an ed25519 instruction using a private key\n */\nexport type CreateEd25519InstructionWithPrivateKeyParams = {\n  privateKey: Uint8Array;\n  message: Uint8Array;\n  instructionIndex?: number;\n};\n\nconst ED25519_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    padding: number;\n    publicKeyInstructionIndex: number;\n    publicKeyOffset: number;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u8('padding'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u16('signatureInstructionIndex'),\n  BufferLayout.u16('publicKeyOffset'),\n  BufferLayout.u16('publicKeyInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u16('messageInstructionIndex'),\n]);\n\nexport class Ed25519Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the ed25519 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Ed25519SigVerify111111111111111111111111111',\n  );\n\n  /**\n   * Create an ed25519 instruction with a public key and signature. The\n   * public key must be a buffer that is 32 bytes long, and the signature\n   * must be a buffer of 64 bytes.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateEd25519InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, instructionIndex} = params;\n\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public Key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    assert(\n      signature.length === SIGNATURE_BYTES,\n      `Signature must be ${SIGNATURE_BYTES} bytes but received ${signature.length} bytes`,\n    );\n\n    const publicKeyOffset = ED25519_INSTRUCTION_LAYOUT.span;\n    const signatureOffset = publicKeyOffset + publicKey.length;\n    const messageDataOffset = signatureOffset + signature.length;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(messageDataOffset + message.length);\n\n    const index =\n      instructionIndex == null\n        ? 0xffff // An index of `u16::MAX` makes it default to the current instruction.\n        : instructionIndex;\n\n    ED25519_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        padding: 0,\n        signatureOffset,\n        signatureInstructionIndex: index,\n        publicKeyOffset,\n        publicKeyInstructionIndex: index,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: index,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(publicKey, publicKeyOffset);\n    instructionData.fill(signature, signatureOffset);\n    instructionData.fill(message, messageDataOffset);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Ed25519Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an ed25519 instruction with a private key. The private key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateEd25519InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey, message, instructionIndex} = params;\n\n    assert(\n      privateKey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${privateKey.length} bytes`,\n    );\n\n    try {\n      const keypair = Keypair.fromSecretKey(privateKey);\n      const publicKey = keypair.publicKey.toBytes();\n      const signature = sign(message, keypair.secretKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import {secp256k1} from '@noble/curves/secp256k1';\n\nexport const ecdsaSign = (\n  msgHash: Parameters<typeof secp256k1.sign>[0],\n  privKey: Parameters<typeof secp256k1.sign>[1],\n) => {\n  const signature = secp256k1.sign(msgHash, privKey);\n  return [signature.toCompactRawBytes(), signature.recovery!] as const;\n};\nexport const isValidPrivateKey = secp256k1.utils.isValidPrivateKey;\nexport const publicKeyCreate = secp256k1.getPublicKey;\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport {keccak_256} from '@noble/hashes/sha3';\n\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {publicKeyCreate, ecdsaSign} from '../utils/secp256k1';\nimport {toBuffer} from '../utils/to-buffer';\n\nconst PRIVATE_KEY_BYTES = 32;\nconst ETHEREUM_ADDRESS_BYTES = 20;\nconst PUBLIC_KEY_BYTES = 64;\nconst SIGNATURE_OFFSETS_SERIALIZED_SIZE = 11;\n\n/**\n * Params for creating an secp256k1 instruction using a public key\n */\nexport type CreateSecp256k1InstructionWithPublicKeyParams = {\n  publicKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using an Ethereum address\n */\nexport type CreateSecp256k1InstructionWithEthAddressParams = {\n  ethAddress: Buffer | Uint8Array | Array<number> | string;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using a private key\n */\nexport type CreateSecp256k1InstructionWithPrivateKeyParams = {\n  privateKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  instructionIndex?: number;\n};\n\nconst SECP256K1_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    ethAddress: Uint8Array;\n    ethAddressInstructionIndex: number;\n    ethAddressOffset: number;\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    recoveryId: number;\n    signature: Uint8Array;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u8('signatureInstructionIndex'),\n  BufferLayout.u16('ethAddressOffset'),\n  BufferLayout.u8('ethAddressInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u8('messageInstructionIndex'),\n  BufferLayout.blob(20, 'ethAddress'),\n  BufferLayout.blob(64, 'signature'),\n  BufferLayout.u8('recoveryId'),\n]);\n\nexport class Secp256k1Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the secp256k1 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'KeccakSecp256k11111111111111111111111111111',\n  );\n\n  /**\n   * Construct an Ethereum address from a secp256k1 public key buffer.\n   * @param {Buffer} publicKey a 64 byte secp256k1 public key buffer\n   */\n  static publicKeyToEthAddress(\n    publicKey: Buffer | Uint8Array | Array<number>,\n  ): Buffer {\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    try {\n      return Buffer.from(keccak_256(toBuffer(publicKey))).slice(\n        -ETHEREUM_ADDRESS_BYTES,\n      );\n    } catch (error) {\n      throw new Error(`Error constructing Ethereum address: ${error}`);\n    }\n  }\n\n  /**\n   * Create an secp256k1 instruction with a public key. The public key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateSecp256k1InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, recoveryId, instructionIndex} =\n      params;\n    return Secp256k1Program.createInstructionWithEthAddress({\n      ethAddress: Secp256k1Program.publicKeyToEthAddress(publicKey),\n      message,\n      signature,\n      recoveryId,\n      instructionIndex,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with an Ethereum address. The address\n   * must be a hex string or a buffer that is 20 bytes long.\n   */\n  static createInstructionWithEthAddress(\n    params: CreateSecp256k1InstructionWithEthAddressParams,\n  ): TransactionInstruction {\n    const {\n      ethAddress: rawAddress,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex = 0,\n    } = params;\n\n    let ethAddress;\n    if (typeof rawAddress === 'string') {\n      if (rawAddress.startsWith('0x')) {\n        ethAddress = Buffer.from(rawAddress.substr(2), 'hex');\n      } else {\n        ethAddress = Buffer.from(rawAddress, 'hex');\n      }\n    } else {\n      ethAddress = rawAddress;\n    }\n\n    assert(\n      ethAddress.length === ETHEREUM_ADDRESS_BYTES,\n      `Address must be ${ETHEREUM_ADDRESS_BYTES} bytes but received ${ethAddress.length} bytes`,\n    );\n\n    const dataStart = 1 + SIGNATURE_OFFSETS_SERIALIZED_SIZE;\n    const ethAddressOffset = dataStart;\n    const signatureOffset = dataStart + ethAddress.length;\n    const messageDataOffset = signatureOffset + signature.length + 1;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(\n      SECP256K1_INSTRUCTION_LAYOUT.span + message.length,\n    );\n\n    SECP256K1_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        signatureOffset,\n        signatureInstructionIndex: instructionIndex,\n        ethAddressOffset,\n        ethAddressInstructionIndex: instructionIndex,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: instructionIndex,\n        signature: toBuffer(signature),\n        ethAddress: toBuffer(ethAddress),\n        recoveryId,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(toBuffer(message), SECP256K1_INSTRUCTION_LAYOUT.span);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Secp256k1Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with a private key. The private key\n   * must be a buffer that is 32 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateSecp256k1InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey: pkey, message, instructionIndex} = params;\n\n    assert(\n      pkey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${pkey.length} bytes`,\n    );\n\n    try {\n      const privateKey = toBuffer(pkey);\n      const publicKey = publicKeyCreate(\n        privateKey,\n        false /* isCompressed */,\n      ).slice(1); // throw away leading byte\n      const messageHash = Buffer.from(keccak_256(toBuffer(message)));\n      const [signature, recoveryId] = ecdsaSign(messageHash, privateKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        recoveryId,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {PublicKey} from '../publickey';\nimport {SystemProgram} from './system';\nimport {\n  SYSVAR_CLOCK_PUBKEY,\n  SYSVAR_RENT_PUBKEY,\n  SYSVAR_STAKE_HISTORY_PUBKEY,\n} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\n\n/**\n * Address of the stake config account which configures the rate\n * of stake warmup and cooldown as well as the slashing penalty.\n */\nexport const STAKE_CONFIG_ID = new PublicKey(\n  'StakeConfig11111111111111111111111111111111',\n);\n\n/**\n * Stake account authority info\n */\nexport class Authorized {\n  /** stake authority */\n  staker: PublicKey;\n  /** withdraw authority */\n  withdrawer: PublicKey;\n\n  /**\n   * Create a new Authorized object\n   * @param staker the stake authority\n   * @param withdrawer the withdraw authority\n   */\n  constructor(staker: PublicKey, withdrawer: PublicKey) {\n    this.staker = staker;\n    this.withdrawer = withdrawer;\n  }\n}\n\ntype AuthorizedRaw = Readonly<{\n  staker: Uint8Array;\n  withdrawer: Uint8Array;\n}>;\n\n/**\n * Stake account lockup info\n */\nexport class Lockup {\n  /** Unix timestamp of lockup expiration */\n  unixTimestamp: number;\n  /** Epoch of lockup expiration */\n  epoch: number;\n  /** Lockup custodian authority */\n  custodian: PublicKey;\n\n  /**\n   * Create a new Lockup object\n   */\n  constructor(unixTimestamp: number, epoch: number, custodian: PublicKey) {\n    this.unixTimestamp = unixTimestamp;\n    this.epoch = epoch;\n    this.custodian = custodian;\n  }\n\n  /**\n   * Default, inactive Lockup value\n   */\n  static default: Lockup = new Lockup(0, 0, PublicKey.default);\n}\n\ntype LockupRaw = Readonly<{\n  custodian: Uint8Array;\n  epoch: number;\n  unixTimestamp: number;\n}>;\n\n/**\n * Create stake account transaction params\n */\nexport type CreateStakeAccountParams = {\n  /** Address of the account which will fund creation */\n  fromPubkey: PublicKey;\n  /** Address of the new stake account */\n  stakePubkey: PublicKey;\n  /** Authorities of the new stake account */\n  authorized: Authorized;\n  /** Lockup of the new stake account */\n  lockup?: Lockup;\n  /** Funding amount */\n  lamports: number;\n};\n\n/**\n * Create stake account with seed transaction params\n */\nexport type CreateStakeAccountWithSeedParams = {\n  fromPubkey: PublicKey;\n  stakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  authorized: Authorized;\n  lockup?: Lockup;\n  lamports: number;\n};\n\n/**\n * Initialize stake instruction params\n */\nexport type InitializeStakeParams = {\n  stakePubkey: PublicKey;\n  authorized: Authorized;\n  lockup?: Lockup;\n};\n\n/**\n * Delegate stake instruction params\n */\nexport type DelegateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  votePubkey: PublicKey;\n};\n\n/**\n * Authorize stake instruction params\n */\nexport type AuthorizeStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Authorize stake instruction params using a derived key\n */\nexport type AuthorizeWithSeedStakeParams = {\n  stakePubkey: PublicKey;\n  authorityBase: PublicKey;\n  authoritySeed: string;\n  authorityOwner: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Split stake instruction params\n */\nexport type SplitStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  lamports: number;\n};\n\n/**\n * Split with seed transaction params\n */\nexport type SplitStakeWithSeedParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  lamports: number;\n};\n\n/**\n * Withdraw stake instruction params\n */\nexport type WithdrawStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  toPubkey: PublicKey;\n  lamports: number;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Deactivate stake instruction params\n */\nexport type DeactivateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Merge stake instruction params\n */\nexport type MergeStakeParams = {\n  stakePubkey: PublicKey;\n  sourceStakePubKey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Stake Instruction class\n */\nexport class StakeInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a stake instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): StakeInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: StakeInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(STAKE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as StakeInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a StakeInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a initialize stake instruction and retrieve the instruction params.\n   */\n  static decodeInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized, lockup} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Initialize,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorized: new Authorized(\n        new PublicKey(authorized.staker),\n        new PublicKey(authorized.withdrawer),\n      ),\n      lockup: new Lockup(\n        lockup.unixTimestamp,\n        lockup.epoch,\n        new PublicKey(lockup.custodian),\n      ),\n    };\n  }\n\n  /**\n   * Decode a delegate stake instruction and retrieve the instruction params.\n   */\n  static decodeDelegate(\n    instruction: TransactionInstruction,\n  ): DelegateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 6);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Delegate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      votePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[5].pubkey,\n    };\n  }\n\n  /**\n   * Decode an authorize stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {newAuthorized, stakeAuthorizationType} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    const o: AuthorizeStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode an authorize-with-seed stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeWithSeedStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {\n      newAuthorized,\n      stakeAuthorizationType,\n      authoritySeed,\n      authorityOwner,\n    } = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    const o: AuthorizeWithSeedStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorityBase: instruction.keys[1].pubkey,\n      authoritySeed: authoritySeed,\n      authorityOwner: new PublicKey(authorityOwner),\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a split stake instruction and retrieve the instruction params.\n   */\n  static decodeSplit(instruction: TransactionInstruction): SplitStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Split,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      splitStakePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a merge stake instruction and retrieve the instruction params.\n   */\n  static decodeMerge(instruction: TransactionInstruction): MergeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Merge, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      sourceStakePubKey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw stake instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    const o: WithdrawStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n    if (instruction.keys.length > 5) {\n      o.custodianPubkey = instruction.keys[5].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a deactivate stake instruction and retrieve the instruction params.\n   */\n  static decodeDeactivate(\n    instruction: TransactionInstruction,\n  ): DeactivateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Deactivate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(StakeProgram.programId)) {\n      throw new Error('invalid instruction; programId is not StakeProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid StakeInstructionType's\n */\nexport type StakeInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof StakeInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'Authorize'\n  | 'AuthorizeWithSeed'\n  | 'Deactivate'\n  | 'Delegate'\n  | 'Initialize'\n  | 'Merge'\n  | 'Split'\n  | 'Withdraw';\n\ntype StakeInstructionInputData = {\n  Authorize: IInstructionInputData &\n    Readonly<{\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  AuthorizeWithSeed: IInstructionInputData &\n    Readonly<{\n      authorityOwner: Uint8Array;\n      authoritySeed: string;\n      instruction: number;\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  Deactivate: IInstructionInputData;\n  Delegate: IInstructionInputData;\n  Initialize: IInstructionInputData &\n    Readonly<{\n      authorized: AuthorizedRaw;\n      lockup: LockupRaw;\n    }>;\n  Merge: IInstructionInputData;\n  Split: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n  Withdraw: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n};\n\n/**\n * An enumeration of valid stake InstructionType's\n * @internal\n */\nexport const STAKE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in StakeInstructionType]: InstructionType<\n    StakeInstructionInputData[Instruction]\n  >;\n}>({\n  Initialize: {\n    index: 0,\n    layout: BufferLayout.struct<StakeInstructionInputData['Initialize']>([\n      BufferLayout.u32('instruction'),\n      Layout.authorized(),\n      Layout.lockup(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<StakeInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('stakeAuthorizationType'),\n    ]),\n  },\n  Delegate: {\n    index: 2,\n    layout: BufferLayout.struct<StakeInstructionInputData['Delegate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Split: {\n    index: 3,\n    layout: BufferLayout.struct<StakeInstructionInputData['Split']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Withdraw: {\n    index: 4,\n    layout: BufferLayout.struct<StakeInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Deactivate: {\n    index: 5,\n    layout: BufferLayout.struct<StakeInstructionInputData['Deactivate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Merge: {\n    index: 7,\n    layout: BufferLayout.struct<StakeInstructionInputData['Merge']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  AuthorizeWithSeed: {\n    index: 8,\n    layout: BufferLayout.struct<StakeInstructionInputData['AuthorizeWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('newAuthorized'),\n        BufferLayout.u32('stakeAuthorizationType'),\n        Layout.rustString('authoritySeed'),\n        Layout.publicKey('authorityOwner'),\n      ],\n    ),\n  },\n});\n\n/**\n * Stake authorization type\n */\nexport type StakeAuthorizationType = {\n  /** The Stake Authorization index (from solana-stake-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid StakeAuthorizationLayout's\n */\nexport const StakeAuthorizationLayout = Object.freeze({\n  Staker: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Stake program\n */\nexport class StakeProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Stake program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Stake11111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Stake account\n   *\n   * This is generated from the solana-stake-program StakeState struct as\n   * `StakeState::size_of()`:\n   * https://docs.rs/solana-stake-program/latest/solana_stake_program/stake_state/enum.StakeState.html\n   */\n  static space: number = 200;\n\n  /**\n   * Generate an Initialize instruction to add to a Stake Create transaction\n   */\n  static initialize(params: InitializeStakeParams): TransactionInstruction {\n    const {stakePubkey, authorized, lockup: maybeLockup} = params;\n    const lockup: Lockup = maybeLockup || Lockup.default;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Initialize;\n    const data = encodeData(type, {\n      authorized: {\n        staker: toBuffer(authorized.staker.toBuffer()),\n        withdrawer: toBuffer(authorized.withdrawer.toBuffer()),\n      },\n      lockup: {\n        unixTimestamp: lockup.unixTimestamp,\n        epoch: lockup.epoch,\n        custodian: toBuffer(lockup.custodian.toBuffer()),\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account at\n   *   an address generated with `from`, a seed, and the Stake programId\n   */\n  static createAccountWithSeed(\n    params: CreateStakeAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccountWithSeed({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        basePubkey: params.basePubkey,\n        seed: params.seed,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account\n   */\n  static createAccount(params: CreateStakeAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that delegates Stake tokens to a validator\n   * Vote PublicKey. This transaction can also be used to redelegate Stake\n   * to a new validator Vote PublicKey.\n   */\n  static delegate(params: DelegateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, votePubkey} = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Delegate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: votePubkey, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorize(params: AuthorizeStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: true},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: false,\n        isWritable: false,\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorizeWithSeed(params: AuthorizeWithSeedStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorityBase,\n      authoritySeed,\n      authorityOwner,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n      authoritySeed: authoritySeed,\n      authorityOwner: toBuffer(authorityOwner.toBuffer()),\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: authorityBase, isSigner: true, isWritable: false},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: false,\n        isWritable: false,\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  static splitInstruction(params: SplitStakeParams): TransactionInstruction {\n    const {stakePubkey, authorizedPubkey, splitStakePubkey, lamports} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Split;\n    const data = encodeData(type, {lamports});\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: splitStakePubkey, isSigner: false, isWritable: true},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another stake account\n   */\n  static split(params: SplitStakeParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.authorizedPubkey,\n        newAccountPubkey: params.splitStakePubkey,\n        lamports: 0,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(this.splitInstruction(params));\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another account\n   * derived from a base public key and seed\n   */\n  static splitWithSeed(params: SplitStakeWithSeedParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      basePubkey,\n      seed,\n      lamports,\n    } = params;\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.allocate({\n        accountPubkey: splitStakePubkey,\n        basePubkey,\n        seed,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(\n      this.splitInstruction({\n        stakePubkey,\n        authorizedPubkey,\n        splitStakePubkey,\n        lamports,\n      }),\n    );\n  }\n\n  /**\n   * Generate a Transaction that merges Stake accounts.\n   */\n  static merge(params: MergeStakeParams): Transaction {\n    const {stakePubkey, sourceStakePubKey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Merge;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: sourceStakePubKey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that withdraws deactivated Stake tokens.\n   */\n  static withdraw(params: WithdrawStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, toPubkey, lamports, custodianPubkey} =\n      params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false,\n      },\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: false,\n        isWritable: false,\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that deactivates Stake tokens.\n   */\n  static deactivate(params: DeactivateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Deactivate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {PublicKey} from '../publickey';\nimport {SystemProgram} from './system';\nimport {SYSVAR_CLOCK_PUBKEY, SYSVAR_RENT_PUBKEY} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\n\n/**\n * Vote account info\n */\nexport class VoteInit {\n  nodePubkey: PublicKey;\n  authorizedVoter: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number; /** [0, 100] */\n\n  constructor(\n    nodePubkey: PublicKey,\n    authorizedVoter: PublicKey,\n    authorizedWithdrawer: PublicKey,\n    commission: number,\n  ) {\n    this.nodePubkey = nodePubkey;\n    this.authorizedVoter = authorizedVoter;\n    this.authorizedWithdrawer = authorizedWithdrawer;\n    this.commission = commission;\n  }\n}\n\n/**\n * Create vote account transaction params\n */\nexport type CreateVoteAccountParams = {\n  fromPubkey: PublicKey;\n  votePubkey: PublicKey;\n  voteInit: VoteInit;\n  lamports: number;\n};\n\n/**\n * InitializeAccount instruction params\n */\nexport type InitializeAccountParams = {\n  votePubkey: PublicKey;\n  nodePubkey: PublicKey;\n  voteInit: VoteInit;\n};\n\n/**\n * Authorize instruction params\n */\nexport type AuthorizeVoteParams = {\n  votePubkey: PublicKey;\n  /** Current vote or withdraw authority, depending on `voteAuthorizationType` */\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  voteAuthorizationType: VoteAuthorizationType;\n};\n\n/**\n * AuthorizeWithSeed instruction params\n */\nexport type AuthorizeVoteWithSeedParams = {\n  currentAuthorityDerivedKeyBasePubkey: PublicKey;\n  currentAuthorityDerivedKeyOwnerPubkey: PublicKey;\n  currentAuthorityDerivedKeySeed: string;\n  newAuthorizedPubkey: PublicKey;\n  voteAuthorizationType: VoteAuthorizationType;\n  votePubkey: PublicKey;\n};\n\n/**\n * Withdraw from vote account transaction params\n */\nexport type WithdrawFromVoteAccountParams = {\n  votePubkey: PublicKey;\n  authorizedWithdrawerPubkey: PublicKey;\n  lamports: number;\n  toPubkey: PublicKey;\n};\n\n/**\n * Vote Instruction class\n */\nexport class VoteInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a vote instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): VoteInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: VoteInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(VOTE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as VoteInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a VoteInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode an initialize vote instruction and retrieve the instruction params.\n   */\n  static decodeInitializeAccount(\n    instruction: TransactionInstruction,\n  ): InitializeAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 4);\n\n    const {voteInit} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.InitializeAccount,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      nodePubkey: instruction.keys[3].pubkey,\n      voteInit: new VoteInit(\n        new PublicKey(voteInit.nodePubkey),\n        new PublicKey(voteInit.authorizedVoter),\n        new PublicKey(voteInit.authorizedWithdrawer),\n        voteInit.commission,\n      ),\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeVoteParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {newAuthorized, voteAuthorizationType} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType,\n      },\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeVoteWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey,\n        currentAuthorityDerivedKeySeed,\n        newAuthorized,\n        voteAuthorizationType,\n      },\n    } = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    return {\n      currentAuthorityDerivedKeyBasePubkey: instruction.keys[2].pubkey,\n      currentAuthorityDerivedKeyOwnerPubkey: new PublicKey(\n        currentAuthorityDerivedKeyOwnerPubkey,\n      ),\n      currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType,\n      },\n      votePubkey: instruction.keys[0].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawFromVoteAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedWithdrawerPubkey: instruction.keys[2].pubkey,\n      lamports,\n      toPubkey: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(VoteProgram.programId)) {\n      throw new Error('invalid instruction; programId is not VoteProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid VoteInstructionType's\n */\nexport type VoteInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof VoteInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  'Authorize' | 'AuthorizeWithSeed' | 'InitializeAccount' | 'Withdraw';\n\n/** @internal */\nexport type VoteAuthorizeWithSeedArgs = Readonly<{\n  currentAuthorityDerivedKeyOwnerPubkey: Uint8Array;\n  currentAuthorityDerivedKeySeed: string;\n  newAuthorized: Uint8Array;\n  voteAuthorizationType: number;\n}>;\ntype VoteInstructionInputData = {\n  Authorize: IInstructionInputData & {\n    newAuthorized: Uint8Array;\n    voteAuthorizationType: number;\n  };\n  AuthorizeWithSeed: IInstructionInputData & {\n    voteAuthorizeWithSeedArgs: VoteAuthorizeWithSeedArgs;\n  };\n  InitializeAccount: IInstructionInputData & {\n    voteInit: Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>;\n  };\n  Withdraw: IInstructionInputData & {\n    lamports: number;\n  };\n};\n\nconst VOTE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in VoteInstructionType]: InstructionType<\n    VoteInstructionInputData[Instruction]\n  >;\n}>({\n  InitializeAccount: {\n    index: 0,\n    layout: BufferLayout.struct<VoteInstructionInputData['InitializeAccount']>([\n      BufferLayout.u32('instruction'),\n      Layout.voteInit(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<VoteInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('voteAuthorizationType'),\n    ]),\n  },\n  Withdraw: {\n    index: 3,\n    layout: BufferLayout.struct<VoteInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  AuthorizeWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct<VoteInstructionInputData['AuthorizeWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.voteAuthorizeWithSeedArgs(),\n    ]),\n  },\n});\n\n/**\n * VoteAuthorize type\n */\nexport type VoteAuthorizationType = {\n  /** The VoteAuthorize index (from solana-vote-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid VoteAuthorization layouts.\n */\nexport const VoteAuthorizationLayout = Object.freeze({\n  Voter: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Vote program\n */\nexport class VoteProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Vote program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Vote111111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Vote account\n   *\n   * This is generated from the solana-vote-program VoteState struct as\n   * `VoteState::size_of()`:\n   * https://docs.rs/solana-vote-program/1.9.5/solana_vote_program/vote_state/struct.VoteState.html#method.size_of\n   *\n   * KEEP IN SYNC WITH `VoteState::size_of()` in https://github.com/solana-labs/solana/blob/a474cb24b9238f5edcc982f65c0b37d4a1046f7e/sdk/program/src/vote/state/mod.rs#L340-L342\n   */\n  static space: number = process.env.TEST_LIVE ? 3762 : 3731;\n\n  /**\n   * Generate an Initialize instruction.\n   */\n  static initializeAccount(\n    params: InitializeAccountParams,\n  ): TransactionInstruction {\n    const {votePubkey, nodePubkey, voteInit} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.InitializeAccount;\n    const data = encodeData(type, {\n      voteInit: {\n        nodePubkey: toBuffer(voteInit.nodePubkey.toBuffer()),\n        authorizedVoter: toBuffer(voteInit.authorizedVoter.toBuffer()),\n        authorizedWithdrawer: toBuffer(\n          voteInit.authorizedWithdrawer.toBuffer(),\n        ),\n        commission: voteInit.commission,\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: votePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: nodePubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction that creates a new Vote account.\n   */\n  static createAccount(params: CreateVoteAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.votePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    return transaction.add(\n      this.initializeAccount({\n        votePubkey: params.votePubkey,\n        nodePubkey: params.voteInit.nodePubkey,\n        voteInit: params.voteInit,\n      }),\n    );\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account.\n   */\n  static authorize(params: AuthorizeVoteParams): Transaction {\n    const {\n      votePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n    } = params;\n\n    const type = VOTE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      voteAuthorizationType: voteAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account\n   * where the current Voter or Withdrawer authority is a derived key.\n   */\n  static authorizeWithSeed(params: AuthorizeVoteWithSeedParams): Transaction {\n    const {\n      currentAuthorityDerivedKeyBasePubkey,\n      currentAuthorityDerivedKeyOwnerPubkey,\n      currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n      votePubkey,\n    } = params;\n\n    const type = VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey: toBuffer(\n          currentAuthorityDerivedKeyOwnerPubkey.toBuffer(),\n        ),\n        currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n        newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n        voteAuthorizationType: voteAuthorizationType.index,\n      },\n    });\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: currentAuthorityDerivedKeyBasePubkey,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw from a Vote account.\n   */\n  static withdraw(params: WithdrawFromVoteAccountParams): Transaction {\n    const {votePubkey, authorizedWithdrawerPubkey, lamports, toPubkey} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: authorizedWithdrawerPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw safely from a Vote account.\n   *\n   * This function was created as a safeguard for vote accounts running validators, `safeWithdraw`\n   * checks that the withdraw amount will not exceed the specified balance while leaving enough left\n   * to cover rent. If you wish to close the vote account by withdrawing the full amount, call the\n   * `withdraw` method directly.\n   */\n  static safeWithdraw(\n    params: WithdrawFromVoteAccountParams,\n    currentVoteAccountBalance: number,\n    rentExemptMinimum: number,\n  ): Transaction {\n    if (params.lamports > currentVoteAccountBalance - rentExemptMinimum) {\n      throw new Error(\n        'Withdraw will leave vote account with insuffcient funds.',\n      );\n    }\n    return VoteProgram.withdraw(params);\n  }\n}\n","import {Buffer} from 'buffer';\nimport {\n  assert as assertType,\n  optional,\n  string,\n  type as pick,\n} from 'superstruct';\n\nimport * as Layout from './layout';\nimport * as shortvec from './utils/shortvec-encoding';\nimport {PublicKey, PUBLIC_KEY_LENGTH} from './publickey';\n\nexport const VALIDATOR_INFO_KEY = new PublicKey(\n  'Va1idator1nfo111111111111111111111111111111',\n);\n\n/**\n * @internal\n */\ntype ConfigKey = {\n  publicKey: PublicKey;\n  isSigner: boolean;\n};\n\n/**\n * Info used to identity validators.\n */\nexport type Info = {\n  /** validator name */\n  name: string;\n  /** optional, validator website */\n  website?: string;\n  /** optional, extra information the validator chose to share */\n  details?: string;\n  /** optional, used to identify validators on keybase.io */\n  keybaseUsername?: string;\n};\n\nconst InfoString = pick({\n  name: string(),\n  website: optional(string()),\n  details: optional(string()),\n  keybaseUsername: optional(string()),\n});\n\n/**\n * ValidatorInfo class\n */\nexport class ValidatorInfo {\n  /**\n   * validator public key\n   */\n  key: PublicKey;\n  /**\n   * validator information\n   */\n  info: Info;\n\n  /**\n   * Construct a valid ValidatorInfo\n   *\n   * @param key validator public key\n   * @param info validator information\n   */\n  constructor(key: PublicKey, info: Info) {\n    this.key = key;\n    this.info = info;\n  }\n\n  /**\n   * Deserialize ValidatorInfo from the config account data. Exactly two config\n   * keys are required in the data.\n   *\n   * @param buffer config account data\n   * @return null if info was not found\n   */\n  static fromConfigData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): ValidatorInfo | null {\n    let byteArray = [...buffer];\n    const configKeyCount = shortvec.decodeLength(byteArray);\n    if (configKeyCount !== 2) return null;\n\n    const configKeys: Array<ConfigKey> = [];\n    for (let i = 0; i < 2; i++) {\n      const publicKey = new PublicKey(byteArray.slice(0, PUBLIC_KEY_LENGTH));\n      byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n      const isSigner = byteArray.slice(0, 1)[0] === 1;\n      byteArray = byteArray.slice(1);\n      configKeys.push({publicKey, isSigner});\n    }\n\n    if (configKeys[0].publicKey.equals(VALIDATOR_INFO_KEY)) {\n      if (configKeys[1].isSigner) {\n        const rawInfo: any = Layout.rustString().decode(Buffer.from(byteArray));\n        const info = JSON.parse(rawInfo as string);\n        assertType(info, InfoString);\n        return new ValidatorInfo(configKeys[1].publicKey, info);\n      }\n    }\n\n    return null;\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport type {Buffer} from 'buffer';\n\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {toBuffer} from './utils/to-buffer';\n\nexport const VOTE_PROGRAM_ID = new PublicKey(\n  'Vote111111111111111111111111111111111111111',\n);\n\nexport type Lockout = {\n  slot: number;\n  confirmationCount: number;\n};\n\n/**\n * History of how many credits earned by the end of each epoch\n */\nexport type EpochCredits = Readonly<{\n  epoch: number;\n  credits: number;\n  prevCredits: number;\n}>;\n\nexport type AuthorizedVoter = Readonly<{\n  epoch: number;\n  authorizedVoter: PublicKey;\n}>;\n\ntype AuthorizedVoterRaw = Readonly<{\n  authorizedVoter: Uint8Array;\n  epoch: number;\n}>;\n\ntype PriorVoters = Readonly<{\n  buf: PriorVoterRaw[];\n  idx: number;\n  isEmpty: number;\n}>;\n\nexport type PriorVoter = Readonly<{\n  authorizedPubkey: PublicKey;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\ntype PriorVoterRaw = Readonly<{\n  authorizedPubkey: Uint8Array;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\nexport type BlockTimestamp = Readonly<{\n  slot: number;\n  timestamp: number;\n}>;\n\ntype VoteAccountData = Readonly<{\n  authorizedVoters: AuthorizedVoterRaw[];\n  authorizedWithdrawer: Uint8Array;\n  commission: number;\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n  nodePubkey: Uint8Array;\n  priorVoters: PriorVoters;\n  rootSlot: number;\n  rootSlotValid: number;\n  votes: Lockout[];\n}>;\n\n/**\n * See https://github.com/solana-labs/solana/blob/8a12ed029cfa38d4a45400916c2463fb82bbec8c/programs/vote_api/src/vote_state.rs#L68-L88\n *\n * @internal\n */\nconst VoteAccountLayout = BufferLayout.struct<VoteAccountData>([\n  Layout.publicKey('nodePubkey'),\n  Layout.publicKey('authorizedWithdrawer'),\n  BufferLayout.u8('commission'),\n  BufferLayout.nu64(), // votes.length\n  BufferLayout.seq<Lockout>(\n    BufferLayout.struct([\n      BufferLayout.nu64('slot'),\n      BufferLayout.u32('confirmationCount'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'votes',\n  ),\n  BufferLayout.u8('rootSlotValid'),\n  BufferLayout.nu64('rootSlot'),\n  BufferLayout.nu64(), // authorizedVoters.length\n  BufferLayout.seq<AuthorizedVoterRaw>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      Layout.publicKey('authorizedVoter'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'authorizedVoters',\n  ),\n  BufferLayout.struct<PriorVoters>(\n    [\n      BufferLayout.seq(\n        BufferLayout.struct([\n          Layout.publicKey('authorizedPubkey'),\n          BufferLayout.nu64('epochOfLastAuthorizedSwitch'),\n          BufferLayout.nu64('targetEpoch'),\n        ]),\n        32,\n        'buf',\n      ),\n      BufferLayout.nu64('idx'),\n      BufferLayout.u8('isEmpty'),\n    ],\n    'priorVoters',\n  ),\n  BufferLayout.nu64(), // epochCredits.length\n  BufferLayout.seq<EpochCredits>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      BufferLayout.nu64('credits'),\n      BufferLayout.nu64('prevCredits'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'epochCredits',\n  ),\n  BufferLayout.struct<BlockTimestamp>(\n    [BufferLayout.nu64('slot'), BufferLayout.nu64('timestamp')],\n    'lastTimestamp',\n  ),\n]);\n\ntype VoteAccountArgs = {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n};\n\n/**\n * VoteAccount class\n */\nexport class VoteAccount {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n\n  /**\n   * @internal\n   */\n  constructor(args: VoteAccountArgs) {\n    this.nodePubkey = args.nodePubkey;\n    this.authorizedWithdrawer = args.authorizedWithdrawer;\n    this.commission = args.commission;\n    this.rootSlot = args.rootSlot;\n    this.votes = args.votes;\n    this.authorizedVoters = args.authorizedVoters;\n    this.priorVoters = args.priorVoters;\n    this.epochCredits = args.epochCredits;\n    this.lastTimestamp = args.lastTimestamp;\n  }\n\n  /**\n   * Deserialize VoteAccount from the account data.\n   *\n   * @param buffer account data\n   * @return VoteAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): VoteAccount {\n    const versionOffset = 4;\n    const va = VoteAccountLayout.decode(toBuffer(buffer), versionOffset);\n\n    let rootSlot: number | null = va.rootSlot;\n    if (!va.rootSlotValid) {\n      rootSlot = null;\n    }\n\n    return new VoteAccount({\n      nodePubkey: new PublicKey(va.nodePubkey),\n      authorizedWithdrawer: new PublicKey(va.authorizedWithdrawer),\n      commission: va.commission,\n      votes: va.votes,\n      rootSlot,\n      authorizedVoters: va.authorizedVoters.map(parseAuthorizedVoter),\n      priorVoters: getPriorVoters(va.priorVoters),\n      epochCredits: va.epochCredits,\n      lastTimestamp: va.lastTimestamp,\n    });\n  }\n}\n\nfunction parseAuthorizedVoter({\n  authorizedVoter,\n  epoch,\n}: AuthorizedVoterRaw): AuthorizedVoter {\n  return {\n    epoch,\n    authorizedVoter: new PublicKey(authorizedVoter),\n  };\n}\n\nfunction parsePriorVoters({\n  authorizedPubkey,\n  epochOfLastAuthorizedSwitch,\n  targetEpoch,\n}: PriorVoterRaw): PriorVoter {\n  return {\n    authorizedPubkey: new PublicKey(authorizedPubkey),\n    epochOfLastAuthorizedSwitch,\n    targetEpoch,\n  };\n}\n\nfunction getPriorVoters({buf, idx, isEmpty}: PriorVoters): PriorVoter[] {\n  if (isEmpty) {\n    return [];\n  }\n\n  return [\n    ...buf.slice(idx + 1).map(parsePriorVoters),\n    ...buf.slice(0, idx).map(parsePriorVoters),\n  ];\n}\n","export * from './account';\nexport * from './blockhash';\nexport * from './bpf-loader-deprecated';\nexport * from './bpf-loader';\nexport * from './connection';\nexport * from './epoch-schedule';\nexport * from './errors';\nexport * from './fee-calculator';\nexport * from './keypair';\nexport * from './loader';\nexport * from './message';\nexport * from './nonce-account';\nexport * from './programs';\nexport * from './publickey';\nexport * from './transaction';\nexport * from './validator-info';\nexport * from './vote-account';\nexport * from './sysvar';\nexport * from './utils';\n\n/**\n * There are 1-billion lamports in one SOL\n */\nexport const LAMPORTS_PER_SOL = 1000000000;\n","import { Auth, LoginOptions, UserInfo, rpcUrl } from '@particle-network/auth';\nimport { Connection, ConnectionConfig, PublicKey, Transaction } from '@solana/web3.js';\nimport bs58 from 'bs58';\nimport { Buffer } from 'buffer';\nimport { EventEmitter } from 'events';\nimport { ISolanaWallet } from './types';\nimport { getVersion } from './utils';\n\nexport class SolanaWallet implements ISolanaWallet {\n    public readonly isParticleNetwork = true;\n\n    name = 'Particle';\n    url = 'https://particle.network';\n    icon = 'https://static.particle.network/wallet-icons/Particle.png';\n\n    private _publicKey: PublicKey | null;\n\n    private _connecting: boolean;\n\n    private events = new EventEmitter();\n\n    constructor(private auth: Auth) {\n        this.auth = auth;\n        this._connecting = false;\n\n        const userInfo = this.auth.getUserInfo();\n        if (userInfo) {\n            const wallet = userInfo.wallets.find((w) => w.chain_name === 'solana' && w.public_address.length > 0);\n            if (wallet) {\n                this._publicKey = new PublicKey(wallet.public_address);\n            } else {\n                this._publicKey = null;\n            }\n        } else {\n            this._publicKey = null;\n        }\n\n        this.auth.on('connect', (userInfo: UserInfo) => {\n            const wallet = userInfo.wallets.find((w) => w.chain_name === 'solana' && w.public_address.length > 0);\n            if (wallet) {\n                this._publicKey = new PublicKey(wallet.public_address);\n                this.events.emit('connect', this._publicKey);\n            }\n        });\n        this.auth.on('disconnect', () => {\n            this._publicKey = null;\n            this.events.emit('disconnect');\n        });\n        if (typeof window !== 'undefined' && window.particle) {\n            window.particle.solanaWallet = this;\n        }\n    }\n\n    get version() {\n        return getVersion();\n    }\n\n    on(event: string, listener: any): void {\n        this.events.on(event, listener);\n    }\n\n    once(event: string, listener: any): void {\n        this.events.once(event, listener);\n    }\n\n    off(event: string, listener: any): void {\n        this.events.off(event, listener);\n    }\n\n    removeListener(event: string, listener: any): void {\n        this.events.removeListener(event, listener);\n    }\n\n    get connecting(): boolean {\n        return this._connecting;\n    }\n\n    get connected(): boolean {\n        return this._publicKey !== null;\n    }\n\n    get publicKey(): PublicKey | null {\n        return this._publicKey;\n    }\n\n    public async connect(config?: LoginOptions): Promise<void> {\n        try {\n            this._connecting = true;\n            let wallet = this.auth.getWallet();\n            if (wallet) {\n                this._publicKey = new PublicKey(wallet.public_address);\n                return Promise.resolve();\n            }\n            await this.auth.login(config);\n            wallet = this.auth.getWallet();\n            if (wallet) {\n                this._publicKey = new PublicKey(wallet.public_address);\n                return Promise.resolve();\n            } else {\n                return Promise.reject('wallet create failed');\n            }\n        } catch (e) {\n            return Promise.reject(e);\n        } finally {\n            this._connecting = false;\n        }\n    }\n\n    public async disconnect(): Promise<void> {\n        await this.auth.logout();\n        this._publicKey = null;\n        return Promise.resolve();\n    }\n\n    public async signTransaction(transaction: Transaction): Promise<Transaction> {\n        const signature = await this.auth.sign(\n            'signTransaction',\n            bs58.encode(transaction.serialize({ requireAllSignatures: false, verifySignatures: false }))\n        );\n        return Transaction.from(Buffer.from(signature, 'base64'));\n    }\n\n    public async signAllTransactions(transactions: Transaction[]): Promise<Transaction[]> {\n        const signatures = await this.auth.signAllTransactions(\n            transactions.map((tx) =>\n                bs58.encode(tx.serialize({ requireAllSignatures: false, verifySignatures: false }))\n            )\n        );\n        return signatures.map((signed: string) => Transaction.from(Buffer.from(signed, 'base64')));\n    }\n\n    public async signAndSendTransaction(transaction: Transaction): Promise<string> {\n        return this.auth.sendTransaction(\n            bs58.encode(transaction.serialize({ requireAllSignatures: false, verifySignatures: false }))\n        );\n    }\n\n    public async signMessage(message: Uint8Array): Promise<Uint8Array> {\n        const signature = await this.auth.sign('signMessage', bs58.encode(message));\n        return Buffer.from(signature, 'base64');\n    }\n\n    public getConnection(config?: ConnectionConfig): Connection {\n        const url = `${rpcUrl()}/solana`;\n        return new Connection(\n            `${url}?chainId=${this.auth.getChainId()}&projectUuid=${this.auth.config.projectId}&projectKey=${\n                this.auth.config.clientKey\n            }`,\n            {\n                commitment: config?.commitment,\n                wsEndpoint: config?.wsEndpoint,\n                httpHeaders: {\n                    Authorization: this.auth.basicCredentials(),\n                },\n                fetch: config?.fetch,\n                fetchMiddleware: config?.fetchMiddleware,\n                disableRetryOnRateLimit: config?.disableRetryOnRateLimit,\n                confirmTransactionInitialTimeout: config?.confirmTransactionInitialTimeout,\n            }\n        );\n    }\n}\n","'use strict';\n\n// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n//\n// Utilities\n//\n\n/**\n * @param {number} a The number to test.\n * @param {number} min The minimum value in the range, inclusive.\n * @param {number} max The maximum value in the range, inclusive.\n * @return {boolean} True if a >= min and a <= max.\n */\nfunction inRange(a, min, max) {\n  return min <= a && a <= max;\n}\n\n/**\n * @param {*} o\n * @return {Object}\n */\nfunction ToDictionary(o) {\n  if (o === undefined) return {};\n  if (o === Object(o)) return o;\n  throw TypeError('Could not convert argument to dictionary');\n}\n\n/**\n * @param {string} string Input string of UTF-16 code units.\n * @return {!Array.<number>} Code points.\n */\nfunction stringToCodePoints(string) {\n  // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n  // 1. Let S be the DOMString value.\n  var s = String(string);\n\n  // 2. Let n be the length of S.\n  var n = s.length;\n\n  // 3. Initialize i to 0.\n  var i = 0;\n\n  // 4. Initialize U to be an empty sequence of Unicode characters.\n  var u = [];\n\n  // 5. While i < n:\n  while (i < n) {\n\n    // 1. Let c be the code unit in S at index i.\n    var c = s.charCodeAt(i);\n\n    // 2. Depending on the value of c:\n\n    // c < 0xD800 or c > 0xDFFF\n    if (c < 0xD800 || c > 0xDFFF) {\n      // Append to U the Unicode character with code point c.\n      u.push(c);\n    }\n\n    // 0xDC00 ≤ c ≤ 0xDFFF\n    else if (0xDC00 <= c && c <= 0xDFFF) {\n      // Append to U a U+FFFD REPLACEMENT CHARACTER.\n      u.push(0xFFFD);\n    }\n\n    // 0xD800 ≤ c ≤ 0xDBFF\n    else if (0xD800 <= c && c <= 0xDBFF) {\n      // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n      // CHARACTER.\n      if (i === n - 1) {\n        u.push(0xFFFD);\n      }\n      // 2. Otherwise, i < n−1:\n      else {\n        // 1. Let d be the code unit in S at index i+1.\n        var d = string.charCodeAt(i + 1);\n\n        // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n        if (0xDC00 <= d && d <= 0xDFFF) {\n          // 1. Let a be c & 0x3FF.\n          var a = c & 0x3FF;\n\n          // 2. Let b be d & 0x3FF.\n          var b = d & 0x3FF;\n\n          // 3. Append to U the Unicode character with code point\n          // 2^16+2^10*a+b.\n          u.push(0x10000 + (a << 10) + b);\n\n          // 4. Set i to i+1.\n          i += 1;\n        }\n\n        // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n        // U+FFFD REPLACEMENT CHARACTER.\n        else  {\n          u.push(0xFFFD);\n        }\n      }\n    }\n\n    // 3. Set i to i+1.\n    i += 1;\n  }\n\n  // 6. Return U.\n  return u;\n}\n\n/**\n * @param {!Array.<number>} code_points Array of code points.\n * @return {string} string String of UTF-16 code units.\n */\nfunction codePointsToString(code_points) {\n  var s = '';\n  for (var i = 0; i < code_points.length; ++i) {\n    var cp = code_points[i];\n    if (cp <= 0xFFFF) {\n      s += String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      s += String.fromCharCode((cp >> 10) + 0xD800,\n                               (cp & 0x3FF) + 0xDC00);\n    }\n  }\n  return s;\n}\n\n\n//\n// Implementation of Encoding specification\n// https://encoding.spec.whatwg.org/\n//\n\n//\n// 3. Terminology\n//\n\n/**\n * End-of-stream is a special token that signifies no more tokens\n * are in the stream.\n * @const\n */ var end_of_stream = -1;\n\n/**\n * A stream represents an ordered sequence of tokens.\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\n * stream.\n */\nfunction Stream(tokens) {\n  /** @type {!Array.<number>} */\n  this.tokens = [].slice.call(tokens);\n}\n\nStream.prototype = {\n  /**\n   * @return {boolean} True if end-of-stream has been hit.\n   */\n  endOfStream: function() {\n    return !this.tokens.length;\n  },\n\n  /**\n   * When a token is read from a stream, the first token in the\n   * stream must be returned and subsequently removed, and\n   * end-of-stream must be returned otherwise.\n   *\n   * @return {number} Get the next token from the stream, or\n   * end_of_stream.\n   */\n   read: function() {\n    if (!this.tokens.length)\n      return end_of_stream;\n     return this.tokens.shift();\n   },\n\n  /**\n   * When one or more tokens are prepended to a stream, those tokens\n   * must be inserted, in given order, before the first token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\n   */\n  prepend: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.unshift(tokens.pop());\n    } else {\n      this.tokens.unshift(token);\n    }\n  },\n\n  /**\n   * When one or more tokens are pushed to a stream, those tokens\n   * must be inserted, in given order, after the last token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\n   */\n  push: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.push(tokens.shift());\n    } else {\n      this.tokens.push(token);\n    }\n  }\n};\n\n//\n// 4. Encodings\n//\n\n// 4.1 Encoders and decoders\n\n/** @const */\nvar finished = -1;\n\n/**\n * @param {boolean} fatal If true, decoding errors raise an exception.\n * @param {number=} opt_code_point Override the standard fallback code point.\n * @return {number} The code point to insert on a decoding error.\n */\nfunction decoderError(fatal, opt_code_point) {\n  if (fatal)\n    throw TypeError('Decoder error');\n  return opt_code_point || 0xFFFD;\n}\n\n/** @interface */\nfunction Decoder() {}\nDecoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point, or |finished|.\n   */\n  handler: function(stream, bite) {}\n};\n\n/** @interface */\nfunction Encoder() {}\nEncoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of code points being encoded.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit, or |finished|.\n   */\n  handler: function(stream, code_point) {}\n};\n\n//\n// 7. API\n//\n\n/** @const */ var DEFAULT_ENCODING = 'utf-8';\n\n// 7.1 Interface TextDecoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextDecoder(encoding, options) {\n  if (!(this instanceof TextDecoder)) {\n    return new TextDecoder(encoding, options);\n  }\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {boolean} */\n  this._BOMseen = false;\n  /** @private @type {?Decoder} */\n  this._decoder = null;\n  /** @private @type {boolean} */\n  this._fatal = Boolean(options['fatal']);\n  /** @private @type {boolean} */\n  this._ignoreBOM = Boolean(options['ignoreBOM']);\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n  Object.defineProperty(this, 'fatal', {value: this._fatal});\n  Object.defineProperty(this, 'ignoreBOM', {value: this._ignoreBOM});\n}\n\nTextDecoder.prototype = {\n  /**\n   * @param {ArrayBufferView=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  decode: function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input &&\n               input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer,\n                             input.byteOffset,\n                             input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n\n    options = ToDictionary(options);\n\n    if (!this._streaming) {\n      this._decoder = new UTF8Decoder({fatal: this._fatal});\n      this._BOMseen = false;\n    }\n    this._streaming = Boolean(options['stream']);\n\n    var input_stream = new Stream(bytes);\n\n    var code_points = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n\n    while (!input_stream.endOfStream()) {\n      result = this._decoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (result === null)\n        continue;\n      if (Array.isArray(result))\n        code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n      else\n        code_points.push(result);\n    }\n    if (!this._streaming) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (result === null)\n          continue;\n        if (Array.isArray(result))\n          code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n        else\n          code_points.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n\n    if (code_points.length) {\n      // If encoding is one of utf-8, utf-16be, and utf-16le, and\n      // ignore BOM flag and BOM seen flag are unset, run these\n      // subsubsteps:\n      if (['utf-8'].indexOf(this.encoding) !== -1 &&\n          !this._ignoreBOM && !this._BOMseen) {\n        // If token is U+FEFF, set BOM seen flag.\n        if (code_points[0] === 0xFEFF) {\n          this._BOMseen = true;\n          code_points.shift();\n        } else {\n          // Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to output.\n          this._BOMseen = true;\n        }\n      }\n    }\n\n    return codePointsToString(code_points);\n  }\n};\n\n// 7.2 Interface TextEncoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextEncoder(encoding, options) {\n  if (!(this instanceof TextEncoder))\n    return new TextEncoder(encoding, options);\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {?Encoder} */\n  this._encoder = null;\n  /** @private @type {{fatal: boolean}} */\n  this._options = {fatal: Boolean(options['fatal'])};\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n}\n\nTextEncoder.prototype = {\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  encode: function encode(opt_string, options) {\n    opt_string = opt_string ? String(opt_string) : '';\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\n    // so streaming is not necessary.\n    if (!this._streaming)\n      this._encoder = new UTF8Encoder(this._options);\n    this._streaming = Boolean(options['stream']);\n\n    var bytes = [];\n    var input_stream = new Stream(stringToCodePoints(opt_string));\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._encoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (Array.isArray(result))\n        bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n      else\n        bytes.push(result);\n    }\n    if (!this._streaming) {\n      while (true) {\n        result = this._encoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (Array.isArray(result))\n          bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n        else\n          bytes.push(result);\n      }\n      this._encoder = null;\n    }\n    return new Uint8Array(bytes);\n  }\n};\n\n//\n// 8. The encoding\n//\n\n// 8.1 utf-8\n\n/**\n * @constructor\n * @implements {Decoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Decoder(options) {\n  var fatal = options.fatal;\n\n  // utf-8's decoder's has an associated utf-8 code point, utf-8\n  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n  // lower boundary (initially 0x80), and a utf-8 upper boundary\n  // (initially 0xBF).\n  var /** @type {number} */ utf8_code_point = 0,\n      /** @type {number} */ utf8_bytes_seen = 0,\n      /** @type {number} */ utf8_bytes_needed = 0,\n      /** @type {number} */ utf8_lower_boundary = 0x80,\n      /** @type {number} */ utf8_upper_boundary = 0xBF;\n\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point.\n   */\n  this.handler = function(stream, bite) {\n    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n    // set utf-8 bytes needed to 0 and return error.\n    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n      utf8_bytes_needed = 0;\n      return decoderError(fatal);\n    }\n\n    // 2. If byte is end-of-stream, return finished.\n    if (bite === end_of_stream)\n      return finished;\n\n    // 3. If utf-8 bytes needed is 0, based on byte:\n    if (utf8_bytes_needed === 0) {\n\n      // 0x00 to 0x7F\n      if (inRange(bite, 0x00, 0x7F)) {\n        // Return a code point whose value is byte.\n        return bite;\n      }\n\n      // 0xC2 to 0xDF\n      if (inRange(bite, 0xC2, 0xDF)) {\n        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\n        // − 0xC0.\n        utf8_bytes_needed = 1;\n        utf8_code_point = bite - 0xC0;\n      }\n\n      // 0xE0 to 0xEF\n      else if (inRange(bite, 0xE0, 0xEF)) {\n        // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n        if (bite === 0xE0)\n          utf8_lower_boundary = 0xA0;\n        // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n        if (bite === 0xED)\n          utf8_upper_boundary = 0x9F;\n        // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\n        // byte − 0xE0.\n        utf8_bytes_needed = 2;\n        utf8_code_point = bite - 0xE0;\n      }\n\n      // 0xF0 to 0xF4\n      else if (inRange(bite, 0xF0, 0xF4)) {\n        // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n        if (bite === 0xF0)\n          utf8_lower_boundary = 0x90;\n        // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n        if (bite === 0xF4)\n          utf8_upper_boundary = 0x8F;\n        // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\n        // byte − 0xF0.\n        utf8_bytes_needed = 3;\n        utf8_code_point = bite - 0xF0;\n      }\n\n      // Otherwise\n      else {\n        // Return error.\n        return decoderError(fatal);\n      }\n\n      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\n      // point to utf-8 code point << (6 × utf-8 bytes needed) and\n      // return continue.\n      utf8_code_point = utf8_code_point << (6 * utf8_bytes_needed);\n      return null;\n    }\n\n    // 4. If byte is not in the range utf-8 lower boundary to utf-8\n    // upper boundary, run these substeps:\n    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n\n      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n      // utf-8 upper boundary to 0xBF.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 2. Prepend byte to stream.\n      stream.prepend(bite);\n\n      // 3. Return error.\n      return decoderError(fatal);\n    }\n\n    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n    // to 0xBF.\n    utf8_lower_boundary = 0x80;\n    utf8_upper_boundary = 0xBF;\n\n    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\n    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\n    // needed − utf-8 bytes seen)).\n    utf8_bytes_seen += 1;\n    utf8_code_point += (bite - 0x80) << (6 * (utf8_bytes_needed - utf8_bytes_seen));\n\n    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n    // continue.\n    if (utf8_bytes_seen !== utf8_bytes_needed)\n      return null;\n\n    // 8. Let code point be utf-8 code point.\n    var code_point = utf8_code_point;\n\n    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n    // seen to 0.\n    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n    // 10. Return a code point whose value is code point.\n    return code_point;\n  };\n}\n\n/**\n * @constructor\n * @implements {Encoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Encoder(options) {\n  var fatal = options.fatal;\n  /**\n   * @param {Stream} stream Input stream.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit.\n   */\n  this.handler = function(stream, code_point) {\n    // 1. If code point is end-of-stream, return finished.\n    if (code_point === end_of_stream)\n      return finished;\n\n    // 2. If code point is in the range U+0000 to U+007F, return a\n    // byte whose value is code point.\n    if (inRange(code_point, 0x0000, 0x007f))\n      return code_point;\n\n    // 3. Set count and offset based on the range code point is in:\n    var count, offset;\n    // U+0080 to U+07FF:    1 and 0xC0\n    if (inRange(code_point, 0x0080, 0x07FF)) {\n      count = 1;\n      offset = 0xC0;\n    }\n    // U+0800 to U+FFFF:    2 and 0xE0\n    else if (inRange(code_point, 0x0800, 0xFFFF)) {\n      count = 2;\n      offset = 0xE0;\n    }\n    // U+10000 to U+10FFFF: 3 and 0xF0\n    else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n      count = 3;\n      offset = 0xF0;\n    }\n\n    // 4.Let bytes be a byte sequence whose first byte is (code\n    // point >> (6 × count)) + offset.\n    var bytes = [(code_point >> (6 * count)) + offset];\n\n    // 5. Run these substeps while count is greater than 0:\n    while (count > 0) {\n\n      // 1. Set temp to code point >> (6 × (count − 1)).\n      var temp = code_point >> (6 * (count - 1));\n\n      // 2. Append to bytes 0x80 | (temp & 0x3F).\n      bytes.push(0x80 | (temp & 0x3F));\n\n      // 3. Decrease count by one.\n      count -= 1;\n    }\n\n    // 6. Return bytes bytes, in order.\n    return bytes;\n  };\n}\n\nexport {TextEncoder, TextDecoder};\n"],"names":["require","buffer_1","checkUint8Array","b","Uint8Array","TypeError","uint8ArrayToBuffer","Buffer","from","buffer","byteOffset","length","Layout","constructor","span","property","Number","isInteger","makeDestinationObject","getSpan","offset","RangeError","replicate","rv","Object","create","prototype","assign","fromArray","values","nameWithProperty","name","lo","bindConstructorLayout","Class","layout","hasOwnProperty","call","Error","layout_","boundConstructor_","defineProperty","value","encode","writable","decode","ExternalLayout","isCount","GreedyCount","elementSpan","rem","Math","floor","src","OffsetLayout","UInt","UIntBE","readUIntLE","writeUIntLE","readUIntBE","writeUIntBE","Int","readIntLE","writeIntLE","IntBE","readIntBE","writeIntBE","V2E32","pow","divmodInt64","hi32","lo32","roundedInt64","NearUInt64","readUInt32LE","split","writeUInt32LE","NearUInt64BE","readUInt32BE","writeUInt32BE","NearInt64","readInt32LE","writeInt32LE","NearInt64BE","readInt32BE","writeInt32BE","Float","readFloatLE","writeFloatLE","FloatBE","readFloatBE","writeFloatBE","Double","readDoubleLE","writeDoubleLE","DoubleBE","readDoubleBE","writeDoubleBE","Sequence","elementLayout","count","idx","i","push","elo","reduce","v","Structure","fields","decodePrefixes","Array","isArray","acc","undefined","fd","e","fsp","dest","firstOffset","lastOffset","lastWrote","fv","shift","layoutFor","offsetOf","UnionDiscriminator","UnionLayoutDiscriminator","Union","discr","defaultLayout","discriminator","usesPrefixDiscriminator","registry","boundGetSourceVariant","defaultGetSourceVariant","bind","getSourceVariant","configGetSourceVariant","gsv","vlo","getVariant","tag","dlo","clo","contentOffset","addVariant","variant","VariantLayout","vb","union","fixBitwiseResult","BitStructure","word","msb","_packedSetValue","_packedGetValue","addField","bits","bf","BitField","addBoolean","Boolean","fieldFor","container","totalBits","usedBits","sum","valueMask","start","wordMask","wordValue","Blob","slice","srcBuffer","write","toString","CString","String","srcb","copy","UTF8","maxSpan","Constant","exports","base64","ieee754","customInspectSymbol","Symbol","SlowBuffer","INSPECT_MAX_BYTES","K_MAX_LENGTH","typedArraySupport","arr","proto","foo","setPrototypeOf","createBuffer","buf","arg","encodingOrOffset","allocUnsafe","fromString","ArrayBuffer","isView","fromArrayView","isInstance","fromArrayBuffer","SharedArrayBuffer","valueOf","fromObject","toPrimitive","assertSize","size","alloc","fill","encoding","checked","string","isEncoding","byteLength","actual","fromArrayLike","array","arrayView","obj","isBuffer","len","numberIsNaN","type","data","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","end","this","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","m","bidirectionalIndexOf","val","dir","arrayIndexOf","indexOf","lastIndexOf","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","j","hexWrite","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","asciiToBytes","base64Write","ucs2Write","utf16leToBytes","fromByteArray","min","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","kMaxLength","TYPED_ARRAY_SUPPORT","console","error","enumerable","get","poolSize","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","set","swap16","swap32","swap64","apply","toLocaleString","equals","inspect","str","max","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","MAX_ARGUMENTS_LENGTH","codePoints","fromCharCode","ret","out","hexSliceLookupTable","bytes","checkOffset","ext","checkInt","wrtBigUInt64LE","checkIntBI","BigInt","hi","wrtBigUInt64BE","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","subarray","readUintLE","mul","readUintBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUint32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","first","last","boundsError","readBigUInt64BE","readInt8","readInt16LE","readInt16BE","readBigInt64LE","readBigInt64BE","writeUintLE","maxBytes","writeUintBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUint32BE","writeBigUInt64LE","writeBigUInt64BE","limit","sub","writeInt8","writeInt16LE","writeInt16BE","writeBigInt64LE","writeBigInt64BE","targetStart","copyWithin","code","charCodeAt","errors","E","sym","getMessage","Base","super","configurable","stack","message","addNumericalSeparator","checkBounds","range","ERR_OUT_OF_RANGE","ERR_INVALID_ARG_TYPE","ERR_BUFFER_OUT_OF_BOUNDS","input","msg","received","abs","INVALID_BASE64_RE","base64clean","units","Infinity","leadSurrogate","byteArray","c","toByteArray","dst","alphabet","table","i16","fn","BufferBigIntNotDefined","_Buffer","base","ALPHABET","BASE_MAP","charAt","xc","BASE","LEADER","FACTOR","log","iFACTOR","source","zeroes","pbegin","pend","b58","carry","it1","it2","repeat","decodeUnsafe","psz","b256","it3","it4","vch","module","toBigIntLE","reversed","reverse","hex","toBigIntBE","toBufferLE","num","width","padStart","toBufferBE","__createBinding","o","k","k2","__setModuleDefault","__decorate","decorators","key","desc","d","r","getOwnPropertyDescriptor","Reflect","decorate","__importStar","mod","__esModule","result","__importDefault","deserializeUnchecked","deserialize","serialize","BinaryReader","BinaryWriter","BorshError","baseDecode","baseEncode","bn_js_1","bs58_1","ResolvedTextDecoder","TextDecoder","textDecoder","fatal","default","INITIAL_LENGTH","fieldPath","originalMessage","addToFieldPath","fieldName","splice","join","maybeResize","writeU8","writeU16","writeU32","writeU64","writeBuffer","toArray","writeU128","writeU256","writeU512","writeString","writeFixedArray","writeArray","elem","handlingRangeError","propertyKey","propertyDescriptor","originalMethod","args","readU8","readU16","readU32","readU64","readBuffer","readU128","readU256","readU512","readString","readFixedArray","readArray","capitalizeFirstLetter","toUpperCase","serializeField","schema","fieldType","writer","item","kind","forEach","serializeStruct","borshSerialize","structSchema","map","field","Writer","deserializeField","reader","option","Map","deserializeStruct","classType","borshDeserialize","fieldValue","Reader","basex","uuid","generateRequest","ClientBrowser","callServer","options","reviver","replacer","generator","version","notificationIdNull","request","method","params","id","callback","self","isBatch","isRaw","hasCallback","err","JSON","stringify","response","_parseResponse","responseText","parse","isError","isNotError","filter","jsonrpc","_interopRequireDefault","_regenerator","_asyncToGenerator2","_typeof2","_classCallCheck2","_createClass2","_inherits2","_possibleConstructorReturn2","_getPrototypeOf2","_eventemitter","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","Super","NewTarget","construct","sham","Proxy","__rest","s","t","p","getOwnPropertySymbols","propertyIsEnumerable","CommonClient","_EventEmitter","_super","webSocketFactory","_this","address","_a","generate_request_id","_a$autoconnect","autoconnect","_a$reconnect","reconnect","_a$reconnect_interval","reconnect_interval","_a$max_reconnects","max_reconnects","rest_options","queue","rpc_id","ready","reconnect_timer_id","current_reconnects","_connect","socket","timeout","ws_opts","_this2","Promise","resolve","reject","send","promise","setTimeout","_login","mark","_callee","resp","wrap","_context","prev","next","sent","abrupt","stop","login","_x","_listMethods","_callee2","_context2","listMethods","_this3","_subscribe","_callee3","event","_context3","subscribe","_x2","_unsubscribe","_callee4","_context4","unsubscribe","_x3","close","_this4","clearTimeout","addEventListener","emit","_ref","notification","listeners","keys","then","_ref2","reason","EventEmitter","_default","WebSocketBrowserImpl","protocols","window","WebSocket","onopen","onmessage","onerror","onclose","optionsOrCallback","cb","listener","_assertThisInitialized","ReferenceError","asyncGeneratorStep","gen","_next","_throw","info","done","_asyncToGenerator","_classCallCheck","instance","Constructor","toPropertyKey","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","_getPrototypeOf","getPrototypeOf","__proto__","_inherits","subClass","superClass","_typeof","assertThisInitialized","_possibleConstructorReturn","_regeneratorRuntime","Op","hasOwn","$Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","innerFn","outerFn","tryLocsList","protoGenerator","Generator","context","Context","makeInvokeMethod","tryCatch","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","Gp","defineIteratorMethods","_invoke","AsyncIterator","PromiseImpl","invoke","record","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","state","delegate","delegateResult","maybeInvokeDelegate","_sent","dispatchException","methodName","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","awrap","async","iter","object","pop","skipTempReset","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","_setPrototypeOf","_toPrimitive","hint","prim","_toPropertyKey","runtime","regeneratorRuntime","accidentalStrictMode","globalThis","Function","number","isSafeInteger","lengths","hash","outputLen","blockLen","exists","checkFinished","destroyed","finished","output","crypto","u8a","u32","Uint32Array","createView","DataView","rotr","isLE","TextEncoder","toBytes","concatBytes","arrays","pad","Hash","clone","_cloneInto","wrapConstructor","hashCons","hashC","update","digest","tmp","randomBytes","bytesLength","getRandomValues","setBigUint64","view","_32n","_u32_max","wh","wl","h","l","setUint32","SHA2","padOffset","take","process","dataView","roundClean","digestInto","oview","outLen","destroy","to","U32_MASK64","fromBig","le","lst","Ah","Al","toBig","shrSH","_l","shrSL","rotrSH","rotrSL","rotrBH","rotrBL","rotr32H","_h","rotr32L","rotlSH","rotlSL","rotlBH","rotlBL","add","Bh","Bl","add3L","Cl","add3H","low","Ch","add4L","Dl","add4H","Dh","add5L","El","add5H","Eh","u64","SHA512_Kh","SHA512_Kl","SHA512_W_H","SHA512_W_L","SHA512","Fh","Fl","Gh","Gl","Hh","Hl","getUint32","W15h","W15l","s0h","s0l","W2h","W2l","s1h","s1l","SUMl","SUMh","sigma1h","sigma1l","CHIh","CHIl","T1ll","T1h","T1l","sigma0h","sigma0l","MAJh","MAJl","All","sha512","_1n","_2n","hexes","_","bytesToHex","hexToNumber","hexToBytes","hexByte","byte","bytesToNumberBE","bytesToNumberLE","numberToBytesBE","numberToBytesLE","ensureBytes","title","expectedLength","bitMask","u8n","u8fr","createHmacDrbg","hashLen","qByteLen","hmacFn","reseed","seed","sl","genUntil","pred","validatorFns","bigint","function","boolean","stringOrUint8Array","Fp","isValid","validateObject","validators","optValidators","checkField","isOptional","checkVal","entries","_0n","_3n","_4n","_5n","_8n","power","modulo","pow2","invert","u","q","gcd","tonelliShanks","P","legendreC","Q","S","Z","p1div4","root","eql","sqr","Q1div2","neg","ONE","g","ZERO","t2","ge","FpSqrt","c1","n2","nv","isNegativeLE","FIELD_FIELDS","validateField","initial","ORDER","MASK","BYTES","BITS","opts","FpPow","f","FpInvertBatch","nums","lastMultiplied","is0","inverted","inv","reduceRight","nLength","nBitLength","_nBitLength","nByteLength","ceil","Field","bitLen","redef","sqrtP","freeze","isOdd","lhs","rhs","div","sqrN","addN","subN","mulN","sqrt","invertBatch","cmov","fromBytes","FpSqrtEven","elm","getFieldBytesLength","fieldOrder","bitLength","getMinHashLength","mapHashToField","fieldLen","minLen","reduced","wNAF","constTimeNegate","condition","negate","W","windows","windowSize","unsafeLadder","double","precomputeWindow","points","precomputes","mask","maxNumber","shiftBy","wbits","offset1","offset2","cond1","cond2","wNAFCached","precomputesMap","transform","_WINDOW_SIZE","comp","validateBasic","curve","Gx","Gy","VERIFY_DEFAULT","zip215","validateOpts","ut","adjustScalarBytes","domain","uvRatio","mapToCurve","twistedEdwards","curveDef","CURVE","CURVE_ORDER","prehash","cHash","cofactor","modP","ctx","phflag","inBig","inRange","in0MaskRange","assertInRange","assertGE0","pointPrecomputes","isPoint","other","Point","ex","ey","ez","et","toAffine","fromAffine","normalizeZ","toInv","_setWindowSize","delete","assertValidity","X","Y","T","X2","Y2","Z2","Z4","aX2","left","right","XY","ZT","X1","Y1","Z1","X1Z2","X2Z1","Y1Z2","Y2Z1","A","B","C","D","x1y1","G","F","H","X3","Y3","T3","Z3","T1","T2","subtract","wnaf","multiply","scalar","multiplyUnsafe","I","isSmallOrder","isTorsionFree","iz","z","ax","ay","zz","clearCofactor","fromHex","normed","lastByte","y2","isXOdd","isLastByteOdd","fromPrivateKey","privKey","getExtendedPublicKey","point","toRawBytes","toHex","modN","modN_LE","hashed","head","prefix","pointBytes","getPublicKey","hashDomainToScalar","msgs","sign","R","verifyOpts","verify","sig","publicKey","SB","RkA","utils","randomPrivateKey","precompute","ExtendedPoint","ED25519_P","ED25519_SQRT_M1","_10n","_20n","_40n","_80n","ed25519_pow_2_252_3","x2","b2","b4","b5","b10","b20","b40","b80","b160","b240","b250","pow_p_5_8","v3","v7","vx2","root1","root2","useRoot1","useRoot2","noRoot","ed25519Defaults","ed25519","ed25519_domain","ELL2_C1","Chi","Maj","SHA256_K","IV","SHA256_W","SHA256","W15","W2","s0","s1","sigma1","sigma0","sha256","_arrayWithoutHoles","arrayLikeToArray","_nonIterableSpread","_toConsumableArray","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","_objectWithoutProperties","excluded","objectWithoutPropertiesLoose","sourceSymbolKeys","StructError","failure","failures","cached","rest","path","_cached","isIterable","isObject","print","shiftIterator","toFailure","struct","branch","refinement","toFailures","run","coerce","coercer","valid","validator","ts","Set","refiner","Struct","assert","is","validate","tuples","tuple","any","Element","literal","constant","description","never","nullable","optional","Key","Value","Elements","Never","Structs","unknown","_isNativeFunction","_construct","Parent","isNativeReflectConstruct","_wrapNativeSuper","_cache","isNativeFunction","has","Wrapper","_superPropBase","_get","receiver","superPropBase","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","_7n","_256n","_0x71n","round","SHA3_IOTA_H","SHA3_IOTA_L","rotlH","rotlL","keccakP","rounds","idx1","idx0","B0","B1","Th","Tl","curH","curL","PI","Keccak","suffix","enableXOF","posOut","state32","keccak","writeInto","bufferOut","xofInto","xof","keccak_256","HMAC","_key","assertHash","iHash","oHash","assertExists","assertBytes","hmac","validatePointOpts","allowedPrivateKeyLengths","wrapPrivateKey","allowInfinityPoint","endo","beta","splitScalar","b2n","h2b","DER","Err","_parseInt","toSig","sBytes","rBytesLeft","hexFromSig","shl","rhl","rl","weierstrassPoints","_c","_isCompressed","tail","weierstrassEquation","x3","isWithinCurveOrder","assertGE","normPrivateKeyToScalar","assertPrjPoint","px","py","pz","privateKey","hasEvenY","U1","U2","b3","t0","t1","t3","t4","t5","k1neg","k1","k2neg","k1p","k2p","fake","f1p","f2p","multiplyAndAddUnsafe","isCompressed","_bits","ProjectivePoint","bits2int","bits2int_modN","lowS","weierstrass","compressedLen","uncompressedLen","isValidFieldElement","invN","cat","isYOdd","isHeadOdd","numToNByteStr","isBiggerThanHalfOrder","HALF","normalizeS","slcNum","Signature","recovery","fromCompact","fromDER","addRecoveryBit","recoverPublicKey","msgHash","rec","radj","ir","u1","u2","hasHighS","toDERRawBytes","toDERHex","toCompactRawBytes","toCompactHex","isValidPrivateKey","isProbPub","getSharedSecret","privateA","publicB","delta","ORDER_MASK","int2octets","prepSig","defaultSigOpts","some","extraEntropy","ent","h1int","seedArgs","k2sig","kBytes","ik","normS","defaultVerOpts","drbg","signature","sg","_sig","derError","getHash","createCurve","defHash","secp256k1P","secp256k1N","divNearest","sqrtMod","_6n","_11n","_22n","_23n","_44n","_88n","b6","b9","b11","b22","b44","b88","b176","b220","b223","secp256k1","a1","b1","a2","POW_2_128","c2","generateKeypair","privateScalar","secretKey","isOnCurve","_unused","toBuffer","properties","SOLANA_SCHEMA","MAX_SEED_LENGTH","PUBLIC_KEY_LENGTH","isPublicKeyData","_bn","uniquePublicKeyCounter","_Symbol$toStringTag","PublicKey","_Struct","_createSuper$3","decoded","bs58","BN","eq","toBase58","toArrayLike","zeroPad","_createWithSeed","fromPublicKey","programId","publicKeyBytes","createWithSeed","seeds","_createProgramAddress","createProgramAddressSync","createProgramAddress","_x4","_x5","nonce","seedsWithNonce","_findProgramAddress","findProgramAddressSync","findProgramAddress","_x6","_x7","pubkeyData","pubkey","PACKET_DATA_SIZE","VERSION_PREFIX_MASK","SIGNATURE_LENGTH_IN_BYTES","TransactionExpiredBlockheightExceededError","_Error","_createSuper$2","TransactionExpiredTimeoutError","_Error2","_super2","timeoutSeconds","toFixed","TransactionExpiredNonceInvalidError","_Error3","_super3","MessageAccountKeys","staticAccountKeys","accountKeysFromLookups","keySegments","readonly","index","_step","_iterator","_createForOfIteratorHelper$5","keySegment","flat","instructions","U8_MAX","keyIndexMap","findKeyIndex","keyIndex","instruction","programIdIndex","accountKeyIndexes","meta","BufferLayout","rustString","rsl","_decode","_encode","rslShim","chars","authorized","lockup","voteInit","voteAuthorizeWithSeedArgs","getAlloc","getItemAlloc","decodeLength","encodeLength","rem_len","CompiledKeys","payer","keyMetaMap","mapEntries","writableSigners","_slicedToArray","isSigner","isWritable","readonlySigners","_ref3","_ref4","writableNonSigners","_ref5","_ref6","readonlyNonSigners","_ref7","_ref8","header","numRequiredSignatures","numReadonlySignedAccounts","numReadonlyUnsignedAccounts","_writableSigners$","payerAddress","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","lookupTable","_this$drainKeysFoundI","drainKeysFoundInLookupTable","addresses","keyMeta","isInvoked","_this$drainKeysFoundI2","writableIndexes","drainedWritableKeys","_this$drainKeysFoundI3","_this$drainKeysFoundI4","readonlyIndexes","drainedReadonlyKeys","accountKey","lookupTableEntries","keyMetaFilter","lookupTableIndexes","drainedKeys","_createForOfIteratorHelper$4","_loop","_step$value","lookupTableIndex","findIndex","getOrInsertDefault","payerKeyMeta","_step2","_iterator2","ix","_step3","_iterator3","accountMeta","_keyMeta","Message","accountKeys","recentBlockhash","indexToProgramIds","account","accounts","numSignedAccounts","unsignedAccountIndex","numUnsignedAccounts","numWritableUnsignedAccounts","numWritableSignedAccounts","isProgramId","numKeys","keyCount","keyIndicesCount","dataCount","keyIndices","dataLength","instructionCount","instructionBuffer","instructionBufferLength","instructionLayout","signDataLayout","transaction","signData","compiledKeys","compile","payerKey","_compiledKeys$getMess","getMessageComponents","_compiledKeys$getMess2","compileInstructions","accountCount","_i","_accountCount","dataSlice","messageArgs","MessageV0","compiledInstructions","addressTableLookups","_createForOfIteratorHelper$3","lookup","numAccountKeysFromLookups","addressLookupTableAccounts","resolveAddressTableLookups","numStaticAccountKeys","lookupAccountKeysIndex","numWritableLookupAccountKeys","tableLookup","tableAccount","find","_step4","_iterator4","_index","encodedStaticAccountKeysLength","serializedInstructions","serializeInstructions","encodedInstructionsLength","serializedAddressTableLookups","serializeAddressTableLookups","encodedAddressTableLookupsLength","messageLayout","serializedMessage","MESSAGE_VERSION_0_PREFIX","serializedMessageLength","staticAccountKeysLength","instructionsLength","addressTableLookupsLength","_step5","serializedLength","_iterator5","encodedAccountKeyIndexesLength","encodedDataLength","_step6","_iterator6","encodedWritableIndexesLength","encodedReadonlyIndexesLength","addressTableLookupLayout","_step7","lookupTableAccounts","_iterator7","extractResult","extractTableLookup","_accountKeysFromLooku","_accountKeysFromLooku2","_extractResult","addressTableLookup","_extractResult$","maskedPrefix","accountKeyIndexesLength","addressTableLookupsCount","_i2","writableIndexesLength","readonlyIndexesLength","TransactionStatus","DEFAULT_SIGNATURE","TransactionInstruction","Transaction","signatures","feePayer","lastValidBlockHeight","nonceInfo","minNonceContextSlot","_message","_json","minContextSlot","blockhash","_nonceInfo","nonceInstruction","signers","_len","items","warn","programIds","accountMetas","_objectSpread$2","uniqueMetas","pubkeyString","uniqueIndex","sort","localeMatcher","usage","sensitivity","ignorePunctuation","numeric","caseFirst","localeCompare","feePayerIndex","_uniqueMetas$splice","_uniqueMetas$splice2","payerMeta","unshift","_createForOfIteratorHelper$2","signedKeys","unsignedKeys","compileMessage","every","pair","_compile","_getEstimatedFee","connection","getFeeForMessage","getEstimatedFee","_len2","_key2","seen","_len3","_key3","uniqueSigners","_signers","signer","_partialSign","_len4","_key4","_signers2","_len5","_key5","_addSignature","sigpair","requireAllSignatures","_verifySignatures","serializeMessage","_step2$value","config","_Object$assign","verifySignatures","_serialize","signatureCount","transactionLength","wireTransaction","keyObj","populate","sigPubkeyPair","isAccountSigner","isAccountWritable","NUM_TICKS_PER_SECOND","DEFAULT_TICKS_PER_SLOT","NUM_SLOTS_PER_SECOND","MS_PER_SLOT","SYSVAR_CLOCK_PUBKEY","SYSVAR_RECENT_BLOCKHASHES_PUBKEY","SYSVAR_RENT_PUBKEY","SYSVAR_STAKE_HISTORY_PUBKEY","sendAndConfirmTransaction","_sendAndConfirmTransaction","sendOptions","status","nonceAccountPubkey","skipPreflight","preflightCommitment","commitment","maxRetries","sendTransaction","confirmTransaction","abortSignal","nonceValue","sleep","ms","encodeData","allocLength","layoutFields","FeeCalculatorLayout","NonceAccountLayout","NONCE_ACCOUNT_LENGTH","NonceAccount","authorizedPubkey","feeCalculator","nonceAccount","encodeDecode","bigInt","blob","_encodeDecode","bigIntLayout","SYSTEM_INSTRUCTION_LAYOUTS","Create","Assign","Transfer","CreateWithSeed","AdvanceNonceAccount","WithdrawNonceAccount","InitializeNonceAccount","AuthorizeNonceAccount","Allocate","AllocateWithSeed","AssignWithSeed","TransferWithSeed","UpgradeNonceAccount","SystemProgram","lamports","space","fromPubkey","newAccountPubkey","basePubkey","toPubkey","_type","accountPubkey","_type2","createAccountWithSeed","noncePubkey","createAccount","initParams","nonceInitialize","instructionData","newAuthorizedPubkey","_type3","CHUNK_SIZE","Loader","chunkSize","_load","program","balanceNeeded","programInfo","dataLayout","transactions","_data","_transaction","REQUESTS_PER_SECOND","_dataLayout","_data2","_transaction2","deployCommitment","finalizeSignature","_yield$connection$con","currentSlot","getMinimumBalanceForRentExemption","getAccountInfo","executable","allocate","owner","transfer","bytesLengthPadding","_rpcEndpoint","all","getSlot","slot","load","objToString","objKeys","isArrayProp","propVal","toStr","fastStableStringify","returnVal","MINIMUM_SLOT_PER_EPOCH","trailingZeros","nextPowerOfTwo","EpochSchedule","slotsPerEpoch","leaderScheduleSlotOffset","warmup","firstNormalEpoch","firstNormalSlot","getEpochAndSlotIndex","epoch","epochLen","getSlotsInEpoch","slotIndex","normalSlotIndex","normalEpochIndex","_epoch","_slotIndex","getFirstSlotInEpoch","SendTransactionError","_createSuper$1","logs","SolanaJSONRPCError","customMessage","fetchImpl","fetch","RpcWebSocketClient","_RpcWebSocketCommonCl","url","rpc","createRpc","_objectSpread$1","underlyingSocket","_this$underlyingSocke","_get2","readyState","_this$underlyingSocke2","_get3","RpcWebSocketCommonClient","decodeData","typeIndex","LOOKUP_TABLE_META_SIZE","AddressLookupTableAccount","U64_MAX","deactivationSlot","accountData","LookupTableMetaLayout","serializedAddressesLen","numSerializedAddresses","_BufferLayout$struct$","lastExtendedSlot","lastExtendedSlotStartIndex","lastExtendedStartIndex","authority","URL_RE","makeWebsocketUrl","endpoint","matches","match","_matches","hostish","portWithColon","protocol","startsWith","startPort","websocketPort","PublicKeyFromString","RawAccountDataResult","BufferFromRawAccountData","BLOCKHASH_CACHE_TIMEOUT_MS","assertEndpointUrl","putativeUrl","test","extractCommitmentFromConfig","commitmentOrConfig","specifiedCommitment","specifiedConfig","_excluded","createRpcResult","UnknownRpcResult","jsonRpcResult","_objectSpread","jsonRpcResultAndContext","notificationResultAndContext","versionedMessageFromResponse","GetInflationGovernorResult","foundation","foundationTerm","taper","terminal","GetInflationRewardResult","effectiveSlot","amount","postBalance","commission","GetRecentPrioritizationFeesResult","prioritizationFee","GetInflationRateResult","total","GetEpochInfoResult","slotsInEpoch","absoluteSlot","blockHeight","transactionCount","GetEpochScheduleResult","GetLeaderScheduleResult","TransactionErrorResult","SignatureStatusResult","SignatureReceivedResult","VersionResult","SimulatedTransactionResponseStruct","rentEpoch","unitsConsumed","returnData","BlockProductionResponseStruct","byIdentity","firstSlot","lastSlot","createRpcClient","httpHeaders","customFetch","fetchMiddleware","disableRetryOnRateLimit","httpAgent","agent","fetchWithMiddleware","init","modifiedFetchArgs","modifiedInfo","modifiedInit","clientBrowser","RpcClient","too_many_requests_retries","waitTime","text","body","headers","COMMON_HTTP_HEADERS","statusText","ok","createRpcRequest","client","createRpcBatchRequest","requests","batch","GetInflationGovernorRpcResult","GetInflationRateRpcResult","GetRecentPrioritizationFeesRpcResult","GetEpochInfoRpcResult","GetEpochScheduleRpcResult","GetLeaderScheduleRpcResult","SlotRpcResult","GetSupplyRpcResult","circulating","nonCirculating","nonCirculatingAccounts","TokenAmountResult","uiAmount","decimals","uiAmountString","GetTokenLargestAccountsResult","GetTokenAccountsByOwner","ParsedAccountDataResult","GetParsedTokenAccountsByOwner","GetLargestAccountsRpcResult","AccountInfoResult","KeyedAccountInfoResult","ParsedOrRawAccountData","ParsedAccountInfoResult","KeyedParsedAccountInfoResult","StakeActivationResult","active","inactive","GetConfirmedSignaturesForAddress2RpcResult","memo","blockTime","GetSignaturesForAddressRpcResult","AccountNotificationResult","subscription","ProgramAccountInfoResult","ProgramAccountNotificationResult","SlotInfoResult","parent","SlotNotificationResult","SlotUpdateResult","timestamp","stats","numTransactionEntries","numSuccessfulTransactions","numFailedTransactions","maxTransactionsPerEntry","SlotUpdateNotificationResult","SignatureNotificationResult","RootNotificationResult","ContactInfoResult","gossip","tpu","VoteAccountInfoResult","votePubkey","nodePubkey","activatedStake","epochVoteAccount","epochCredits","lastVote","rootSlot","GetVoteAccounts","current","delinquent","ConfirmationStatus","SignatureStatusResponse","confirmations","confirmationStatus","GetSignatureStatusesRpcResult","GetMinimumBalanceForRentExemptionRpcResult","AddressTableLookupStruct","ConfirmedTransactionResult","AnnotatedAccountKey","ConfirmedTransactionAccountsModeResult","ParsedInstructionResult","RawInstructionResult","InstructionResult","UnknownInstructionResult","ParsedOrRawInstruction","ParsedConfirmedTransactionResult","TokenBalanceResult","accountIndex","mint","uiTokenAmount","LoadedAddressesResult","ConfirmedTransactionMetaResult","fee","innerInstructions","preBalances","postBalances","logMessages","preTokenBalances","postTokenBalances","loadedAddresses","computeUnitsConsumed","ParsedConfirmedTransactionMetaResult","TransactionVersionStruct","RewardsResult","rewardType","GetBlockRpcResult","previousBlockhash","parentSlot","rewards","GetNoneModeBlockRpcResult","GetAccountsModeBlockRpcResult","GetParsedBlockRpcResult","GetParsedAccountsModeBlockRpcResult","GetParsedNoneModeBlockRpcResult","GetConfirmedBlockRpcResult","GetBlockSignaturesRpcResult","GetTransactionRpcResult","GetParsedTransactionRpcResult","GetRecentBlockhashAndContextRpcResult","lamportsPerSignature","GetLatestBlockhashRpcResult","IsBlockhashValidRpcResult","PerfSampleResult","numTransactions","numSlots","samplePeriodSecs","GetRecentPerformanceSamplesRpcResult","GetFeeCalculatorRpcResult","RequestAirdropRpcResult","SendTransactionRpcResult","LogsResult","LogsNotificationResult","_process$env$npm_pack","Connection","_commitmentOrConfig","wsEndpoint","_commitment","_confirmTransactionInitialTimeout","_rpcWsEndpoint","_rpcClient","_rpcRequest","_rpcBatchRequest","_rpcWebSocket","_rpcWebSocketConnected","_rpcWebSocketHeartbeat","_rpcWebSocketIdleTimeout","_rpcWebSocketGeneration","_disableBlockhashCaching","_pollingBlockhash","_blockhashInfo","latestBlockhash","lastFetch","transactionSignatures","simulatedSignatures","_nextClientSubscriptionId","_subscriptionDisposeFunctionsByClientSubscriptionId","_subscriptionHashByClientSubscriptionId","_subscriptionStateChangeCallbacksByHash","_subscriptionCallbacksByServerSubscriptionId","_subscriptionsByHash","_subscriptionsAutoDisposedByRpc","getBlockHeight","requestPromises","_requestPromises$requ","_extractCommitmentFro","requestHash","_buildArgs","fastStableStringify$1","unsafeRes","confirmTransactionInitialTimeout","on","_wsOnOpen","_wsOnError","_wsOnClose","_wsOnAccountNotification","_wsOnProgramAccountNotification","_wsOnSlotNotification","_wsOnSlotUpdatesNotification","_wsOnSignatureNotification","_wsOnRootNotification","_wsOnLogsNotification","_getBalanceAndContext","_callee5","_extractCommitmentFro2","_context5","getBalanceAndContext","_getBalance","_callee6","_context6","getBalance","_x8","_x9","_getBlockTime","_callee7","_context7","getBlockTime","_x10","_getMinimumLedgerSlot","_callee8","_context8","getMinimumLedgerSlot","_getFirstAvailableBlock","_callee9","_context9","getFirstAvailableBlock","_getSupply","_callee10","configArg","_context10","getSupply","_x11","_getTokenSupply","_callee11","tokenMintAddress","_context11","getTokenSupply","_x12","_x13","_getTokenAccountBalance","_callee12","tokenAddress","_context12","getTokenAccountBalance","_x14","_x15","_getTokenAccountsByOwner","_callee13","ownerAddress","_extractCommitmentFro3","_args","_context13","getTokenAccountsByOwner","_x16","_x17","_x18","_getParsedTokenAccountsByOwner","_callee14","_context14","getParsedTokenAccountsByOwner","_x19","_x20","_x21","_getLargestAccounts","_callee15","_context15","getLargestAccounts","_x22","_getTokenLargestAccounts","_callee16","mintAddress","_context16","getTokenLargestAccounts","_x23","_x24","_getAccountInfoAndContext","_callee17","_extractCommitmentFro4","_context17","getAccountInfoAndContext","_x25","_x26","_getParsedAccountInfo","_callee18","_extractCommitmentFro5","_context18","getParsedAccountInfo","_x27","_x28","_getAccountInfo","_callee19","_context19","_x29","_x30","_getMultipleParsedAccounts","_callee20","publicKeys","rawConfig","_extractCommitmentFro6","_context20","getMultipleParsedAccounts","_x31","_x32","_getMultipleAccountsInfoAndContext","_callee21","_extractCommitmentFro7","_context21","getMultipleAccountsInfoAndContext","_x33","_x34","_getMultipleAccountsInfo","_callee22","_context22","getMultipleAccountsInfo","_x35","_x36","_getStakeActivation","_callee23","_extractCommitmentFro8","_context23","getStakeActivation","_x37","_x38","_x39","_getProgramAccounts","_callee24","configOrCommitment","_extractCommitmentFro9","configWithoutEncoding","baseSchema","_context24","_excluded2","withContext","getProgramAccounts","_x40","_x41","_getParsedProgramAccounts","_callee25","_extractCommitmentFro10","_context25","getParsedProgramAccounts","_x42","_x43","_confirmTransaction","_callee26","strategy","rawSignature","_config$abortSignal","_config","decodedSignature","_context26","aborted","confirmTransactionUsingLegacyTimeoutStrategy","confirmTransactionUsingBlockHeightExceedanceStrategy","confirmTransactionUsingDurableNonceStrategy","_x44","_x45","signal","signatureSubscriptionId","disposeSignatureSubscriptionStateChangeObserver","confirmationPromise","onSignature","__type","PROCESSED","subscriptionSetupPromise","resolveSubscriptionSetup","_onSubscriptionStateChange","nextState","_callee27","_context27","getSignatureStatus","abortConfirmation","removeSignatureListener","_confirmTransactionUsingBlockHeightExceedanceStrategy","_callee30","_ref8$strategy","expiryPromise","_this$getTransactionC","cancellationPromise","outcome","_context30","checkBlockHeight","_callee28","_context28","_callee29","currentBlockHeight","_context29","BLOCKHEIGHT_EXCEEDED","getTransactionConfirmationPromise","getCancellationPromise","race","_x46","_confirmTransactionUsingDurableNonceStrategy","_callee33","_ref11$strategy","_this$getTransactionC2","_signatureStatus","signatureStatus","_outcome$slotInWhichN","commitmentForStatus","_context34","currentNonceValue","lastCheckedSlot","getCurrentNonceValue","_callee31","_yield$_this4$getNonc","_context31","_context32","getNonceAndContext","_callee32","_context33","NONCE_INVALID","slotInWhichNonceDidAdvance","_x47","_confirmTransactionUsingLegacyTimeoutStrategy","_callee34","timeoutId","_this$getTransactionC3","_this5","_context35","timeoutMs","TIMED_OUT","_x48","_getClusterNodes","_callee35","_context36","getClusterNodes","_getVoteAccounts","_callee36","_context37","getVoteAccounts","_x49","_getSlot","_callee37","_extractCommitmentFro11","_context38","_x50","_getSlotLeader","_callee38","_extractCommitmentFro12","_context39","getSlotLeader","_x51","_getSlotLeaders","_callee39","startSlot","_context40","getSlotLeaders","_x52","_x53","_getSignatureStatus","_callee40","_yield$this$getSignat","_context41","getSignatureStatuses","_x54","_x55","_getSignatureStatuses","_callee41","_context42","_x56","_x57","_getTransactionCount","_callee42","_extractCommitmentFro13","_context43","getTransactionCount","_x58","_getTotalSupply","_callee43","_context44","excludeNonCirculatingAccountsList","getTotalSupply","_x59","_getInflationGovernor","_callee44","_context45","getInflationGovernor","_x60","_getInflationReward","_callee45","_extractCommitmentFro14","_context46","getInflationReward","_x61","_x62","_x63","_getInflationRate","_callee46","_context47","getInflationRate","_getEpochInfo","_callee47","_extractCommitmentFro15","_context48","getEpochInfo","_x64","_getEpochSchedule","_callee48","epochSchedule","_context49","getEpochSchedule","_getLeaderSchedule","_callee49","_context50","getLeaderSchedule","_getMinimumBalanceForRentExemption","_callee50","_context51","_x65","_x66","_getRecentBlockhashAndContext","_callee51","_context52","getRecentBlockhashAndContext","_x67","_getRecentPerformanceSamples","_callee52","_context53","getRecentPerformanceSamples","_x68","_getFeeCalculatorForBlockhash","_callee53","_res$result","_context54","getFeeCalculatorForBlockhash","_x69","_x70","_getFeeForMessage","_callee54","wireMessage","_context55","_x71","_x72","_getRecentPrioritizationFees","_callee55","_config$lockedWritabl","_context56","lockedWritableAccounts","getRecentPrioritizationFees","_x73","_getRecentBlockhash","_callee56","_context57","getRecentBlockhash","_x74","_getLatestBlockhash","_callee57","_context58","getLatestBlockhashAndContext","getLatestBlockhash","_x75","_getLatestBlockhashAndContext","_callee58","_extractCommitmentFro16","_context59","_x76","_isBlockhashValid","_callee59","_extractCommitmentFro17","_context60","isBlockhashValid","_x77","_x78","_getVersion","_callee60","_context61","getVersion","_getGenesisHash","_callee61","_context62","getGenesisHash","_getBlock","_callee62","_extractCommitmentFro18","_res","_res2","_context63","_buildArgsAtLeastConfirmed","transactionDetails","getBlock","_x79","_x80","_getParsedBlock","_callee63","_extractCommitmentFro19","_res3","_res4","_context64","getParsedBlock","_x81","_x82","_getBlockProduction","_callee64","extra","_context65","_excluded3","getBlockProduction","_x83","_getTransaction","_callee65","_extractCommitmentFro20","_context66","getTransaction","_x84","_x85","_getParsedTransaction","_callee66","_extractCommitmentFro21","_context67","getParsedTransaction","_x86","_x87","_getParsedTransactions","_callee67","_extractCommitmentFro22","_this6","_context68","getParsedTransactions","_x88","_x89","_getTransactions","_callee68","_extractCommitmentFro23","_this7","_context69","getTransactions","_x90","_x91","_getConfirmedBlock","_callee69","block","_context70","_ref17","getConfirmedBlock","_x92","_x93","_getBlocks","_callee70","endSlot","_context71","getBlocks","_x94","_x95","_x96","_getBlockSignatures","_callee71","_context72","getBlockSignatures","_x97","_x98","_getConfirmedBlockSignatures","_callee72","_context73","getConfirmedBlockSignatures","_x99","_x100","_getConfirmedTransaction","_callee73","_context74","getConfirmedTransaction","_x101","_x102","_getParsedConfirmedTransaction","_callee74","_context75","getParsedConfirmedTransaction","_x103","_x104","_getParsedConfirmedTransactions","_callee75","_this8","_context76","getParsedConfirmedTransactions","_x105","_x106","_getConfirmedSignaturesForAddress","_callee76","firstAvailableBlock","highestConfirmedRoot","_block","confirmedSignatureInfo","_context77","until","before","getConfirmedSignaturesForAddress2","getConfirmedSignaturesForAddress","_x107","_x108","_x109","_getConfirmedSignaturesForAddress2","_callee77","_context78","_x110","_x111","_x112","_getSignaturesForAddress","_callee78","_context79","getSignaturesForAddress","_x113","_x114","_x115","_getAddressLookupTable","_callee79","_yield$this$getAccoun","accountInfo","_context80","getAddressLookupTable","_x116","_x117","_getNonceAndContext","_callee80","_yield$this$getAccoun2","_context81","fromAccountData","_x118","_x119","_getNonce","_callee81","_context82","getNonce","_x120","_x121","_requestAirdrop","_callee82","_context83","requestAirdrop","_x122","_x123","_blockhashWithExpiryBlockHeight2","_callee83","disableCache","timeSinceFetch","expired","_context84","Date","now","_pollNewBlockhash","_blockhashWithExpiryBlockHeight","_x124","_pollNewBlockhash2","_callee84","startTime","cachedLatestBlockhash","cachedBlockhash","_context85","_getStakeMinimumDelegation","_callee85","_extractCommitmentFro24","_context86","getStakeMinimumDelegation","_x125","_simulateTransaction","_callee86","transactionOrMessage","configOrSigners","includeAccounts","versionedTx","_wireTransaction","_encodedTransaction","_config2","_args87","_unsafeRes","_res5","originalTx","_signature","encodedTransaction","_logs","traceIndent","logTrace","_context87","nonProgramIds","sigVerify","simulateTransaction","_x126","_x127","_x128","_sendTransaction","_callee87","signersOrOptions","_wireTransaction2","_signature2","_context88","sendRawTransaction","_x129","_x130","_x131","_sendRawTransaction","_callee88","rawTransaction","_context89","sendEncodedTransaction","_x132","_x133","_sendEncodedTransaction","_callee89","_logs2","_context90","_x134","_x135","_this9","setInterval","_callee90","_context91","notify","_updateSubscriptions","_this10","MAX_SAFE_INTEGER","clearInterval","_ref19","_ref20","_setSubscription","nextSubscription","_this$_subscriptionsB","prevState","stateChangeCallbacks","_unused2","clientSubscriptionId","_this$_subscriptionSt","_this11","_updateSubscriptions2","_callee94","activeWebSocketGeneration","isCurrentConnectionStillActive","_this12","_context95","connect","_ref21","_callee93","_context94","callbacks","serverSubscriptionId","_callee91","_serverSubscriptionId","_context92","_callee92","unsubscribeMethod","_context93","_x136","callbackArgs","_create","_handleServerNotification","subscriptionConfig","_this13","existingSubscription","_callee95","_context96","_makeSubscription","_removeAccountChangeListener","_callee96","_context97","_unsubscribeClientSubscription","removeAccountChangeListener","_x137","_create2","accountId","filters","_removeProgramAccountChangeListener","_callee97","_context98","removeProgramAccountChangeListener","_x138","mentions","_removeOnLogsListener","_callee98","_context99","removeOnLogsListener","_x139","_create3","_create4","_removeSlotChangeListener","_callee99","_context100","removeSlotChangeListener","_x140","_create5","_removeSlotUpdateListener","_callee100","_context101","removeSlotUpdateListener","_x141","_unsubscribeClientSubscription2","_callee101","subscriptionName","dispose","_context102","_x142","_x143","override","_options","_create6","_callback","_this14","_err","_callback2","_this15","_options$commitment","_excluded4","_removeSignatureListener","_callee102","_context103","_x144","_create7","_removeRootChangeListener","_callee103","_context104","removeRootChangeListener","_x145","Keypair","keypair","_keypair","skipValidation","computedPublicKey","ii","LOOKUP_TABLE_INSTRUCTION_LAYOUTS","CreateLookupTable","FreezeLookupTable","ExtendLookupTable","DeactivateLookupTable","CloseLookupTable","AddressLookupTableProgram","_PublicKey$findProgra","recentSlot","_PublicKey$findProgra2","lookupTableAddress","bumpSeed","addr","recipient","COMPUTE_BUDGET_INSTRUCTION_LAYOUTS","RequestUnits","RequestHeapFrame","SetComputeUnitLimit","SetComputeUnitPrice","ComputeBudgetProgram","microLamports","PRIVATE_KEY_BYTES$1","PUBLIC_KEY_BYTES$1","SIGNATURE_BYTES","ED25519_INSTRUCTION_LAYOUT","Ed25519Program","instructionIndex","publicKeyOffset","signatureOffset","messageDataOffset","numSignatures","padding","signatureInstructionIndex","publicKeyInstructionIndex","messageDataSize","messageInstructionIndex","fromSecretKey","createInstructionWithPublicKey","ecdsaSign","publicKeyCreate","PRIVATE_KEY_BYTES","ETHEREUM_ADDRESS_BYTES","PUBLIC_KEY_BYTES","SIGNATURE_OFFSETS_SERIALIZED_SIZE","SECP256K1_INSTRUCTION_LAYOUT","Secp256k1Program","recoveryId","createInstructionWithEthAddress","ethAddress","publicKeyToEthAddress","rawAddress","_params$instructionIn","dataStart","ethAddressOffset","ethAddressInstructionIndex","pkey","messageHash","_ecdsaSign","_ecdsaSign2","STAKE_CONFIG_ID","Lockup","unixTimestamp","custodian","STAKE_INSTRUCTION_LAYOUTS","Initialize","Authorize","Delegate","Split","Withdraw","Deactivate","Merge","AuthorizeWithSeed","StakeProgram","Staker","Withdrawer","stakePubkey","maybeLockup","staker","withdrawer","initialize","stakeAuthorizationType","custodianPubkey","newAuthorized","authorityBase","authoritySeed","authorityOwner","splitStakePubkey","splitInstruction","sourceStakePubKey","VOTE_INSTRUCTION_LAYOUTS","InitializeAccount","VoteProgram","Voter","authorizedVoter","authorizedWithdrawer","initializeAccount","voteAuthorizationType","currentAuthorityDerivedKeyBasePubkey","currentAuthorityDerivedKeyOwnerPubkey","currentAuthorityDerivedKeySeed","authorizedWithdrawerPubkey","currentVoteAccountBalance","rentExemptMinimum","withdraw","website","details","keybaseUsername","packages","init_package","__toCommonJS","package_exports","SolanaWallet","auth","isParticleNetwork","icon","events","_connecting","userInfo","getUserInfo","wallet","wallets","w","chain_name","public_address","_publicKey","userInfo2","particle","solanaWallet","once","off","removeListener","connecting","connected","__async","getWallet","disconnect","logout","signTransaction","Buffer2","signAllTransactions","tx","signed","signAndSendTransaction","signMessage","getConnection","rpcUrl","getChainId","projectId","clientKey","Authorization","basicCredentials","ToDictionary","stringToCodePoints","codePointsToString","code_points","cp","end_of_stream","Stream","tokens","endOfStream","prepend","token","decoderError","opt_code_point","Decoder","Encoder","handler","stream","bite","code_point","DEFAULT_ENCODING","_streaming","_BOMseen","_decoder","_fatal","_ignoreBOM","_encoder","UTF8Decoder","utf8_code_point","utf8_bytes_seen","utf8_bytes_needed","utf8_lower_boundary","utf8_upper_boundary","UTF8Encoder","temp","input_stream","opt_string"],"sourceRoot":""}